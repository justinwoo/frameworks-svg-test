// Compiled by ClojureScript 0.0-2725 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2725";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__6207__delegate = function (args){
return console.log.apply(console,(function (){var G__6206 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6206) : cljs.core.into_array.call(null,G__6206));
})());
};
var G__6207 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6208__i = 0, G__6208__a = new Array(arguments.length -  0);
while (G__6208__i < G__6208__a.length) {G__6208__a[G__6208__i] = arguments[G__6208__i + 0]; ++G__6208__i;}
  args = new cljs.core.IndexedSeq(G__6208__a,0);
} 
return G__6207__delegate.call(this,args);};
G__6207.cljs$lang$maxFixedArity = 0;
G__6207.cljs$lang$applyTo = (function (arglist__6209){
var args = cljs.core.seq(arglist__6209);
return G__6207__delegate(args);
});
G__6207.cljs$core$IFn$_invoke$arity$variadic = G__6207__delegate;
return G__6207;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__6211 = x;
return goog.isString(G__6211);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__6213 = x__$1;
return goog.typeOf(G__6213);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3743__auto__ = ty;
if(cljs.core.truth_(and__3743__auto__)){
return ty.cljs$lang$type;
} else {
return and__3743__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__6215 = obj;
return goog.typeOf(G__6215);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__6217 = Symbol;
return goog.typeOf(G__6217);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4642__auto___6219 = len;
var i_6220 = (0);
while(true){
if((i_6220 < n__4642__auto___6219)){
(new_arr[i_6220] = (arr[i_6220]));

var G__6221 = (i_6220 + (1));
i_6220 = G__6221;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__6222 = (i + (1));
i = G__6222;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__6231__delegate = function (array,i,idxs){
var G__6228 = aget;
var G__6229 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__6230 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6228,G__6229,G__6230) : cljs.core.apply.call(null,G__6228,G__6229,G__6230));
};
var G__6231 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__6232__i = 0, G__6232__a = new Array(arguments.length -  2);
while (G__6232__i < G__6232__a.length) {G__6232__a[G__6232__i] = arguments[G__6232__i + 2]; ++G__6232__i;}
  idxs = new cljs.core.IndexedSeq(G__6232__a,0);
} 
return G__6231__delegate.call(this,array,i,idxs);};
G__6231.cljs$lang$maxFixedArity = 2;
G__6231.cljs$lang$applyTo = (function (arglist__6233){
var array = cljs.core.first(arglist__6233);
arglist__6233 = cljs.core.next(arglist__6233);
var i = cljs.core.first(arglist__6233);
var idxs = cljs.core.rest(arglist__6233);
return G__6231__delegate(array,i,idxs);
});
G__6231.cljs$core$IFn$_invoke$arity$variadic = G__6231__delegate;
return G__6231;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__6234 = null;
if (arguments.length > 2) {
var G__6235__i = 0, G__6235__a = new Array(arguments.length -  2);
while (G__6235__i < G__6235__a.length) {G__6235__a[G__6235__i] = arguments[G__6235__i + 2]; ++G__6235__i;}
G__6234 = new cljs.core.IndexedSeq(G__6235__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__6234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__6244__delegate = function (array,idx,idx2,idxv){
var G__6240 = aset;
var G__6241 = (array[idx]);
var G__6242 = idx2;
var G__6243 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6240,G__6241,G__6242,G__6243) : cljs.core.apply.call(null,G__6240,G__6241,G__6242,G__6243));
};
var G__6244 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__6245__i = 0, G__6245__a = new Array(arguments.length -  3);
while (G__6245__i < G__6245__a.length) {G__6245__a[G__6245__i] = arguments[G__6245__i + 3]; ++G__6245__i;}
  idxv = new cljs.core.IndexedSeq(G__6245__a,0);
} 
return G__6244__delegate.call(this,array,idx,idx2,idxv);};
G__6244.cljs$lang$maxFixedArity = 3;
G__6244.cljs$lang$applyTo = (function (arglist__6246){
var array = cljs.core.first(arglist__6246);
arglist__6246 = cljs.core.next(arglist__6246);
var idx = cljs.core.first(arglist__6246);
arglist__6246 = cljs.core.next(arglist__6246);
var idx2 = cljs.core.first(arglist__6246);
var idxv = cljs.core.rest(arglist__6246);
return G__6244__delegate(array,idx,idx2,idxv);
});
G__6244.cljs$core$IFn$_invoke$arity$variadic = G__6244__delegate;
return G__6244;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__6247 = null;
if (arguments.length > 3) {
var G__6248__i = 0, G__6248__a = new Array(arguments.length -  3);
while (G__6248__i < G__6248__a.length) {G__6248__a[G__6248__i] = arguments[G__6248__i + 3]; ++G__6248__i;}
G__6247 = new cljs.core.IndexedSeq(G__6248__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__6247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__6254 = (function (a,x){
a.push(x);

return a;
});
var G__6255 = [];
var G__6256 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6254,G__6255,G__6256) : cljs.core.reduce.call(null,G__6254,G__6255,G__6256));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__6257__i = 0, G__6257__a = new Array(arguments.length -  2);
while (G__6257__i < G__6257__a.length) {G__6257__a[G__6257__i] = arguments[G__6257__i + 2]; ++G__6257__i;}
  args = new cljs.core.IndexedSeq(G__6257__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__6258){
var obj = cljs.core.first(arglist__6258);
arglist__6258 = cljs.core.next(arglist__6258);
var s = cljs.core.first(arglist__6258);
var args = cljs.core.rest(arglist__6258);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj6260 = {};
return obj6260;
})();


cljs.core.IFn = (function (){var obj6262 = {};
return obj6262;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6308 = x__4399__auto__;
return goog.typeOf(G__6308);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6310 = x__4399__auto__;
return goog.typeOf(G__6310);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6312 = x__4399__auto__;
return goog.typeOf(G__6312);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6314 = x__4399__auto__;
return goog.typeOf(G__6314);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6316 = x__4399__auto__;
return goog.typeOf(G__6316);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6318 = x__4399__auto__;
return goog.typeOf(G__6318);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6320 = x__4399__auto__;
return goog.typeOf(G__6320);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6322 = x__4399__auto__;
return goog.typeOf(G__6322);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6324 = x__4399__auto__;
return goog.typeOf(G__6324);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6326 = x__4399__auto__;
return goog.typeOf(G__6326);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6328 = x__4399__auto__;
return goog.typeOf(G__6328);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6330 = x__4399__auto__;
return goog.typeOf(G__6330);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6332 = x__4399__auto__;
return goog.typeOf(G__6332);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6334 = x__4399__auto__;
return goog.typeOf(G__6334);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6336 = x__4399__auto__;
return goog.typeOf(G__6336);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6338 = x__4399__auto__;
return goog.typeOf(G__6338);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6340 = x__4399__auto__;
return goog.typeOf(G__6340);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6342 = x__4399__auto__;
return goog.typeOf(G__6342);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6344 = x__4399__auto__;
return goog.typeOf(G__6344);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6346 = x__4399__auto__;
return goog.typeOf(G__6346);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6348 = x__4399__auto__;
return goog.typeOf(G__6348);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._invoke[(function (){var G__6350 = x__4399__auto__;
return goog.typeOf(G__6350);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._invoke["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj6352 = {};
return obj6352;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3743__auto__ = value;
if(and__3743__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3743__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4399__auto__ = (((value == null))?null:value);
return (function (){var or__3755__auto__ = (cljs.core._clone[(function (){var G__6356 = x__4399__auto__;
return goog.typeOf(G__6356);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._clone["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj6358 = {};
return obj6358;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._count[(function (){var G__6362 = x__4399__auto__;
return goog.typeOf(G__6362);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._count["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj6364 = {};
return obj6364;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._empty[(function (){var G__6368 = x__4399__auto__;
return goog.typeOf(G__6368);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._empty["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj6370 = {};
return obj6370;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._conj[(function (){var G__6374 = x__4399__auto__;
return goog.typeOf(G__6374);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._conj["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj6376 = {};
return obj6376;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._nth[(function (){var G__6382 = x__4399__auto__;
return goog.typeOf(G__6382);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._nth["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._nth[(function (){var G__6384 = x__4399__auto__;
return goog.typeOf(G__6384);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._nth["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj6386 = {};
return obj6386;
})();


cljs.core.ISeq = (function (){var obj6388 = {};
return obj6388;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._first[(function (){var G__6392 = x__4399__auto__;
return goog.typeOf(G__6392);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._first["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._rest[(function (){var G__6396 = x__4399__auto__;
return goog.typeOf(G__6396);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._rest["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj6398 = {};
return obj6398;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._next[(function (){var G__6402 = x__4399__auto__;
return goog.typeOf(G__6402);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._next["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj6404 = {};
return obj6404;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._lookup[(function (){var G__6410 = x__4399__auto__;
return goog.typeOf(G__6410);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._lookup["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._lookup[(function (){var G__6412 = x__4399__auto__;
return goog.typeOf(G__6412);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._lookup["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj6414 = {};
return obj6414;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6418 = x__4399__auto__;
return goog.typeOf(G__6418);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._assoc[(function (){var G__6422 = x__4399__auto__;
return goog.typeOf(G__6422);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._assoc["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj6424 = {};
return obj6424;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._dissoc[(function (){var G__6428 = x__4399__auto__;
return goog.typeOf(G__6428);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj6430 = {};
return obj6430;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._key[(function (){var G__6434 = x__4399__auto__;
return goog.typeOf(G__6434);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._key["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._val[(function (){var G__6438 = x__4399__auto__;
return goog.typeOf(G__6438);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._val["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj6440 = {};
return obj6440;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._disjoin[(function (){var G__6444 = x__4399__auto__;
return goog.typeOf(G__6444);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj6446 = {};
return obj6446;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._peek[(function (){var G__6450 = x__4399__auto__;
return goog.typeOf(G__6450);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._peek["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._pop[(function (){var G__6454 = x__4399__auto__;
return goog.typeOf(G__6454);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._pop["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj6456 = {};
return obj6456;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._assoc_n[(function (){var G__6460 = x__4399__auto__;
return goog.typeOf(G__6460);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj6462 = {};
return obj6462;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._deref[(function (){var G__6466 = x__4399__auto__;
return goog.typeOf(G__6466);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._deref["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6468 = {};
return obj6468;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6472 = x__4399__auto__;
return goog.typeOf(G__6472);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj6474 = {};
return obj6474;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._meta[(function (){var G__6478 = x__4399__auto__;
return goog.typeOf(G__6478);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._meta["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj6480 = {};
return obj6480;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._with_meta[(function (){var G__6484 = x__4399__auto__;
return goog.typeOf(G__6484);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj6486 = {};
return obj6486;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._reduce[(function (){var G__6492 = x__4399__auto__;
return goog.typeOf(G__6492);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._reduce["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._reduce[(function (){var G__6494 = x__4399__auto__;
return goog.typeOf(G__6494);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._reduce["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj6496 = {};
return obj6496;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._kv_reduce[(function (){var G__6500 = x__4399__auto__;
return goog.typeOf(G__6500);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj6502 = {};
return obj6502;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._equiv[(function (){var G__6506 = x__4399__auto__;
return goog.typeOf(G__6506);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._equiv["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj6508 = {};
return obj6508;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._hash[(function (){var G__6512 = x__4399__auto__;
return goog.typeOf(G__6512);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._hash["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj6514 = {};
return obj6514;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._seq[(function (){var G__6518 = x__4399__auto__;
return goog.typeOf(G__6518);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._seq["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj6520 = {};
return obj6520;
})();


cljs.core.IList = (function (){var obj6522 = {};
return obj6522;
})();


cljs.core.IRecord = (function (){var obj6524 = {};
return obj6524;
})();


cljs.core.IReversible = (function (){var obj6526 = {};
return obj6526;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._rseq[(function (){var G__6530 = x__4399__auto__;
return goog.typeOf(G__6530);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._rseq["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj6532 = {};
return obj6532;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._sorted_seq[(function (){var G__6536 = x__4399__auto__;
return goog.typeOf(G__6536);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6540 = x__4399__auto__;
return goog.typeOf(G__6540);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._entry_key[(function (){var G__6544 = x__4399__auto__;
return goog.typeOf(G__6544);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._comparator[(function (){var G__6548 = x__4399__auto__;
return goog.typeOf(G__6548);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._comparator["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj6550 = {};
return obj6550;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3743__auto__ = writer;
if(and__3743__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3743__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4399__auto__ = (((writer == null))?null:writer);
return (function (){var or__3755__auto__ = (cljs.core._write[(function (){var G__6554 = x__4399__auto__;
return goog.typeOf(G__6554);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._write["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3743__auto__ = writer;
if(and__3743__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3743__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4399__auto__ = (((writer == null))?null:writer);
return (function (){var or__3755__auto__ = (cljs.core._flush[(function (){var G__6558 = x__4399__auto__;
return goog.typeOf(G__6558);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._flush["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj6560 = {};
return obj6560;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._pr_writer[(function (){var G__6564 = x__4399__auto__;
return goog.typeOf(G__6564);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj6566 = {};
return obj6566;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3743__auto__ = d;
if(and__3743__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3743__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4399__auto__ = (((d == null))?null:d);
return (function (){var or__3755__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6570 = x__4399__auto__;
return goog.typeOf(G__6570);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj6572 = {};
return obj6572;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._notify_watches[(function (){var G__6576 = x__4399__auto__;
return goog.typeOf(G__6576);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._add_watch[(function (){var G__6580 = x__4399__auto__;
return goog.typeOf(G__6580);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3743__auto__ = this$;
if(and__3743__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3743__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4399__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3755__auto__ = (cljs.core._remove_watch[(function (){var G__6584 = x__4399__auto__;
return goog.typeOf(G__6584);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj6586 = {};
return obj6586;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._as_transient[(function (){var G__6590 = x__4399__auto__;
return goog.typeOf(G__6590);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj6592 = {};
return obj6592;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3743__auto__ = tcoll;
if(and__3743__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3743__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4399__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3755__auto__ = (cljs.core._conj_BANG_[(function (){var G__6596 = x__4399__auto__;
return goog.typeOf(G__6596);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3743__auto__ = tcoll;
if(and__3743__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3743__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4399__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3755__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6600 = x__4399__auto__;
return goog.typeOf(G__6600);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj6602 = {};
return obj6602;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3743__auto__ = tcoll;
if(and__3743__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3743__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4399__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3755__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6606 = x__4399__auto__;
return goog.typeOf(G__6606);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj6608 = {};
return obj6608;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3743__auto__ = tcoll;
if(and__3743__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3743__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4399__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3755__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6612 = x__4399__auto__;
return goog.typeOf(G__6612);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj6614 = {};
return obj6614;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3743__auto__ = tcoll;
if(and__3743__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3743__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4399__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3755__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6618 = x__4399__auto__;
return goog.typeOf(G__6618);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3743__auto__ = tcoll;
if(and__3743__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3743__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4399__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3755__auto__ = (cljs.core._pop_BANG_[(function (){var G__6622 = x__4399__auto__;
return goog.typeOf(G__6622);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj6624 = {};
return obj6624;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3743__auto__ = tcoll;
if(and__3743__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3743__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4399__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3755__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6628 = x__4399__auto__;
return goog.typeOf(G__6628);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj6630 = {};
return obj6630;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3743__auto__ = x;
if(and__3743__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3743__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4399__auto__ = (((x == null))?null:x);
return (function (){var or__3755__auto__ = (cljs.core._compare[(function (){var G__6634 = x__4399__auto__;
return goog.typeOf(G__6634);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._compare["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj6636 = {};
return obj6636;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._drop_first[(function (){var G__6640 = x__4399__auto__;
return goog.typeOf(G__6640);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj6642 = {};
return obj6642;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._chunked_first[(function (){var G__6646 = x__4399__auto__;
return goog.typeOf(G__6646);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._chunked_rest[(function (){var G__6650 = x__4399__auto__;
return goog.typeOf(G__6650);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj6652 = {};
return obj6652;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._chunked_next[(function (){var G__6656 = x__4399__auto__;
return goog.typeOf(G__6656);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj6658 = {};
return obj6658;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3743__auto__ = x;
if(and__3743__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3743__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4399__auto__ = (((x == null))?null:x);
return (function (){var or__3755__auto__ = (cljs.core._name[(function (){var G__6662 = x__4399__auto__;
return goog.typeOf(G__6662);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._name["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3743__auto__ = x;
if(and__3743__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3743__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4399__auto__ = (((x == null))?null:x);
return (function (){var or__3755__auto__ = (cljs.core._namespace[(function (){var G__6666 = x__4399__auto__;
return goog.typeOf(G__6666);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._namespace["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj6668 = {};
return obj6668;
})();


cljs.core.IReset = (function (){var obj6670 = {};
return obj6670;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._reset_BANG_[(function (){var G__6674 = x__4399__auto__;
return goog.typeOf(G__6674);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj6676 = {};
return obj6676;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._swap_BANG_[(function (){var G__6686 = x__4399__auto__;
return goog.typeOf(G__6686);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._swap_BANG_[(function (){var G__6688 = x__4399__auto__;
return goog.typeOf(G__6688);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._swap_BANG_[(function (){var G__6690 = x__4399__auto__;
return goog.typeOf(G__6690);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._swap_BANG_[(function (){var G__6692 = x__4399__auto__;
return goog.typeOf(G__6692);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj6694 = {};
return obj6694;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3743__auto__ = o;
if(and__3743__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3743__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4399__auto__ = (((o == null))?null:o);
return (function (){var or__3755__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6698 = x__4399__auto__;
return goog.typeOf(G__6698);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj6700 = {};
return obj6700;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3743__auto__ = coll;
if(and__3743__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3743__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4399__auto__ = (((coll == null))?null:coll);
return (function (){var or__3755__auto__ = (cljs.core._iterator[(function (){var G__6704 = x__4399__auto__;
return goog.typeOf(G__6704);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._iterator["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6707 = (4294967295);
var G__6708 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6707,G__6708) : Math.imul.call(null,G__6707,G__6708));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__6711 = a;
var G__6712 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6711,G__6712) : Math.imul.call(null,G__6711,G__6712));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6713 = (i + (2));
var G__6714 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6713;
h1 = G__6714;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6716 = {};
return obj6716;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6717 = (i + (1));
var G__6718 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6717;
hash = G__6718;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6722 = {};
return obj6722;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__6725 = o;
if(G__6725){
var bit__4429__auto__ = (G__6725.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4429__auto__) || (G__6725.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6726 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6726) : Math.floor.call(null,G__6726));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3743__auto__ = cljs.core.not(a.ns);
if(and__3743__auto__){
return b.ns;
} else {
return and__3743__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6733 = a.ns;
var G__6734 = b.ns;
return goog.array.defaultCompare(G__6733,G__6734);
})();
if(((0) === nsc)){
var G__6735 = a.name;
var G__6736 = b.name;
return goog.array.defaultCompare(G__6735,G__6736);
} else {
return nsc;
}
}
} else {
var G__6737 = a.name;
var G__6738 = b.name;
return goog.array.defaultCompare(G__6737,G__6738);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4176__auto__ = self__._hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6740 = null;
var G__6740__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6740__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6740 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6740__2.call(this,self__,coll);
case 3:
return G__6740__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6740.cljs$core$IFn$_invoke$arity$2 = G__6740__2;
G__6740.cljs$core$IFn$_invoke$arity$3 = G__6740__3;
return G__6740;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6739){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6739)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6788 = null;
var G__6788__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6788__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6788__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6788__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6788__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6788__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6788__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6788__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6788__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6788__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6788__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6788__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6788__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6788__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6788__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6788__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6788__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6788__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6788__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6788__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6788__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6788__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6744 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6745 = a;
var G__6746 = b;
var G__6747 = c;
var G__6748 = d;
var G__6749 = e;
var G__6750 = f;
var G__6751 = g;
var G__6752 = h;
var G__6753 = i;
var G__6754 = j;
var G__6755 = k;
var G__6756 = l;
var G__6757 = m;
var G__6758 = n;
var G__6759 = o;
var G__6760 = p;
var G__6761 = q;
var G__6762 = r;
var G__6763 = s;
var G__6764 = t;
var G__6765 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763,G__6764,G__6765) : cljs.core.apply.call(null,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763,G__6764,G__6765));
});
G__6788 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6788__1.call(this,self__);
case 2:
return G__6788__2.call(this,self__,a);
case 3:
return G__6788__3.call(this,self__,a,b);
case 4:
return G__6788__4.call(this,self__,a,b,c);
case 5:
return G__6788__5.call(this,self__,a,b,c,d);
case 6:
return G__6788__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6788__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6788__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6788__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6788__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6788__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6788__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6788__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6788__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6788__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6788__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6788__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6788__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6788__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6788__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6788__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6788__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6788.cljs$core$IFn$_invoke$arity$1 = G__6788__1;
G__6788.cljs$core$IFn$_invoke$arity$2 = G__6788__2;
G__6788.cljs$core$IFn$_invoke$arity$3 = G__6788__3;
G__6788.cljs$core$IFn$_invoke$arity$4 = G__6788__4;
G__6788.cljs$core$IFn$_invoke$arity$5 = G__6788__5;
G__6788.cljs$core$IFn$_invoke$arity$6 = G__6788__6;
G__6788.cljs$core$IFn$_invoke$arity$7 = G__6788__7;
G__6788.cljs$core$IFn$_invoke$arity$8 = G__6788__8;
G__6788.cljs$core$IFn$_invoke$arity$9 = G__6788__9;
G__6788.cljs$core$IFn$_invoke$arity$10 = G__6788__10;
G__6788.cljs$core$IFn$_invoke$arity$11 = G__6788__11;
G__6788.cljs$core$IFn$_invoke$arity$12 = G__6788__12;
G__6788.cljs$core$IFn$_invoke$arity$13 = G__6788__13;
G__6788.cljs$core$IFn$_invoke$arity$14 = G__6788__14;
G__6788.cljs$core$IFn$_invoke$arity$15 = G__6788__15;
G__6788.cljs$core$IFn$_invoke$arity$16 = G__6788__16;
G__6788.cljs$core$IFn$_invoke$arity$17 = G__6788__17;
G__6788.cljs$core$IFn$_invoke$arity$18 = G__6788__18;
G__6788.cljs$core$IFn$_invoke$arity$19 = G__6788__19;
G__6788.cljs$core$IFn$_invoke$arity$20 = G__6788__20;
G__6788.cljs$core$IFn$_invoke$arity$21 = G__6788__21;
G__6788.cljs$core$IFn$_invoke$arity$22 = G__6788__22;
return G__6788;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6743){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6743)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6766 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6767 = a;
var G__6768 = b;
var G__6769 = c;
var G__6770 = d;
var G__6771 = e;
var G__6772 = f;
var G__6773 = g;
var G__6774 = h;
var G__6775 = i;
var G__6776 = j;
var G__6777 = k;
var G__6778 = l;
var G__6779 = m;
var G__6780 = n;
var G__6781 = o;
var G__6782 = p;
var G__6783 = q;
var G__6784 = r;
var G__6785 = s;
var G__6786 = t;
var G__6787 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772,G__6773,G__6774,G__6775,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782,G__6783,G__6784,G__6785,G__6786,G__6787) : cljs.core.apply.call(null,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772,G__6773,G__6774,G__6775,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782,G__6783,G__6784,G__6785,G__6786,G__6787));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__6790 = x;
if(G__6790){
var bit__4436__auto__ = null;
if(cljs.core.truth_((function (){var or__3755__auto__ = bit__4436__auto__;
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return G__6790.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6790.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6790);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6790);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__6792 = value;
if(G__6792){
var bit__4436__auto__ = (G__6792.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4436__auto__) || (G__6792.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6792.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6792);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6792);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6794 = coll;
if(G__6794){
var bit__4429__auto__ = (G__6794.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4429__auto__) || (G__6794.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6796 = coll;
if(G__6796){
var bit__4429__auto__ = (G__6796.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4429__auto__) || (G__6796.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__6798 = coll;
if(G__6798){
var bit__4429__auto__ = (G__6798.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4429__auto__) || (G__6798.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6800 = coll;
if(G__6800){
var bit__4429__auto__ = (G__6800.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4429__auto__) || (G__6800.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__6805__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6806 = y;
var G__6807 = cljs.core.first(more);
var G__6808 = cljs.core.next(more);
x = G__6806;
y = G__6807;
more = G__6808;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6805 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6809__i = 0, G__6809__a = new Array(arguments.length -  2);
while (G__6809__i < G__6809__a.length) {G__6809__a[G__6809__i] = arguments[G__6809__i + 2]; ++G__6809__i;}
  more = new cljs.core.IndexedSeq(G__6809__a,0);
} 
return G__6805__delegate.call(this,x,y,more);};
G__6805.cljs$lang$maxFixedArity = 2;
G__6805.cljs$lang$applyTo = (function (arglist__6810){
var x = cljs.core.first(arglist__6810);
arglist__6810 = cljs.core.next(arglist__6810);
var y = cljs.core.first(arglist__6810);
var more = cljs.core.rest(arglist__6810);
return G__6805__delegate(x,y,more);
});
G__6805.cljs$core$IFn$_invoke$arity$variadic = G__6805__delegate;
return G__6805;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__6811 = null;
if (arguments.length > 2) {
var G__6812__i = 0, G__6812__a = new Array(arguments.length -  2);
while (G__6812__i < G__6812__a.length) {G__6812__a[G__6812__i] = arguments[G__6812__i + 2]; ++G__6812__i;}
G__6811 = new cljs.core.IndexedSeq(G__6812__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6813 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6813) : cljs.core.es6_iterator_seq.call(null,G__6813));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6814 = (n + (1));
var G__6815 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6816 = cljs.core.next(coll__$1);
n = G__6814;
hash_code = G__6815;
coll__$1 = G__6816;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6817 = (n + (1));
var G__6818 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6819 = cljs.core.next(coll__$1);
n = G__6817;
hash_code = G__6818;
coll__$1 = G__6819;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6820 = o;
return goog.getUid(G__6820);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6822 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6822) : cljs.core.deref.call(null,G__6822));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6829 = val;
var G__6830 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6829,G__6830) : f.call(null,G__6829,G__6830));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6835 = nval;
var G__6836 = (n + (1));
val = G__6835;
n = G__6836;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6831 = val__$1;
var G__6832 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6831,G__6832) : f.call(null,G__6831,G__6832));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6837 = nval;
var G__6838 = (n + (1));
val__$1 = G__6837;
n = G__6838;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6833 = val__$1;
var G__6834 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6833,G__6834) : f.call(null,G__6833,G__6834));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6839 = nval;
var G__6840 = (n + (1));
val__$1 = G__6839;
n = G__6840;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6847 = val;
var G__6848 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6847,G__6848) : f.call(null,G__6847,G__6848));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6853 = nval;
var G__6854 = (n + (1));
val = G__6853;
n = G__6854;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6849 = val__$1;
var G__6850 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6849,G__6850) : f.call(null,G__6849,G__6850));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6855 = nval;
var G__6856 = (n + (1));
val__$1 = G__6855;
n = G__6856;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6851 = val__$1;
var G__6852 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6851,G__6852) : f.call(null,G__6851,G__6852));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6857 = nval;
var G__6858 = (n + (1));
val__$1 = G__6857;
n = G__6858;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__6860 = x;
if(G__6860){
var bit__4436__auto__ = (G__6860.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4436__auto__) || (G__6860.cljs$core$ICounted$)){
return true;
} else {
if((!G__6860.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6860);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6860);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__6862 = x;
if(G__6862){
var bit__4436__auto__ = (G__6862.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4436__auto__) || (G__6862.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6862.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6862);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6862);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6863 = coll__$1;
var G__6864 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6863,G__6864) : cljs.core.equiv_sequential.call(null,G__6863,G__6864));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6865 = o;
var G__6866 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6865,G__6866) : cljs.core.cons.call(null,G__6865,G__6866));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6869 = coll__$1;
var G__6870 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6869,G__6870) : cljs.core.equiv_sequential.call(null,G__6869,G__6870));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6871 = cljs.core.List.EMPTY;
var G__6872 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6871,G__6872) : cljs.core.with_meta.call(null,G__6871,G__6872));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6873 = f;
var G__6874 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6873,G__6874) : cljs.core.seq_reduce.call(null,G__6873,G__6874));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6875 = f;
var G__6876 = start;
var G__6877 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6875,G__6876,G__6877) : cljs.core.seq_reduce.call(null,G__6875,G__6876,G__6877));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6878 = o;
var G__6879 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6878,G__6879) : cljs.core.cons.call(null,G__6878,G__6879));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6880 = sn;
s = G__6880;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__6885__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6886 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6887 = cljs.core.first(xs);
var G__6888 = cljs.core.next(xs);
coll = G__6886;
x = G__6887;
xs = G__6888;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6885 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6889__i = 0, G__6889__a = new Array(arguments.length -  2);
while (G__6889__i < G__6889__a.length) {G__6889__a[G__6889__i] = arguments[G__6889__i + 2]; ++G__6889__i;}
  xs = new cljs.core.IndexedSeq(G__6889__a,0);
} 
return G__6885__delegate.call(this,coll,x,xs);};
G__6885.cljs$lang$maxFixedArity = 2;
G__6885.cljs$lang$applyTo = (function (arglist__6890){
var coll = cljs.core.first(arglist__6890);
arglist__6890 = cljs.core.next(arglist__6890);
var x = cljs.core.first(arglist__6890);
var xs = cljs.core.rest(arglist__6890);
return G__6885__delegate(coll,x,xs);
});
G__6885.cljs$core$IFn$_invoke$arity$variadic = G__6885__delegate;
return G__6885;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__6891 = null;
if (arguments.length > 2) {
var G__6892__i = 0, G__6892__a = new Array(arguments.length -  2);
while (G__6892__i < G__6892__a.length) {G__6892__a[G__6892__i] = arguments[G__6892__i + 2]; ++G__6892__i;}
G__6891 = new cljs.core.IndexedSeq(G__6892__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6891);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6893 = cljs.core.next(s);
var G__6894 = (acc + (1));
s = G__6893;
acc = G__6894;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__6896 = coll;
if(G__6896){
var bit__4429__auto__ = (G__6896.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4429__auto__) || (G__6896.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6897 = cljs.core.next(coll);
var G__6898 = (n - (1));
coll = G__6897;
n = G__6898;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6899 = cljs.core.next(coll);
var G__6900 = (n - (1));
var G__6901 = not_found;
coll = G__6899;
n = G__6900;
not_found = G__6901;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6906 = coll;
if(G__6906){
var bit__4429__auto__ = (G__6906.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4429__auto__) || (G__6906.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6907 = coll;
if(G__6907){
var bit__4436__auto__ = (G__6907.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4436__auto__) || (G__6907.cljs$core$ISeq$)){
return true;
} else {
if((!G__6907.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6907);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6907);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6908 = coll;
if(G__6908){
var bit__4429__auto__ = (G__6908.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4429__auto__) || (G__6908.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6909 = coll;
if(G__6909){
var bit__4436__auto__ = (G__6909.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4436__auto__) || (G__6909.cljs$core$ISeq$)){
return true;
} else {
if((!G__6909.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6909);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6909);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6910 = (n__$1 - (1));
var G__6911 = cljs.core.rest(xs);
n__$1 = G__6910;
xs = G__6911;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6914 = o;
if(G__6914){
var bit__4429__auto__ = (G__6914.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4429__auto__) || (G__6914.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6915 = o;
if(G__6915){
var bit__4429__auto__ = (G__6915.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4429__auto__) || (G__6915.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__6919__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6920 = ret;
var G__6921 = cljs.core.first(kvs);
var G__6922 = cljs.core.second(kvs);
var G__6923 = cljs.core.nnext(kvs);
coll = G__6920;
k = G__6921;
v = G__6922;
kvs = G__6923;
continue;
} else {
return ret;
}
break;
}
};
var G__6919 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6924__i = 0, G__6924__a = new Array(arguments.length -  3);
while (G__6924__i < G__6924__a.length) {G__6924__a[G__6924__i] = arguments[G__6924__i + 3]; ++G__6924__i;}
  kvs = new cljs.core.IndexedSeq(G__6924__a,0);
} 
return G__6919__delegate.call(this,coll,k,v,kvs);};
G__6919.cljs$lang$maxFixedArity = 3;
G__6919.cljs$lang$applyTo = (function (arglist__6925){
var coll = cljs.core.first(arglist__6925);
arglist__6925 = cljs.core.next(arglist__6925);
var k = cljs.core.first(arglist__6925);
arglist__6925 = cljs.core.next(arglist__6925);
var v = cljs.core.first(arglist__6925);
var kvs = cljs.core.rest(arglist__6925);
return G__6919__delegate(coll,k,v,kvs);
});
G__6919.cljs$core$IFn$_invoke$arity$variadic = G__6919__delegate;
return G__6919;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__6926 = null;
if (arguments.length > 3) {
var G__6927__i = 0, G__6927__a = new Array(arguments.length -  3);
while (G__6927__i < G__6927__a.length) {G__6927__a[G__6927__i] = arguments[G__6927__i + 3]; ++G__6927__i;}
G__6926 = new cljs.core.IndexedSeq(G__6927__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__6930__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6931 = ret;
var G__6932 = cljs.core.first(ks);
var G__6933 = cljs.core.next(ks);
coll = G__6931;
k = G__6932;
ks = G__6933;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6930 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6934__i = 0, G__6934__a = new Array(arguments.length -  2);
while (G__6934__i < G__6934__a.length) {G__6934__a[G__6934__i] = arguments[G__6934__i + 2]; ++G__6934__i;}
  ks = new cljs.core.IndexedSeq(G__6934__a,0);
} 
return G__6930__delegate.call(this,coll,k,ks);};
G__6930.cljs$lang$maxFixedArity = 2;
G__6930.cljs$lang$applyTo = (function (arglist__6935){
var coll = cljs.core.first(arglist__6935);
arglist__6935 = cljs.core.next(arglist__6935);
var k = cljs.core.first(arglist__6935);
var ks = cljs.core.rest(arglist__6935);
return G__6930__delegate(coll,k,ks);
});
G__6930.cljs$core$IFn$_invoke$arity$variadic = G__6930__delegate;
return G__6930;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__6936 = null;
if (arguments.length > 2) {
var G__6937__i = 0, G__6937__a = new Array(arguments.length -  2);
while (G__6937__i < G__6937__a.length) {G__6937__a[G__6937__i] = arguments[G__6937__i + 2]; ++G__6937__i;}
G__6936 = new cljs.core.IndexedSeq(G__6937__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3755__auto__ = (function (){var G__6942 = f;
return goog.isFunction(G__6942);
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var G__6943 = f;
if(G__6943){
var bit__4436__auto__ = null;
if(cljs.core.truth_((function (){var or__3755__auto____$1 = bit__4436__auto__;
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
return G__6943.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6943.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6943);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6943);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7409 = null;
var G__7409__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7409__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6945 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6945) : self__.afn.call(null,G__6945));
});
var G__7409__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6946 = a;
var G__6947 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6946,G__6947) : self__.afn.call(null,G__6946,G__6947));
});
var G__7409__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6948 = a;
var G__6949 = b;
var G__6950 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6948,G__6949,G__6950) : self__.afn.call(null,G__6948,G__6949,G__6950));
});
var G__7409__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6951 = a;
var G__6952 = b;
var G__6953 = c;
var G__6954 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6951,G__6952,G__6953,G__6954) : self__.afn.call(null,G__6951,G__6952,G__6953,G__6954));
});
var G__7409__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6955 = a;
var G__6956 = b;
var G__6957 = c;
var G__6958 = d;
var G__6959 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6955,G__6956,G__6957,G__6958,G__6959) : self__.afn.call(null,G__6955,G__6956,G__6957,G__6958,G__6959));
});
var G__7409__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6960 = a;
var G__6961 = b;
var G__6962 = c;
var G__6963 = d;
var G__6964 = e;
var G__6965 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6960,G__6961,G__6962,G__6963,G__6964,G__6965) : self__.afn.call(null,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965));
});
var G__7409__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6966 = a;
var G__6967 = b;
var G__6968 = c;
var G__6969 = d;
var G__6970 = e;
var G__6971 = f;
var G__6972 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6966,G__6967,G__6968,G__6969,G__6970,G__6971,G__6972) : self__.afn.call(null,G__6966,G__6967,G__6968,G__6969,G__6970,G__6971,G__6972));
});
var G__7409__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6973 = a;
var G__6974 = b;
var G__6975 = c;
var G__6976 = d;
var G__6977 = e;
var G__6978 = f;
var G__6979 = g;
var G__6980 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980) : self__.afn.call(null,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980));
});
var G__7409__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6981 = a;
var G__6982 = b;
var G__6983 = c;
var G__6984 = d;
var G__6985 = e;
var G__6986 = f;
var G__6987 = g;
var G__6988 = h;
var G__6989 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988,G__6989) : self__.afn.call(null,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988,G__6989));
});
var G__7409__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6990 = a;
var G__6991 = b;
var G__6992 = c;
var G__6993 = d;
var G__6994 = e;
var G__6995 = f;
var G__6996 = g;
var G__6997 = h;
var G__6998 = i;
var G__6999 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6990,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999) : self__.afn.call(null,G__6990,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999));
});
var G__7409__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7000 = a;
var G__7001 = b;
var G__7002 = c;
var G__7003 = d;
var G__7004 = e;
var G__7005 = f;
var G__7006 = g;
var G__7007 = h;
var G__7008 = i;
var G__7009 = j;
var G__7010 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7000,G__7001,G__7002,G__7003,G__7004,G__7005,G__7006,G__7007,G__7008,G__7009,G__7010) : self__.afn.call(null,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005,G__7006,G__7007,G__7008,G__7009,G__7010));
});
var G__7409__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7011 = a;
var G__7012 = b;
var G__7013 = c;
var G__7014 = d;
var G__7015 = e;
var G__7016 = f;
var G__7017 = g;
var G__7018 = h;
var G__7019 = i;
var G__7020 = j;
var G__7021 = k;
var G__7022 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021,G__7022) : self__.afn.call(null,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021,G__7022));
});
var G__7409__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7023 = a;
var G__7024 = b;
var G__7025 = c;
var G__7026 = d;
var G__7027 = e;
var G__7028 = f;
var G__7029 = g;
var G__7030 = h;
var G__7031 = i;
var G__7032 = j;
var G__7033 = k;
var G__7034 = l;
var G__7035 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7023,G__7024,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034,G__7035) : self__.afn.call(null,G__7023,G__7024,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034,G__7035));
});
var G__7409__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7036 = a;
var G__7037 = b;
var G__7038 = c;
var G__7039 = d;
var G__7040 = e;
var G__7041 = f;
var G__7042 = g;
var G__7043 = h;
var G__7044 = i;
var G__7045 = j;
var G__7046 = k;
var G__7047 = l;
var G__7048 = m;
var G__7049 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046,G__7047,G__7048,G__7049) : self__.afn.call(null,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046,G__7047,G__7048,G__7049));
});
var G__7409__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7050 = a;
var G__7051 = b;
var G__7052 = c;
var G__7053 = d;
var G__7054 = e;
var G__7055 = f;
var G__7056 = g;
var G__7057 = h;
var G__7058 = i;
var G__7059 = j;
var G__7060 = k;
var G__7061 = l;
var G__7062 = m;
var G__7063 = n;
var G__7064 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7050,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064) : self__.afn.call(null,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064));
});
var G__7409__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7065 = a;
var G__7066 = b;
var G__7067 = c;
var G__7068 = d;
var G__7069 = e;
var G__7070 = f;
var G__7071 = g;
var G__7072 = h;
var G__7073 = i;
var G__7074 = j;
var G__7075 = k;
var G__7076 = l;
var G__7077 = m;
var G__7078 = n;
var G__7079 = o;
var G__7080 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7065,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080) : self__.afn.call(null,G__7065,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080));
});
var G__7409__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7081 = a;
var G__7082 = b;
var G__7083 = c;
var G__7084 = d;
var G__7085 = e;
var G__7086 = f;
var G__7087 = g;
var G__7088 = h;
var G__7089 = i;
var G__7090 = j;
var G__7091 = k;
var G__7092 = l;
var G__7093 = m;
var G__7094 = n;
var G__7095 = o;
var G__7096 = p;
var G__7097 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7081,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097) : self__.afn.call(null,G__7081,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097));
});
var G__7409__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7098 = a;
var G__7099 = b;
var G__7100 = c;
var G__7101 = d;
var G__7102 = e;
var G__7103 = f;
var G__7104 = g;
var G__7105 = h;
var G__7106 = i;
var G__7107 = j;
var G__7108 = k;
var G__7109 = l;
var G__7110 = m;
var G__7111 = n;
var G__7112 = o;
var G__7113 = p;
var G__7114 = q;
var G__7115 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7098,G__7099,G__7100,G__7101,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115) : self__.afn.call(null,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115));
});
var G__7409__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7116 = a;
var G__7117 = b;
var G__7118 = c;
var G__7119 = d;
var G__7120 = e;
var G__7121 = f;
var G__7122 = g;
var G__7123 = h;
var G__7124 = i;
var G__7125 = j;
var G__7126 = k;
var G__7127 = l;
var G__7128 = m;
var G__7129 = n;
var G__7130 = o;
var G__7131 = p;
var G__7132 = q;
var G__7133 = r;
var G__7134 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7116,G__7117,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132,G__7133,G__7134) : self__.afn.call(null,G__7116,G__7117,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132,G__7133,G__7134));
});
var G__7409__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7135 = a;
var G__7136 = b;
var G__7137 = c;
var G__7138 = d;
var G__7139 = e;
var G__7140 = f;
var G__7141 = g;
var G__7142 = h;
var G__7143 = i;
var G__7144 = j;
var G__7145 = k;
var G__7146 = l;
var G__7147 = m;
var G__7148 = n;
var G__7149 = o;
var G__7150 = p;
var G__7151 = q;
var G__7152 = r;
var G__7153 = s;
var G__7154 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146,G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154) : self__.afn.call(null,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146,G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154));
});
var G__7409__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7155 = self__.afn;
var G__7156 = a;
var G__7157 = b;
var G__7158 = c;
var G__7159 = d;
var G__7160 = e;
var G__7161 = f;
var G__7162 = g;
var G__7163 = h;
var G__7164 = i;
var G__7165 = j;
var G__7166 = k;
var G__7167 = l;
var G__7168 = m;
var G__7169 = n;
var G__7170 = o;
var G__7171 = p;
var G__7172 = q;
var G__7173 = r;
var G__7174 = s;
var G__7175 = t;
var G__7176 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7155,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176) : cljs.core.apply.call(null,G__7155,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176));
});
G__7409 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7409__1.call(this,self__);
case 2:
return G__7409__2.call(this,self__,a);
case 3:
return G__7409__3.call(this,self__,a,b);
case 4:
return G__7409__4.call(this,self__,a,b,c);
case 5:
return G__7409__5.call(this,self__,a,b,c,d);
case 6:
return G__7409__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7409__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7409__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7409__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7409__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7409__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7409__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7409__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7409__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7409__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7409__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7409__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7409__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7409__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7409__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7409__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7409__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7409.cljs$core$IFn$_invoke$arity$1 = G__7409__1;
G__7409.cljs$core$IFn$_invoke$arity$2 = G__7409__2;
G__7409.cljs$core$IFn$_invoke$arity$3 = G__7409__3;
G__7409.cljs$core$IFn$_invoke$arity$4 = G__7409__4;
G__7409.cljs$core$IFn$_invoke$arity$5 = G__7409__5;
G__7409.cljs$core$IFn$_invoke$arity$6 = G__7409__6;
G__7409.cljs$core$IFn$_invoke$arity$7 = G__7409__7;
G__7409.cljs$core$IFn$_invoke$arity$8 = G__7409__8;
G__7409.cljs$core$IFn$_invoke$arity$9 = G__7409__9;
G__7409.cljs$core$IFn$_invoke$arity$10 = G__7409__10;
G__7409.cljs$core$IFn$_invoke$arity$11 = G__7409__11;
G__7409.cljs$core$IFn$_invoke$arity$12 = G__7409__12;
G__7409.cljs$core$IFn$_invoke$arity$13 = G__7409__13;
G__7409.cljs$core$IFn$_invoke$arity$14 = G__7409__14;
G__7409.cljs$core$IFn$_invoke$arity$15 = G__7409__15;
G__7409.cljs$core$IFn$_invoke$arity$16 = G__7409__16;
G__7409.cljs$core$IFn$_invoke$arity$17 = G__7409__17;
G__7409.cljs$core$IFn$_invoke$arity$18 = G__7409__18;
G__7409.cljs$core$IFn$_invoke$arity$19 = G__7409__19;
G__7409.cljs$core$IFn$_invoke$arity$20 = G__7409__20;
G__7409.cljs$core$IFn$_invoke$arity$21 = G__7409__21;
G__7409.cljs$core$IFn$_invoke$arity$22 = G__7409__22;
return G__7409;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6944){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6944)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__7177 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7177) : self__.afn.call(null,G__7177));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__7178 = a;
var G__7179 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7178,G__7179) : self__.afn.call(null,G__7178,G__7179));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__7180 = a;
var G__7181 = b;
var G__7182 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7180,G__7181,G__7182) : self__.afn.call(null,G__7180,G__7181,G__7182));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__7183 = a;
var G__7184 = b;
var G__7185 = c;
var G__7186 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7183,G__7184,G__7185,G__7186) : self__.afn.call(null,G__7183,G__7184,G__7185,G__7186));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__7187 = a;
var G__7188 = b;
var G__7189 = c;
var G__7190 = d;
var G__7191 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7187,G__7188,G__7189,G__7190,G__7191) : self__.afn.call(null,G__7187,G__7188,G__7189,G__7190,G__7191));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__7192 = a;
var G__7193 = b;
var G__7194 = c;
var G__7195 = d;
var G__7196 = e;
var G__7197 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7192,G__7193,G__7194,G__7195,G__7196,G__7197) : self__.afn.call(null,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__7198 = a;
var G__7199 = b;
var G__7200 = c;
var G__7201 = d;
var G__7202 = e;
var G__7203 = f;
var G__7204 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7198,G__7199,G__7200,G__7201,G__7202,G__7203,G__7204) : self__.afn.call(null,G__7198,G__7199,G__7200,G__7201,G__7202,G__7203,G__7204));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__7205 = a;
var G__7206 = b;
var G__7207 = c;
var G__7208 = d;
var G__7209 = e;
var G__7210 = f;
var G__7211 = g;
var G__7212 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212) : self__.afn.call(null,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__7213 = a;
var G__7214 = b;
var G__7215 = c;
var G__7216 = d;
var G__7217 = e;
var G__7218 = f;
var G__7219 = g;
var G__7220 = h;
var G__7221 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221) : self__.afn.call(null,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__7222 = a;
var G__7223 = b;
var G__7224 = c;
var G__7225 = d;
var G__7226 = e;
var G__7227 = f;
var G__7228 = g;
var G__7229 = h;
var G__7230 = i;
var G__7231 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231) : self__.afn.call(null,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__7232 = a;
var G__7233 = b;
var G__7234 = c;
var G__7235 = d;
var G__7236 = e;
var G__7237 = f;
var G__7238 = g;
var G__7239 = h;
var G__7240 = i;
var G__7241 = j;
var G__7242 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242) : self__.afn.call(null,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__7243 = a;
var G__7244 = b;
var G__7245 = c;
var G__7246 = d;
var G__7247 = e;
var G__7248 = f;
var G__7249 = g;
var G__7250 = h;
var G__7251 = i;
var G__7252 = j;
var G__7253 = k;
var G__7254 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253,G__7254) : self__.afn.call(null,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253,G__7254));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__7255 = a;
var G__7256 = b;
var G__7257 = c;
var G__7258 = d;
var G__7259 = e;
var G__7260 = f;
var G__7261 = g;
var G__7262 = h;
var G__7263 = i;
var G__7264 = j;
var G__7265 = k;
var G__7266 = l;
var G__7267 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263,G__7264,G__7265,G__7266,G__7267) : self__.afn.call(null,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263,G__7264,G__7265,G__7266,G__7267));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7268 = a;
var G__7269 = b;
var G__7270 = c;
var G__7271 = d;
var G__7272 = e;
var G__7273 = f;
var G__7274 = g;
var G__7275 = h;
var G__7276 = i;
var G__7277 = j;
var G__7278 = k;
var G__7279 = l;
var G__7280 = m;
var G__7281 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281) : self__.afn.call(null,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7282 = a;
var G__7283 = b;
var G__7284 = c;
var G__7285 = d;
var G__7286 = e;
var G__7287 = f;
var G__7288 = g;
var G__7289 = h;
var G__7290 = i;
var G__7291 = j;
var G__7292 = k;
var G__7293 = l;
var G__7294 = m;
var G__7295 = n;
var G__7296 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7282,G__7283,G__7284,G__7285,G__7286,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296) : self__.afn.call(null,G__7282,G__7283,G__7284,G__7285,G__7286,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7297 = a;
var G__7298 = b;
var G__7299 = c;
var G__7300 = d;
var G__7301 = e;
var G__7302 = f;
var G__7303 = g;
var G__7304 = h;
var G__7305 = i;
var G__7306 = j;
var G__7307 = k;
var G__7308 = l;
var G__7309 = m;
var G__7310 = n;
var G__7311 = o;
var G__7312 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7297,G__7298,G__7299,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312) : self__.afn.call(null,G__7297,G__7298,G__7299,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7313 = a;
var G__7314 = b;
var G__7315 = c;
var G__7316 = d;
var G__7317 = e;
var G__7318 = f;
var G__7319 = g;
var G__7320 = h;
var G__7321 = i;
var G__7322 = j;
var G__7323 = k;
var G__7324 = l;
var G__7325 = m;
var G__7326 = n;
var G__7327 = o;
var G__7328 = p;
var G__7329 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7313,G__7314,G__7315,G__7316,G__7317,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328,G__7329) : self__.afn.call(null,G__7313,G__7314,G__7315,G__7316,G__7317,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328,G__7329));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__7330 = a;
var G__7331 = b;
var G__7332 = c;
var G__7333 = d;
var G__7334 = e;
var G__7335 = f;
var G__7336 = g;
var G__7337 = h;
var G__7338 = i;
var G__7339 = j;
var G__7340 = k;
var G__7341 = l;
var G__7342 = m;
var G__7343 = n;
var G__7344 = o;
var G__7345 = p;
var G__7346 = q;
var G__7347 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341,G__7342,G__7343,G__7344,G__7345,G__7346,G__7347) : self__.afn.call(null,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341,G__7342,G__7343,G__7344,G__7345,G__7346,G__7347));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__7348 = a;
var G__7349 = b;
var G__7350 = c;
var G__7351 = d;
var G__7352 = e;
var G__7353 = f;
var G__7354 = g;
var G__7355 = h;
var G__7356 = i;
var G__7357 = j;
var G__7358 = k;
var G__7359 = l;
var G__7360 = m;
var G__7361 = n;
var G__7362 = o;
var G__7363 = p;
var G__7364 = q;
var G__7365 = r;
var G__7366 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355,G__7356,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362,G__7363,G__7364,G__7365,G__7366) : self__.afn.call(null,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355,G__7356,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362,G__7363,G__7364,G__7365,G__7366));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7367 = a;
var G__7368 = b;
var G__7369 = c;
var G__7370 = d;
var G__7371 = e;
var G__7372 = f;
var G__7373 = g;
var G__7374 = h;
var G__7375 = i;
var G__7376 = j;
var G__7377 = k;
var G__7378 = l;
var G__7379 = m;
var G__7380 = n;
var G__7381 = o;
var G__7382 = p;
var G__7383 = q;
var G__7384 = r;
var G__7385 = s;
var G__7386 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7367,G__7368,G__7369,G__7370,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378,G__7379,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386) : self__.afn.call(null,G__7367,G__7368,G__7369,G__7370,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378,G__7379,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7387 = self__.afn;
var G__7388 = a;
var G__7389 = b;
var G__7390 = c;
var G__7391 = d;
var G__7392 = e;
var G__7393 = f;
var G__7394 = g;
var G__7395 = h;
var G__7396 = i;
var G__7397 = j;
var G__7398 = k;
var G__7399 = l;
var G__7400 = m;
var G__7401 = n;
var G__7402 = o;
var G__7403 = p;
var G__7404 = q;
var G__7405 = r;
var G__7406 = s;
var G__7407 = t;
var G__7408 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395,G__7396,G__7397,G__7398,G__7399,G__7400,G__7401,G__7402,G__7403,G__7404,G__7405,G__7406,G__7407,G__7408) : cljs.core.apply.call(null,G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395,G__7396,G__7397,G__7398,G__7399,G__7400,G__7401,G__7402,G__7403,G__7404,G__7405,G__7406,G__7407,G__7408));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7413 = o;
if(G__7413){
var bit__4436__auto__ = (G__7413.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4436__auto__) || (G__7413.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7413.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7413);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7413);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3743__auto__ = !((o == null));
if(and__3743__auto__){
var G__7417 = o;
if(G__7417){
var bit__4436__auto__ = (G__7417.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4436__auto__) || (G__7417.cljs$core$IMeta$)){
return true;
} else {
if((!G__7417.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7417);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7417);
}
} else {
return and__3743__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__7420__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7421 = ret;
var G__7422 = cljs.core.first(ks);
var G__7423 = cljs.core.next(ks);
coll = G__7421;
k = G__7422;
ks = G__7423;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7420 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7424__i = 0, G__7424__a = new Array(arguments.length -  2);
while (G__7424__i < G__7424__a.length) {G__7424__a[G__7424__i] = arguments[G__7424__i + 2]; ++G__7424__i;}
  ks = new cljs.core.IndexedSeq(G__7424__a,0);
} 
return G__7420__delegate.call(this,coll,k,ks);};
G__7420.cljs$lang$maxFixedArity = 2;
G__7420.cljs$lang$applyTo = (function (arglist__7425){
var coll = cljs.core.first(arglist__7425);
arglist__7425 = cljs.core.next(arglist__7425);
var k = cljs.core.first(arglist__7425);
var ks = cljs.core.rest(arglist__7425);
return G__7420__delegate(coll,k,ks);
});
G__7420.cljs$core$IFn$_invoke$arity$variadic = G__7420__delegate;
return G__7420;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__7426 = null;
if (arguments.length > 2) {
var G__7427__i = 0, G__7427__a = new Array(arguments.length -  2);
while (G__7427__i < G__7427__a.length) {G__7427__a[G__7427__i] = arguments[G__7427__i + 2]; ++G__7427__i;}
G__7426 = new cljs.core.IndexedSeq(G__7427__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7429 = x;
if(G__7429){
var bit__4436__auto__ = (G__7429.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4436__auto__) || (G__7429.cljs$core$ICollection$)){
return true;
} else {
if((!G__7429.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7429);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7429);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7431 = x;
if(G__7431){
var bit__4436__auto__ = (G__7431.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4436__auto__) || (G__7431.cljs$core$ISet$)){
return true;
} else {
if((!G__7431.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7431);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7431);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__7433 = x;
if(G__7433){
var bit__4436__auto__ = (G__7433.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4436__auto__) || (G__7433.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7433.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7433);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7433);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__7435 = x;
if(G__7435){
var bit__4436__auto__ = (G__7435.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4436__auto__) || (G__7435.cljs$core$ISequential$)){
return true;
} else {
if((!G__7435.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7435);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7435);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__7437 = x;
if(G__7437){
var bit__4436__auto__ = (G__7437.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4436__auto__) || (G__7437.cljs$core$ISorted$)){
return true;
} else {
if((!G__7437.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7437);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7437);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__7439 = x;
if(G__7439){
var bit__4436__auto__ = (G__7439.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4436__auto__) || (G__7439.cljs$core$IReduce$)){
return true;
} else {
if((!G__7439.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7439);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7439);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7441 = x;
if(G__7441){
var bit__4436__auto__ = (G__7441.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4436__auto__) || (G__7441.cljs$core$IMap$)){
return true;
} else {
if((!G__7441.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7441);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__7443 = x;
if(G__7443){
var bit__4436__auto__ = (G__7443.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4436__auto__) || (G__7443.cljs$core$IVector$)){
return true;
} else {
if((!G__7443.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7443);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7443);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__7445 = x;
if(G__7445){
var bit__4429__auto__ = (G__7445.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4429__auto__) || (G__7445.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj7451 = {};
return obj7451;
});
var js_obj__1 = (function() { 
var G__7454__delegate = function (keyvals){
var G__7452 = goog.object.create;
var G__7453 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7452,G__7453) : cljs.core.apply.call(null,G__7452,G__7453));
};
var G__7454 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7455__i = 0, G__7455__a = new Array(arguments.length -  0);
while (G__7455__i < G__7455__a.length) {G__7455__a[G__7455__i] = arguments[G__7455__i + 0]; ++G__7455__i;}
  keyvals = new cljs.core.IndexedSeq(G__7455__a,0);
} 
return G__7454__delegate.call(this,keyvals);};
G__7454.cljs$lang$maxFixedArity = 0;
G__7454.cljs$lang$applyTo = (function (arglist__7456){
var keyvals = cljs.core.seq(arglist__7456);
return G__7454__delegate(keyvals);
});
G__7454.cljs$core$IFn$_invoke$arity$variadic = G__7454__delegate;
return G__7454;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__7457 = null;
if (arguments.length > 0) {
var G__7458__i = 0, G__7458__a = new Array(arguments.length -  0);
while (G__7458__i < G__7458__a.length) {G__7458__a[G__7458__i] = arguments[G__7458__i + 0]; ++G__7458__i;}
G__7457 = new cljs.core.IndexedSeq(G__7458__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__7461_7463 = obj;
var G__7462_7464 = ((function (G__7461_7463,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7461_7463,keys))
;
goog.object.forEach(G__7461_7463,G__7462_7464);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7465 = (i__$1 + (1));
var G__7466 = (j__$1 + (1));
var G__7467 = (len__$1 - (1));
i__$1 = G__7465;
j__$1 = G__7466;
len__$1 = G__7467;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7468 = (i__$1 - (1));
var G__7469 = (j__$1 - (1));
var G__7470 = (len__$1 - (1));
i__$1 = G__7468;
j__$1 = G__7469;
len__$1 = G__7470;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7472 = {};
return obj7472;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7474 = s;
if(G__7474){
var bit__4436__auto__ = (G__7474.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4436__auto__) || (G__7474.cljs$core$ISeq$)){
return true;
} else {
if((!G__7474.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7474);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7474);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__7476 = s;
if(G__7476){
var bit__4436__auto__ = (G__7476.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4436__auto__) || (G__7476.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7476.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7476);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7476);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3755__auto__ = cljs.core.fn_QMARK_(f);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var G__7480 = f;
if(G__7480){
var bit__4436__auto__ = (G__7480.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4436__auto__) || (G__7480.cljs$core$IFn$)){
return true;
} else {
if((!G__7480.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7480);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7480);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7493 = n;
return isNaN(G__7493);
})())) && (!((n === Infinity))) && (((function (){var G__7494 = n;
return parseFloat(G__7494);
})() === (function (){var G__7495 = n;
var G__7496 = (10);
return parseInt(G__7495,G__7496);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__7497__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7498 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7499 = etc;
s = G__7498;
xs = G__7499;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7497 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7500__i = 0, G__7500__a = new Array(arguments.length -  2);
while (G__7500__i < G__7500__a.length) {G__7500__a[G__7500__i] = arguments[G__7500__i + 2]; ++G__7500__i;}
  more = new cljs.core.IndexedSeq(G__7500__a,0);
} 
return G__7497__delegate.call(this,x,y,more);};
G__7497.cljs$lang$maxFixedArity = 2;
G__7497.cljs$lang$applyTo = (function (arglist__7501){
var x = cljs.core.first(arglist__7501);
arglist__7501 = cljs.core.next(arglist__7501);
var y = cljs.core.first(arglist__7501);
var more = cljs.core.rest(arglist__7501);
return G__7497__delegate(x,y,more);
});
G__7497.cljs$core$IFn$_invoke$arity$variadic = G__7497__delegate;
return G__7497;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__7502 = null;
if (arguments.length > 2) {
var G__7503__i = 0, G__7503__a = new Array(arguments.length -  2);
while (G__7503__i < G__7503__a.length) {G__7503__a[G__7503__i] = arguments[G__7503__i + 2]; ++G__7503__i;}
G__7502 = new cljs.core.IndexedSeq(G__7503__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7507 = x;
if(G__7507){
var bit__4429__auto__ = (G__7507.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4429__auto__) || (G__7507.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7508 = x;
var G__7509 = y;
return goog.array.defaultCompare(G__7508,G__7509);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7514 = xs;
var G__7515 = ys;
var G__7516 = len;
var G__7517 = (n + (1));
xs = G__7514;
ys = G__7515;
len = G__7516;
n = G__7517;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7522 = x;
var G__7523 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7522,G__7523) : f.call(null,G__7522,G__7523));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7524 = y;
var G__7525 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7524,G__7525) : f.call(null,G__7524,G__7525));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7531 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7531) : cljs.core.to_array.call(null,G__7531));
})();
var G__7532_7534 = a;
var G__7533_7535 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7532_7534,G__7533_7535);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7541 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7541) : keyfn.call(null,G__7541));
})(),(function (){var G__7542 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7542) : keyfn.call(null,G__7542));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7548 = f;
var G__7549 = cljs.core.first(s);
var G__7550 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7548,G__7549,G__7550) : cljs.core.reduce.call(null,G__7548,G__7549,G__7550));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7551 = val__$1;
var G__7552 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7551,G__7552) : f.call(null,G__7551,G__7552));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7553 = nval;
var G__7554 = cljs.core.next(coll__$1);
val__$1 = G__7553;
coll__$1 = G__7554;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__7558 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7558) : cljs.core.to_array.call(null,G__7558));
})();
var G__7559_7561 = a;
goog.array.shuffle(G__7559_7561);

var G__7560 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7560) : cljs.core.vec.call(null,G__7560));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__7564 = coll;
if(G__7564){
var bit__4429__auto__ = (G__7564.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4429__auto__) || (G__7564.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__7565 = coll;
if(G__7565){
var bit__4429__auto__ = (G__7565.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4429__auto__) || (G__7565.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__7574 = null;
var G__7574__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7574__1 = (function (x){
var G__7571 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7571) : cf.call(null,G__7571));
});
var G__7574__2 = (function (x,y){
var G__7572 = x;
var G__7573 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7572,G__7573) : f.call(null,G__7572,G__7573));
});
G__7574 = function(x,y){
switch(arguments.length){
case 0:
return G__7574__0.call(this);
case 1:
return G__7574__1.call(this,x);
case 2:
return G__7574__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7574.cljs$core$IFn$_invoke$arity$0 = G__7574__0;
G__7574.cljs$core$IFn$_invoke$arity$1 = G__7574__1;
G__7574.cljs$core$IFn$_invoke$arity$2 = G__7574__2;
return G__7574;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7581 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7581) : xform.call(null,G__7581));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7582 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7582) : f__$1.call(null,G__7582));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__7583__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__7583 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7584__i = 0, G__7584__a = new Array(arguments.length -  2);
while (G__7584__i < G__7584__a.length) {G__7584__a[G__7584__i] = arguments[G__7584__i + 2]; ++G__7584__i;}
  more = new cljs.core.IndexedSeq(G__7584__a,0);
} 
return G__7583__delegate.call(this,x,y,more);};
G__7583.cljs$lang$maxFixedArity = 2;
G__7583.cljs$lang$applyTo = (function (arglist__7585){
var x = cljs.core.first(arglist__7585);
arglist__7585 = cljs.core.next(arglist__7585);
var y = cljs.core.first(arglist__7585);
var more = cljs.core.rest(arglist__7585);
return G__7583__delegate(x,y,more);
});
G__7583.cljs$core$IFn$_invoke$arity$variadic = G__7583__delegate;
return G__7583;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__7586 = null;
if (arguments.length > 2) {
var G__7587__i = 0, G__7587__a = new Array(arguments.length -  2);
while (G__7587__i < G__7587__a.length) {G__7587__a[G__7587__i] = arguments[G__7587__i + 2]; ++G__7587__i;}
G__7586 = new cljs.core.IndexedSeq(G__7587__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7586);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__7588__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__7588 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7589__i = 0, G__7589__a = new Array(arguments.length -  2);
while (G__7589__i < G__7589__a.length) {G__7589__a[G__7589__i] = arguments[G__7589__i + 2]; ++G__7589__i;}
  more = new cljs.core.IndexedSeq(G__7589__a,0);
} 
return G__7588__delegate.call(this,x,y,more);};
G__7588.cljs$lang$maxFixedArity = 2;
G__7588.cljs$lang$applyTo = (function (arglist__7590){
var x = cljs.core.first(arglist__7590);
arglist__7590 = cljs.core.next(arglist__7590);
var y = cljs.core.first(arglist__7590);
var more = cljs.core.rest(arglist__7590);
return G__7588__delegate(x,y,more);
});
G__7588.cljs$core$IFn$_invoke$arity$variadic = G__7588__delegate;
return G__7588;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__7591 = null;
if (arguments.length > 2) {
var G__7592__i = 0, G__7592__a = new Array(arguments.length -  2);
while (G__7592__i < G__7592__a.length) {G__7592__a[G__7592__i] = arguments[G__7592__i + 2]; ++G__7592__i;}
G__7591 = new cljs.core.IndexedSeq(G__7592__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__7593__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__7593 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7594__i = 0, G__7594__a = new Array(arguments.length -  2);
while (G__7594__i < G__7594__a.length) {G__7594__a[G__7594__i] = arguments[G__7594__i + 2]; ++G__7594__i;}
  more = new cljs.core.IndexedSeq(G__7594__a,0);
} 
return G__7593__delegate.call(this,x,y,more);};
G__7593.cljs$lang$maxFixedArity = 2;
G__7593.cljs$lang$applyTo = (function (arglist__7595){
var x = cljs.core.first(arglist__7595);
arglist__7595 = cljs.core.next(arglist__7595);
var y = cljs.core.first(arglist__7595);
var more = cljs.core.rest(arglist__7595);
return G__7593__delegate(x,y,more);
});
G__7593.cljs$core$IFn$_invoke$arity$variadic = G__7593__delegate;
return G__7593;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__7596 = null;
if (arguments.length > 2) {
var G__7597__i = 0, G__7597__a = new Array(arguments.length -  2);
while (G__7597__i < G__7597__a.length) {G__7597__a[G__7597__i] = arguments[G__7597__i + 2]; ++G__7597__i;}
G__7596 = new cljs.core.IndexedSeq(G__7597__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__7602__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7602 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7603__i = 0, G__7603__a = new Array(arguments.length -  2);
while (G__7603__i < G__7603__a.length) {G__7603__a[G__7603__i] = arguments[G__7603__i + 2]; ++G__7603__i;}
  more = new cljs.core.IndexedSeq(G__7603__a,0);
} 
return G__7602__delegate.call(this,x,y,more);};
G__7602.cljs$lang$maxFixedArity = 2;
G__7602.cljs$lang$applyTo = (function (arglist__7604){
var x = cljs.core.first(arglist__7604);
arglist__7604 = cljs.core.next(arglist__7604);
var y = cljs.core.first(arglist__7604);
var more = cljs.core.rest(arglist__7604);
return G__7602__delegate(x,y,more);
});
G__7602.cljs$core$IFn$_invoke$arity$variadic = G__7602__delegate;
return G__7602;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__7605 = null;
if (arguments.length > 2) {
var G__7606__i = 0, G__7606__a = new Array(arguments.length -  2);
while (G__7606__i < G__7606__a.length) {G__7606__a[G__7606__i] = arguments[G__7606__i + 2]; ++G__7606__i;}
G__7605 = new cljs.core.IndexedSeq(G__7606__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7605);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__7607__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7608 = y;
var G__7609 = cljs.core.first(more);
var G__7610 = cljs.core.next(more);
x = G__7608;
y = G__7609;
more = G__7610;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7607 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7611__i = 0, G__7611__a = new Array(arguments.length -  2);
while (G__7611__i < G__7611__a.length) {G__7611__a[G__7611__i] = arguments[G__7611__i + 2]; ++G__7611__i;}
  more = new cljs.core.IndexedSeq(G__7611__a,0);
} 
return G__7607__delegate.call(this,x,y,more);};
G__7607.cljs$lang$maxFixedArity = 2;
G__7607.cljs$lang$applyTo = (function (arglist__7612){
var x = cljs.core.first(arglist__7612);
arglist__7612 = cljs.core.next(arglist__7612);
var y = cljs.core.first(arglist__7612);
var more = cljs.core.rest(arglist__7612);
return G__7607__delegate(x,y,more);
});
G__7607.cljs$core$IFn$_invoke$arity$variadic = G__7607__delegate;
return G__7607;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__7613 = null;
if (arguments.length > 2) {
var G__7614__i = 0, G__7614__a = new Array(arguments.length -  2);
while (G__7614__i < G__7614__a.length) {G__7614__a[G__7614__i] = arguments[G__7614__i + 2]; ++G__7614__i;}
G__7613 = new cljs.core.IndexedSeq(G__7614__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__7615__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7616 = y;
var G__7617 = cljs.core.first(more);
var G__7618 = cljs.core.next(more);
x = G__7616;
y = G__7617;
more = G__7618;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7615 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7619__i = 0, G__7619__a = new Array(arguments.length -  2);
while (G__7619__i < G__7619__a.length) {G__7619__a[G__7619__i] = arguments[G__7619__i + 2]; ++G__7619__i;}
  more = new cljs.core.IndexedSeq(G__7619__a,0);
} 
return G__7615__delegate.call(this,x,y,more);};
G__7615.cljs$lang$maxFixedArity = 2;
G__7615.cljs$lang$applyTo = (function (arglist__7620){
var x = cljs.core.first(arglist__7620);
arglist__7620 = cljs.core.next(arglist__7620);
var y = cljs.core.first(arglist__7620);
var more = cljs.core.rest(arglist__7620);
return G__7615__delegate(x,y,more);
});
G__7615.cljs$core$IFn$_invoke$arity$variadic = G__7615__delegate;
return G__7615;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__7621 = null;
if (arguments.length > 2) {
var G__7622__i = 0, G__7622__a = new Array(arguments.length -  2);
while (G__7622__i < G__7622__a.length) {G__7622__a[G__7622__i] = arguments[G__7622__i + 2]; ++G__7622__i;}
G__7621 = new cljs.core.IndexedSeq(G__7622__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7621);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__7623__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7624 = y;
var G__7625 = cljs.core.first(more);
var G__7626 = cljs.core.next(more);
x = G__7624;
y = G__7625;
more = G__7626;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7623 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7627__i = 0, G__7627__a = new Array(arguments.length -  2);
while (G__7627__i < G__7627__a.length) {G__7627__a[G__7627__i] = arguments[G__7627__i + 2]; ++G__7627__i;}
  more = new cljs.core.IndexedSeq(G__7627__a,0);
} 
return G__7623__delegate.call(this,x,y,more);};
G__7623.cljs$lang$maxFixedArity = 2;
G__7623.cljs$lang$applyTo = (function (arglist__7628){
var x = cljs.core.first(arglist__7628);
arglist__7628 = cljs.core.next(arglist__7628);
var y = cljs.core.first(arglist__7628);
var more = cljs.core.rest(arglist__7628);
return G__7623__delegate(x,y,more);
});
G__7623.cljs$core$IFn$_invoke$arity$variadic = G__7623__delegate;
return G__7623;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__7629 = null;
if (arguments.length > 2) {
var G__7630__i = 0, G__7630__a = new Array(arguments.length -  2);
while (G__7630__i < G__7630__a.length) {G__7630__a[G__7630__i] = arguments[G__7630__i + 2]; ++G__7630__i;}
G__7629 = new cljs.core.IndexedSeq(G__7630__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__7631__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7632 = y;
var G__7633 = cljs.core.first(more);
var G__7634 = cljs.core.next(more);
x = G__7632;
y = G__7633;
more = G__7634;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7631 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7635__i = 0, G__7635__a = new Array(arguments.length -  2);
while (G__7635__i < G__7635__a.length) {G__7635__a[G__7635__i] = arguments[G__7635__i + 2]; ++G__7635__i;}
  more = new cljs.core.IndexedSeq(G__7635__a,0);
} 
return G__7631__delegate.call(this,x,y,more);};
G__7631.cljs$lang$maxFixedArity = 2;
G__7631.cljs$lang$applyTo = (function (arglist__7636){
var x = cljs.core.first(arglist__7636);
arglist__7636 = cljs.core.next(arglist__7636);
var y = cljs.core.first(arglist__7636);
var more = cljs.core.rest(arglist__7636);
return G__7631__delegate(x,y,more);
});
G__7631.cljs$core$IFn$_invoke$arity$variadic = G__7631__delegate;
return G__7631;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__7637 = null;
if (arguments.length > 2) {
var G__7638__i = 0, G__7638__a = new Array(arguments.length -  2);
while (G__7638__i < G__7638__a.length) {G__7638__a[G__7638__i] = arguments[G__7638__i + 2]; ++G__7638__i;}
G__7637 = new cljs.core.IndexedSeq(G__7638__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7637);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4072__auto__ = x;
var y__4073__auto__ = y;
return ((x__4072__auto__ > y__4073__auto__) ? x__4072__auto__ : y__4073__auto__);
});
var max__3 = (function() { 
var G__7639__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4072__auto__ = x;
var y__4073__auto__ = y;
return ((x__4072__auto__ > y__4073__auto__) ? x__4072__auto__ : y__4073__auto__);
})(),more);
};
var G__7639 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7640__i = 0, G__7640__a = new Array(arguments.length -  2);
while (G__7640__i < G__7640__a.length) {G__7640__a[G__7640__i] = arguments[G__7640__i + 2]; ++G__7640__i;}
  more = new cljs.core.IndexedSeq(G__7640__a,0);
} 
return G__7639__delegate.call(this,x,y,more);};
G__7639.cljs$lang$maxFixedArity = 2;
G__7639.cljs$lang$applyTo = (function (arglist__7641){
var x = cljs.core.first(arglist__7641);
arglist__7641 = cljs.core.next(arglist__7641);
var y = cljs.core.first(arglist__7641);
var more = cljs.core.rest(arglist__7641);
return G__7639__delegate(x,y,more);
});
G__7639.cljs$core$IFn$_invoke$arity$variadic = G__7639__delegate;
return G__7639;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__7642 = null;
if (arguments.length > 2) {
var G__7643__i = 0, G__7643__a = new Array(arguments.length -  2);
while (G__7643__i < G__7643__a.length) {G__7643__a[G__7643__i] = arguments[G__7643__i + 2]; ++G__7643__i;}
G__7642 = new cljs.core.IndexedSeq(G__7643__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7642);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4079__auto__ = x;
var y__4080__auto__ = y;
return ((x__4079__auto__ < y__4080__auto__) ? x__4079__auto__ : y__4080__auto__);
});
var min__3 = (function() { 
var G__7644__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4079__auto__ = x;
var y__4080__auto__ = y;
return ((x__4079__auto__ < y__4080__auto__) ? x__4079__auto__ : y__4080__auto__);
})(),more);
};
var G__7644 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7645__i = 0, G__7645__a = new Array(arguments.length -  2);
while (G__7645__i < G__7645__a.length) {G__7645__a[G__7645__i] = arguments[G__7645__i + 2]; ++G__7645__i;}
  more = new cljs.core.IndexedSeq(G__7645__a,0);
} 
return G__7644__delegate.call(this,x,y,more);};
G__7644.cljs$lang$maxFixedArity = 2;
G__7644.cljs$lang$applyTo = (function (arglist__7646){
var x = cljs.core.first(arglist__7646);
arglist__7646 = cljs.core.next(arglist__7646);
var y = cljs.core.first(arglist__7646);
var more = cljs.core.rest(arglist__7646);
return G__7644__delegate(x,y,more);
});
G__7644.cljs$core$IFn$_invoke$arity$variadic = G__7644__delegate;
return G__7644;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__7647 = null;
if (arguments.length > 2) {
var G__7648__i = 0, G__7648__a = new Array(arguments.length -  2);
while (G__7648__i < G__7648__a.length) {G__7648__a[G__7648__i] = arguments[G__7648__i + 2]; ++G__7648__i;}
G__7647 = new cljs.core.IndexedSeq(G__7648__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__7649__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__7649 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7650__i = 0, G__7650__a = new Array(arguments.length -  2);
while (G__7650__i < G__7650__a.length) {G__7650__a[G__7650__i] = arguments[G__7650__i + 2]; ++G__7650__i;}
  more = new cljs.core.IndexedSeq(G__7650__a,0);
} 
return G__7649__delegate.call(this,x,y,more);};
G__7649.cljs$lang$maxFixedArity = 2;
G__7649.cljs$lang$applyTo = (function (arglist__7651){
var x = cljs.core.first(arglist__7651);
arglist__7651 = cljs.core.next(arglist__7651);
var y = cljs.core.first(arglist__7651);
var more = cljs.core.rest(arglist__7651);
return G__7649__delegate(x,y,more);
});
G__7649.cljs$core$IFn$_invoke$arity$variadic = G__7649__delegate;
return G__7649;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__7652 = null;
if (arguments.length > 2) {
var G__7653__i = 0, G__7653__a = new Array(arguments.length -  2);
while (G__7653__i < G__7653__a.length) {G__7653__a[G__7653__i] = arguments[G__7653__i + 2]; ++G__7653__i;}
G__7652 = new cljs.core.IndexedSeq(G__7653__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__7654__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__7654 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7655__i = 0, G__7655__a = new Array(arguments.length -  2);
while (G__7655__i < G__7655__a.length) {G__7655__a[G__7655__i] = arguments[G__7655__i + 2]; ++G__7655__i;}
  more = new cljs.core.IndexedSeq(G__7655__a,0);
} 
return G__7654__delegate.call(this,x,y,more);};
G__7654.cljs$lang$maxFixedArity = 2;
G__7654.cljs$lang$applyTo = (function (arglist__7656){
var x = cljs.core.first(arglist__7656);
arglist__7656 = cljs.core.next(arglist__7656);
var y = cljs.core.first(arglist__7656);
var more = cljs.core.rest(arglist__7656);
return G__7654__delegate(x,y,more);
});
G__7654.cljs$core$IFn$_invoke$arity$variadic = G__7654__delegate;
return G__7654;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__7657 = null;
if (arguments.length > 2) {
var G__7658__i = 0, G__7658__a = new Array(arguments.length -  2);
while (G__7658__i < G__7658__a.length) {G__7658__a[G__7658__i] = arguments[G__7658__i + 2]; ++G__7658__i;}
G__7657 = new cljs.core.IndexedSeq(G__7658__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__7663__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7663 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7664__i = 0, G__7664__a = new Array(arguments.length -  2);
while (G__7664__i < G__7664__a.length) {G__7664__a[G__7664__i] = arguments[G__7664__i + 2]; ++G__7664__i;}
  more = new cljs.core.IndexedSeq(G__7664__a,0);
} 
return G__7663__delegate.call(this,x,y,more);};
G__7663.cljs$lang$maxFixedArity = 2;
G__7663.cljs$lang$applyTo = (function (arglist__7665){
var x = cljs.core.first(arglist__7665);
arglist__7665 = cljs.core.next(arglist__7665);
var y = cljs.core.first(arglist__7665);
var more = cljs.core.rest(arglist__7665);
return G__7663__delegate(x,y,more);
});
G__7663.cljs$core$IFn$_invoke$arity$variadic = G__7663__delegate;
return G__7663;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__7666 = null;
if (arguments.length > 2) {
var G__7667__i = 0, G__7667__a = new Array(arguments.length -  2);
while (G__7667__i < G__7667__a.length) {G__7667__a[G__7667__i] = arguments[G__7667__i + 2]; ++G__7667__i;}
G__7666 = new cljs.core.IndexedSeq(G__7667__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7666);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__7668__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__7668 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7669__i = 0, G__7669__a = new Array(arguments.length -  2);
while (G__7669__i < G__7669__a.length) {G__7669__a[G__7669__i] = arguments[G__7669__i + 2]; ++G__7669__i;}
  more = new cljs.core.IndexedSeq(G__7669__a,0);
} 
return G__7668__delegate.call(this,x,y,more);};
G__7668.cljs$lang$maxFixedArity = 2;
G__7668.cljs$lang$applyTo = (function (arglist__7670){
var x = cljs.core.first(arglist__7670);
arglist__7670 = cljs.core.next(arglist__7670);
var y = cljs.core.first(arglist__7670);
var more = cljs.core.rest(arglist__7670);
return G__7668__delegate(x,y,more);
});
G__7668.cljs$core$IFn$_invoke$arity$variadic = G__7668__delegate;
return G__7668;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__7671 = null;
if (arguments.length > 2) {
var G__7672__i = 0, G__7672__a = new Array(arguments.length -  2);
while (G__7672__i < G__7672__a.length) {G__7672__a[G__7672__i] = arguments[G__7672__i + 2]; ++G__7672__i;}
G__7671 = new cljs.core.IndexedSeq(G__7672__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__7673__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__7673 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7674__i = 0, G__7674__a = new Array(arguments.length -  2);
while (G__7674__i < G__7674__a.length) {G__7674__a[G__7674__i] = arguments[G__7674__i + 2]; ++G__7674__i;}
  more = new cljs.core.IndexedSeq(G__7674__a,0);
} 
return G__7673__delegate.call(this,x,y,more);};
G__7673.cljs$lang$maxFixedArity = 2;
G__7673.cljs$lang$applyTo = (function (arglist__7675){
var x = cljs.core.first(arglist__7675);
arglist__7675 = cljs.core.next(arglist__7675);
var y = cljs.core.first(arglist__7675);
var more = cljs.core.rest(arglist__7675);
return G__7673__delegate(x,y,more);
});
G__7673.cljs$core$IFn$_invoke$arity$variadic = G__7673__delegate;
return G__7673;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__7676 = null;
if (arguments.length > 2) {
var G__7677__i = 0, G__7677__a = new Array(arguments.length -  2);
while (G__7677__i < G__7677__a.length) {G__7677__a[G__7677__i] = arguments[G__7677__i + 2]; ++G__7677__i;}
G__7676 = new cljs.core.IndexedSeq(G__7677__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7676);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__7680 = x;
var G__7681 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7680,G__7681) : cljs.core.mod.call(null,G__7680,G__7681));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__7682__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__7682 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7683__i = 0, G__7683__a = new Array(arguments.length -  2);
while (G__7683__i < G__7683__a.length) {G__7683__a[G__7683__i] = arguments[G__7683__i + 2]; ++G__7683__i;}
  more = new cljs.core.IndexedSeq(G__7683__a,0);
} 
return G__7682__delegate.call(this,x,y,more);};
G__7682.cljs$lang$maxFixedArity = 2;
G__7682.cljs$lang$applyTo = (function (arglist__7684){
var x = cljs.core.first(arglist__7684);
arglist__7684 = cljs.core.next(arglist__7684);
var y = cljs.core.first(arglist__7684);
var more = cljs.core.rest(arglist__7684);
return G__7682__delegate(x,y,more);
});
G__7682.cljs$core$IFn$_invoke$arity$variadic = G__7682__delegate;
return G__7682;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__7685 = null;
if (arguments.length > 2) {
var G__7686__i = 0, G__7686__a = new Array(arguments.length -  2);
while (G__7686__i < G__7686__a.length) {G__7686__a[G__7686__i] = arguments[G__7686__i + 2]; ++G__7686__i;}
G__7685 = new cljs.core.IndexedSeq(G__7686__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7685);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__7687__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__7687 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7688__i = 0, G__7688__a = new Array(arguments.length -  2);
while (G__7688__i < G__7688__a.length) {G__7688__a[G__7688__i] = arguments[G__7688__i + 2]; ++G__7688__i;}
  more = new cljs.core.IndexedSeq(G__7688__a,0);
} 
return G__7687__delegate.call(this,x,y,more);};
G__7687.cljs$lang$maxFixedArity = 2;
G__7687.cljs$lang$applyTo = (function (arglist__7689){
var x = cljs.core.first(arglist__7689);
arglist__7689 = cljs.core.next(arglist__7689);
var y = cljs.core.first(arglist__7689);
var more = cljs.core.rest(arglist__7689);
return G__7687__delegate(x,y,more);
});
G__7687.cljs$core$IFn$_invoke$arity$variadic = G__7687__delegate;
return G__7687;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__7690 = null;
if (arguments.length > 2) {
var G__7691__i = 0, G__7691__a = new Array(arguments.length -  2);
while (G__7691__i < G__7691__a.length) {G__7691__a[G__7691__i] = arguments[G__7691__i + 2]; ++G__7691__i;}
G__7690 = new cljs.core.IndexedSeq(G__7691__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7690);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__7694 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7694) : Math.floor.call(null,G__7694));
} else {
var G__7695 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7695) : Math.ceil.call(null,G__7695));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__7696__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__7696 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7697__i = 0, G__7697__a = new Array(arguments.length -  2);
while (G__7697__i < G__7697__a.length) {G__7697__a[G__7697__i] = arguments[G__7697__i + 2]; ++G__7697__i;}
  more = new cljs.core.IndexedSeq(G__7697__a,0);
} 
return G__7696__delegate.call(this,x,y,more);};
G__7696.cljs$lang$maxFixedArity = 2;
G__7696.cljs$lang$applyTo = (function (arglist__7698){
var x = cljs.core.first(arglist__7698);
arglist__7698 = cljs.core.next(arglist__7698);
var y = cljs.core.first(arglist__7698);
var more = cljs.core.rest(arglist__7698);
return G__7696__delegate(x,y,more);
});
G__7696.cljs$core$IFn$_invoke$arity$variadic = G__7696__delegate;
return G__7696;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__7699 = null;
if (arguments.length > 2) {
var G__7700__i = 0, G__7700__a = new Array(arguments.length -  2);
while (G__7700__i < G__7700__a.length) {G__7700__a[G__7700__i] = arguments[G__7700__i + 2]; ++G__7700__i;}
G__7699 = new cljs.core.IndexedSeq(G__7700__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__7701__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__7701 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7702__i = 0, G__7702__a = new Array(arguments.length -  2);
while (G__7702__i < G__7702__a.length) {G__7702__a[G__7702__i] = arguments[G__7702__i + 2]; ++G__7702__i;}
  more = new cljs.core.IndexedSeq(G__7702__a,0);
} 
return G__7701__delegate.call(this,x,y,more);};
G__7701.cljs$lang$maxFixedArity = 2;
G__7701.cljs$lang$applyTo = (function (arglist__7703){
var x = cljs.core.first(arglist__7703);
arglist__7703 = cljs.core.next(arglist__7703);
var y = cljs.core.first(arglist__7703);
var more = cljs.core.rest(arglist__7703);
return G__7701__delegate(x,y,more);
});
G__7701.cljs$core$IFn$_invoke$arity$variadic = G__7701__delegate;
return G__7701;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__7704 = null;
if (arguments.length > 2) {
var G__7705__i = 0, G__7705__a = new Array(arguments.length -  2);
while (G__7705__i < G__7705__a.length) {G__7705__a[G__7705__i] = arguments[G__7705__i + 2]; ++G__7705__i;}
G__7704 = new cljs.core.IndexedSeq(G__7705__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__7706__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__7706 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7707__i = 0, G__7707__a = new Array(arguments.length -  2);
while (G__7707__i < G__7707__a.length) {G__7707__a[G__7707__i] = arguments[G__7707__i + 2]; ++G__7707__i;}
  more = new cljs.core.IndexedSeq(G__7707__a,0);
} 
return G__7706__delegate.call(this,x,y,more);};
G__7706.cljs$lang$maxFixedArity = 2;
G__7706.cljs$lang$applyTo = (function (arglist__7708){
var x = cljs.core.first(arglist__7708);
arglist__7708 = cljs.core.next(arglist__7708);
var y = cljs.core.first(arglist__7708);
var more = cljs.core.rest(arglist__7708);
return G__7706__delegate(x,y,more);
});
G__7706.cljs$core$IFn$_invoke$arity$variadic = G__7706__delegate;
return G__7706;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__7709 = null;
if (arguments.length > 2) {
var G__7710__i = 0, G__7710__a = new Array(arguments.length -  2);
while (G__7710__i < G__7710__a.length) {G__7710__a[G__7710__i] = arguments[G__7710__i + 2]; ++G__7710__i;}
G__7709 = new cljs.core.IndexedSeq(G__7710__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__7711__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__7711 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7712__i = 0, G__7712__a = new Array(arguments.length -  2);
while (G__7712__i < G__7712__a.length) {G__7712__a[G__7712__i] = arguments[G__7712__i + 2]; ++G__7712__i;}
  more = new cljs.core.IndexedSeq(G__7712__a,0);
} 
return G__7711__delegate.call(this,x,y,more);};
G__7711.cljs$lang$maxFixedArity = 2;
G__7711.cljs$lang$applyTo = (function (arglist__7713){
var x = cljs.core.first(arglist__7713);
arglist__7713 = cljs.core.next(arglist__7713);
var y = cljs.core.first(arglist__7713);
var more = cljs.core.rest(arglist__7713);
return G__7711__delegate(x,y,more);
});
G__7711.cljs$core$IFn$_invoke$arity$variadic = G__7711__delegate;
return G__7711;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__7714 = null;
if (arguments.length > 2) {
var G__7715__i = 0, G__7715__a = new Array(arguments.length -  2);
while (G__7715__i < G__7715__a.length) {G__7715__a[G__7715__i] = arguments[G__7715__i + 2]; ++G__7715__i;}
G__7714 = new cljs.core.IndexedSeq(G__7715__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__7720__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7721 = y;
var G__7722 = cljs.core.first(more);
var G__7723 = cljs.core.next(more);
x = G__7721;
y = G__7722;
more = G__7723;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7720 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7724__i = 0, G__7724__a = new Array(arguments.length -  2);
while (G__7724__i < G__7724__a.length) {G__7724__a[G__7724__i] = arguments[G__7724__i + 2]; ++G__7724__i;}
  more = new cljs.core.IndexedSeq(G__7724__a,0);
} 
return G__7720__delegate.call(this,x,y,more);};
G__7720.cljs$lang$maxFixedArity = 2;
G__7720.cljs$lang$applyTo = (function (arglist__7725){
var x = cljs.core.first(arglist__7725);
arglist__7725 = cljs.core.next(arglist__7725);
var y = cljs.core.first(arglist__7725);
var more = cljs.core.rest(arglist__7725);
return G__7720__delegate(x,y,more);
});
G__7720.cljs$core$IFn$_invoke$arity$variadic = G__7720__delegate;
return G__7720;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__7726 = null;
if (arguments.length > 2) {
var G__7727__i = 0, G__7727__a = new Array(arguments.length -  2);
while (G__7727__i < G__7727__a.length) {G__7727__a[G__7727__i] = arguments[G__7727__i + 2]; ++G__7727__i;}
G__7726 = new cljs.core.IndexedSeq(G__7727__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7728 = (n__$1 - (1));
var G__7729 = cljs.core.next(xs);
n__$1 = G__7728;
xs = G__7729;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7733 = x;
return goog.string.buildString(G__7733);
}
});
var str__2 = (function() { 
var G__7734__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7735 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7736 = cljs.core.next(more);
sb = G__7735;
more = G__7736;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7734 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7737__i = 0, G__7737__a = new Array(arguments.length -  1);
while (G__7737__i < G__7737__a.length) {G__7737__a[G__7737__i] = arguments[G__7737__i + 1]; ++G__7737__i;}
  ys = new cljs.core.IndexedSeq(G__7737__a,0);
} 
return G__7734__delegate.call(this,x,ys);};
G__7734.cljs$lang$maxFixedArity = 1;
G__7734.cljs$lang$applyTo = (function (arglist__7738){
var x = cljs.core.first(arglist__7738);
var ys = cljs.core.rest(arglist__7738);
return G__7734__delegate(x,ys);
});
G__7734.cljs$core$IFn$_invoke$arity$variadic = G__7734__delegate;
return G__7734;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__7739 = null;
if (arguments.length > 1) {
var G__7740__i = 0, G__7740__a = new Array(arguments.length -  1);
while (G__7740__i < G__7740__a.length) {G__7740__a[G__7740__i] = arguments[G__7740__i + 1]; ++G__7740__i;}
G__7739 = new cljs.core.IndexedSeq(G__7740__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7741 = cljs.core.next(xs);
var G__7742 = cljs.core.next(ys);
xs = G__7741;
ys = G__7742;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7743 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7744 = cljs.core.next(s);
res = G__7743;
s = G__7744;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7749 = ((h + (cljs.core.hash((function (){var G__7747 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7747) : cljs.core.key.call(null,G__7747));
})()) ^ cljs.core.hash((function (){var G__7748 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7748) : cljs.core.val.call(null,G__7748));
})()))) % (4503599627370496));
var G__7750 = cljs.core.next(s);
h = G__7749;
s = G__7750;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7751 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7752 = cljs.core.next(s__$1);
h = G__7751;
s__$1 = G__7752;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__7763_7773 = cljs.core.seq(fn_map);
var chunk__7764_7774 = null;
var count__7765_7775 = (0);
var i__7766_7776 = (0);
while(true){
if((i__7766_7776 < count__7765_7775)){
var vec__7767_7777 = chunk__7764_7774.cljs$core$IIndexed$_nth$arity$2(null,i__7766_7776);
var key_name_7778 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7767_7777,(0),null);
var f_7779 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7767_7777,(1),null);
var str_name_7780 = (function (){var G__7768 = key_name_7778;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7768) : cljs.core.name.call(null,G__7768));
})();
(obj[str_name_7780] = f_7779);

var G__7781 = seq__7763_7773;
var G__7782 = chunk__7764_7774;
var G__7783 = count__7765_7775;
var G__7784 = (i__7766_7776 + (1));
seq__7763_7773 = G__7781;
chunk__7764_7774 = G__7782;
count__7765_7775 = G__7783;
i__7766_7776 = G__7784;
continue;
} else {
var temp__4126__auto___7785 = cljs.core.seq(seq__7763_7773);
if(temp__4126__auto___7785){
var seq__7763_7786__$1 = temp__4126__auto___7785;
if(cljs.core.chunked_seq_QMARK_(seq__7763_7786__$1)){
var c__4542__auto___7787 = (function (){var G__7769 = seq__7763_7786__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7769) : cljs.core.chunk_first.call(null,G__7769));
})();
var G__7788 = (function (){var G__7770 = seq__7763_7786__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7770) : cljs.core.chunk_rest.call(null,G__7770));
})();
var G__7789 = c__4542__auto___7787;
var G__7790 = cljs.core.count(c__4542__auto___7787);
var G__7791 = (0);
seq__7763_7773 = G__7788;
chunk__7764_7774 = G__7789;
count__7765_7775 = G__7790;
i__7766_7776 = G__7791;
continue;
} else {
var vec__7771_7792 = cljs.core.first(seq__7763_7786__$1);
var key_name_7793 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7771_7792,(0),null);
var f_7794 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7771_7792,(1),null);
var str_name_7795 = (function (){var G__7772 = key_name_7793;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7772) : cljs.core.name.call(null,G__7772));
})();
(obj[str_name_7795] = f_7794);

var G__7796 = cljs.core.next(seq__7763_7786__$1);
var G__7797 = null;
var G__7798 = (0);
var G__7799 = (0);
seq__7763_7773 = G__7796;
chunk__7764_7774 = G__7797;
count__7765_7775 = G__7798;
i__7766_7776 = G__7799;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__7801 = coll;
if(G__7801){
var bit__4436__auto__ = (G__7801.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4436__auto__) || (G__7801.cljs$core$IReversible$)){
return true;
} else {
if((!G__7801.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7801);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7801);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7802 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7802;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7803 = (i - (1));
var G__7804 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7803;
r = G__7804;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7805__i = 0, G__7805__a = new Array(arguments.length -  0);
while (G__7805__i < G__7805__a.length) {G__7805__a[G__7805__i] = arguments[G__7805__i + 0]; ++G__7805__i;}
  xs = new cljs.core.IndexedSeq(G__7805__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__7806){
var xs = cljs.core.seq(arglist__7806);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3755__auto__ = (coll == null);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var G__7810 = coll;
if(G__7810){
var bit__4429__auto__ = (G__7810.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4429__auto__) || (G__7810.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__7812 = x;
if(G__7812){
var bit__4436__auto__ = (G__7812.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4436__auto__) || (G__7812.cljs$core$IList$)){
return true;
} else {
if((!G__7812.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7812);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7812);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3743__auto__ = cljs.core.not(a.ns);
if(and__3743__auto__){
return b.ns;
} else {
return and__3743__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7819 = a.ns;
var G__7820 = b.ns;
return goog.array.defaultCompare(G__7819,G__7820);
})();
if(((0) === nsc)){
var G__7821 = a.name;
var G__7822 = b.name;
return goog.array.defaultCompare(G__7821,G__7822);
} else {
return nsc;
}
}
} else {
var G__7823 = a.name;
var G__7824 = b.name;
return goog.array.defaultCompare(G__7823,G__7824);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4176__auto__ = self__._hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7826 = null;
var G__7826__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7826__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7826 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7826__2.call(this,self__,coll);
case 3:
return G__7826__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7826.cljs$core$IFn$_invoke$arity$2 = G__7826__2;
G__7826.cljs$core$IFn$_invoke$arity$3 = G__7826__3;
return G__7826;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7825){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7825)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__7828 = x;
if(G__7828){
var bit__4429__auto__ = (G__7828.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4429__auto__) || (G__7828.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7830 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7830) : cljs.core.name.call(null,G__7830));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7831 = ls.sval();
ls = G__7831;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__7833 = s;
if(G__7833){
var bit__4429__auto__ = (G__7833.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4429__auto__) || (G__7833.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7834 = cljs.core.next(s__$1);
s__$1 = G__7834;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7835 = (0);
var xs_7836 = cljs.core.seq(coll);
while(true){
if(xs_7836){
(ret[i_7835] = cljs.core.to_array(cljs.core.first(xs_7836)));

var G__7837 = (i_7835 + (1));
var G__7838 = cljs.core.next(xs_7836);
i_7835 = G__7837;
xs_7836 = G__7838;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7841 = (i + (1));
var G__7842 = cljs.core.next(s__$1);
i = G__7841;
s__$1 = G__7842;
continue;
} else {
return a;
}
break;
}
} else {
var n__4642__auto___7843 = size;
var i_7844 = (0);
while(true){
if((i_7844 < n__4642__auto___7843)){
(a[i_7844] = init_val_or_seq);

var G__7845 = (i_7844 + (1));
i_7844 = G__7845;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7848 = (i + (1));
var G__7849 = cljs.core.next(s__$1);
i = G__7848;
s__$1 = G__7849;
continue;
} else {
return a;
}
break;
}
} else {
var n__4642__auto___7850 = size;
var i_7851 = (0);
while(true){
if((i_7851 < n__4642__auto___7850)){
(a[i_7851] = init_val_or_seq);

var G__7852 = (i_7851 + (1));
i_7851 = G__7852;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7855 = (i + (1));
var G__7856 = cljs.core.next(s__$1);
i = G__7855;
s__$1 = G__7856;
continue;
} else {
return a;
}
break;
}
} else {
var n__4642__auto___7857 = size;
var i_7858 = (0);
while(true){
if((i_7858 < n__4642__auto___7857)){
(a[i_7858] = init_val_or_seq);

var G__7859 = (i_7858 + (1));
i_7858 = G__7859;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7862 = (i + (1));
var G__7863 = cljs.core.next(s__$1);
i = G__7862;
s__$1 = G__7863;
continue;
} else {
return a;
}
break;
}
} else {
var n__4642__auto___7864 = size;
var i_7865 = (0);
while(true){
if((i_7865 < n__4642__auto___7864)){
(a[i_7865] = init_val_or_seq);

var G__7866 = (i_7865 + (1));
i_7865 = G__7866;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7867 = cljs.core.next(s__$1);
var G__7868 = (i - (1));
var G__7869 = (sum + (1));
s__$1 = G__7867;
i = G__7868;
sum = G__7869;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__7889__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7889 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7890__i = 0, G__7890__a = new Array(arguments.length -  2);
while (G__7890__i < G__7890__a.length) {G__7890__a[G__7890__i] = arguments[G__7890__i + 2]; ++G__7890__i;}
  zs = new cljs.core.IndexedSeq(G__7890__a,0);
} 
return G__7889__delegate.call(this,x,y,zs);};
G__7889.cljs$lang$maxFixedArity = 2;
G__7889.cljs$lang$applyTo = (function (arglist__7891){
var x = cljs.core.first(arglist__7891);
arglist__7891 = cljs.core.next(arglist__7891);
var y = cljs.core.first(arglist__7891);
var zs = cljs.core.rest(arglist__7891);
return G__7889__delegate(x,y,zs);
});
G__7889.cljs$core$IFn$_invoke$arity$variadic = G__7889__delegate;
return G__7889;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__7892 = null;
if (arguments.length > 2) {
var G__7893__i = 0, G__7893__a = new Array(arguments.length -  2);
while (G__7893__i < G__7893__a.length) {G__7893__a[G__7893__i] = arguments[G__7893__i + 2]; ++G__7893__i;}
G__7892 = new cljs.core.IndexedSeq(G__7893__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__7894__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7894 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7895__i = 0, G__7895__a = new Array(arguments.length -  4);
while (G__7895__i < G__7895__a.length) {G__7895__a[G__7895__i] = arguments[G__7895__i + 4]; ++G__7895__i;}
  more = new cljs.core.IndexedSeq(G__7895__a,0);
} 
return G__7894__delegate.call(this,a,b,c,d,more);};
G__7894.cljs$lang$maxFixedArity = 4;
G__7894.cljs$lang$applyTo = (function (arglist__7896){
var a = cljs.core.first(arglist__7896);
arglist__7896 = cljs.core.next(arglist__7896);
var b = cljs.core.first(arglist__7896);
arglist__7896 = cljs.core.next(arglist__7896);
var c = cljs.core.first(arglist__7896);
arglist__7896 = cljs.core.next(arglist__7896);
var d = cljs.core.first(arglist__7896);
var more = cljs.core.rest(arglist__7896);
return G__7894__delegate(a,b,c,d,more);
});
G__7894.cljs$core$IFn$_invoke$arity$variadic = G__7894__delegate;
return G__7894;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__7897 = null;
if (arguments.length > 4) {
var G__7898__i = 0, G__7898__a = new Array(arguments.length -  4);
while (G__7898__i < G__7898__a.length) {G__7898__a[G__7898__i] = arguments[G__7898__i + 4]; ++G__7898__i;}
G__7897 = new cljs.core.IndexedSeq(G__7898__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__7899__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7900 = ntcoll;
var G__7901 = cljs.core.first(vals);
var G__7902 = cljs.core.next(vals);
tcoll = G__7900;
val = G__7901;
vals = G__7902;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7899 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7903__i = 0, G__7903__a = new Array(arguments.length -  2);
while (G__7903__i < G__7903__a.length) {G__7903__a[G__7903__i] = arguments[G__7903__i + 2]; ++G__7903__i;}
  vals = new cljs.core.IndexedSeq(G__7903__a,0);
} 
return G__7899__delegate.call(this,tcoll,val,vals);};
G__7899.cljs$lang$maxFixedArity = 2;
G__7899.cljs$lang$applyTo = (function (arglist__7904){
var tcoll = cljs.core.first(arglist__7904);
arglist__7904 = cljs.core.next(arglist__7904);
var val = cljs.core.first(arglist__7904);
var vals = cljs.core.rest(arglist__7904);
return G__7899__delegate(tcoll,val,vals);
});
G__7899.cljs$core$IFn$_invoke$arity$variadic = G__7899__delegate;
return G__7899;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__7905 = null;
if (arguments.length > 2) {
var G__7906__i = 0, G__7906__a = new Array(arguments.length -  2);
while (G__7906__i < G__7906__a.length) {G__7906__a[G__7906__i] = arguments[G__7906__i + 2]; ++G__7906__i;}
G__7905 = new cljs.core.IndexedSeq(G__7906__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7905);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__7907__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7908 = ntcoll;
var G__7909 = cljs.core.first(kvs);
var G__7910 = cljs.core.second(kvs);
var G__7911 = cljs.core.nnext(kvs);
tcoll = G__7908;
key = G__7909;
val = G__7910;
kvs = G__7911;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7907 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7912__i = 0, G__7912__a = new Array(arguments.length -  3);
while (G__7912__i < G__7912__a.length) {G__7912__a[G__7912__i] = arguments[G__7912__i + 3]; ++G__7912__i;}
  kvs = new cljs.core.IndexedSeq(G__7912__a,0);
} 
return G__7907__delegate.call(this,tcoll,key,val,kvs);};
G__7907.cljs$lang$maxFixedArity = 3;
G__7907.cljs$lang$applyTo = (function (arglist__7913){
var tcoll = cljs.core.first(arglist__7913);
arglist__7913 = cljs.core.next(arglist__7913);
var key = cljs.core.first(arglist__7913);
arglist__7913 = cljs.core.next(arglist__7913);
var val = cljs.core.first(arglist__7913);
var kvs = cljs.core.rest(arglist__7913);
return G__7907__delegate(tcoll,key,val,kvs);
});
G__7907.cljs$core$IFn$_invoke$arity$variadic = G__7907__delegate;
return G__7907;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7914 = null;
if (arguments.length > 3) {
var G__7915__i = 0, G__7915__a = new Array(arguments.length -  3);
while (G__7915__i < G__7915__a.length) {G__7915__a[G__7915__i] = arguments[G__7915__i + 3]; ++G__7915__i;}
G__7914 = new cljs.core.IndexedSeq(G__7915__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7914);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__7916__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7917 = ntcoll;
var G__7918 = cljs.core.first(ks);
var G__7919 = cljs.core.next(ks);
tcoll = G__7917;
key = G__7918;
ks = G__7919;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7916 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7920__i = 0, G__7920__a = new Array(arguments.length -  2);
while (G__7920__i < G__7920__a.length) {G__7920__a[G__7920__i] = arguments[G__7920__i + 2]; ++G__7920__i;}
  ks = new cljs.core.IndexedSeq(G__7920__a,0);
} 
return G__7916__delegate.call(this,tcoll,key,ks);};
G__7916.cljs$lang$maxFixedArity = 2;
G__7916.cljs$lang$applyTo = (function (arglist__7921){
var tcoll = cljs.core.first(arglist__7921);
arglist__7921 = cljs.core.next(arglist__7921);
var key = cljs.core.first(arglist__7921);
var ks = cljs.core.rest(arglist__7921);
return G__7916__delegate(tcoll,key,ks);
});
G__7916.cljs$core$IFn$_invoke$arity$variadic = G__7916__delegate;
return G__7916;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7922 = null;
if (arguments.length > 2) {
var G__7923__i = 0, G__7923__a = new Array(arguments.length -  2);
while (G__7923__i < G__7923__a.length) {G__7923__a[G__7923__i] = arguments[G__7923__i + 2]; ++G__7923__i;}
G__7922 = new cljs.core.IndexedSeq(G__7923__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__7924__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7925 = ntcoll;
var G__7926 = cljs.core.first(vals);
var G__7927 = cljs.core.next(vals);
tcoll = G__7925;
val = G__7926;
vals = G__7927;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7924 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7928__i = 0, G__7928__a = new Array(arguments.length -  2);
while (G__7928__i < G__7928__a.length) {G__7928__a[G__7928__i] = arguments[G__7928__i + 2]; ++G__7928__i;}
  vals = new cljs.core.IndexedSeq(G__7928__a,0);
} 
return G__7924__delegate.call(this,tcoll,val,vals);};
G__7924.cljs$lang$maxFixedArity = 2;
G__7924.cljs$lang$applyTo = (function (arglist__7929){
var tcoll = cljs.core.first(arglist__7929);
arglist__7929 = cljs.core.next(arglist__7929);
var val = cljs.core.first(arglist__7929);
var vals = cljs.core.rest(arglist__7929);
return G__7924__delegate(tcoll,val,vals);
});
G__7924.cljs$core$IFn$_invoke$arity$variadic = G__7924__delegate;
return G__7924;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__7930 = null;
if (arguments.length > 2) {
var G__7931__i = 0, G__7931__a = new Array(arguments.length -  2);
while (G__7931__i < G__7931__a.length) {G__7931__a[G__7931__i] = arguments[G__7931__i + 2]; ++G__7931__i;}
G__7930 = new cljs.core.IndexedSeq(G__7931__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4686 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4686);
} else {
var G__8142 = a4686;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8142) : f.call(null,G__8142));
}
} else {
var b4687 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4686,b4687);
} else {
var G__8143 = a4686;
var G__8144 = b4687;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8143,G__8144) : f.call(null,G__8143,G__8144));
}
} else {
var c4688 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4686,b4687,c4688);
} else {
var G__8145 = a4686;
var G__8146 = b4687;
var G__8147 = c4688;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8145,G__8146,G__8147) : f.call(null,G__8145,G__8146,G__8147));
}
} else {
var d4689 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4686,b4687,c4688,d4689);
} else {
var G__8148 = a4686;
var G__8149 = b4687;
var G__8150 = c4688;
var G__8151 = d4689;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8148,G__8149,G__8150,G__8151) : f.call(null,G__8148,G__8149,G__8150,G__8151));
}
} else {
var e4690 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4686,b4687,c4688,d4689,e4690);
} else {
var G__8152 = a4686;
var G__8153 = b4687;
var G__8154 = c4688;
var G__8155 = d4689;
var G__8156 = e4690;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8152,G__8153,G__8154,G__8155,G__8156) : f.call(null,G__8152,G__8153,G__8154,G__8155,G__8156));
}
} else {
var f4691 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4686,b4687,c4688,d4689,e4690,f4691);
} else {
var G__8157 = a4686;
var G__8158 = b4687;
var G__8159 = c4688;
var G__8160 = d4689;
var G__8161 = e4690;
var G__8162 = f4691;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8157,G__8158,G__8159,G__8160,G__8161,G__8162) : f.call(null,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162));
}
} else {
var g4692 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4686,b4687,c4688,d4689,e4690,f4691,g4692);
} else {
var G__8163 = a4686;
var G__8164 = b4687;
var G__8165 = c4688;
var G__8166 = d4689;
var G__8167 = e4690;
var G__8168 = f4691;
var G__8169 = g4692;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169) : f.call(null,G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169));
}
} else {
var h4693 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693);
} else {
var G__8170 = a4686;
var G__8171 = b4687;
var G__8172 = c4688;
var G__8173 = d4689;
var G__8174 = e4690;
var G__8175 = f4691;
var G__8176 = g4692;
var G__8177 = h4693;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177) : f.call(null,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177));
}
} else {
var i4694 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694);
} else {
var G__8178 = a4686;
var G__8179 = b4687;
var G__8180 = c4688;
var G__8181 = d4689;
var G__8182 = e4690;
var G__8183 = f4691;
var G__8184 = g4692;
var G__8185 = h4693;
var G__8186 = i4694;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186) : f.call(null,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186));
}
} else {
var j4695 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695);
} else {
var G__8187 = a4686;
var G__8188 = b4687;
var G__8189 = c4688;
var G__8190 = d4689;
var G__8191 = e4690;
var G__8192 = f4691;
var G__8193 = g4692;
var G__8194 = h4693;
var G__8195 = i4694;
var G__8196 = j4695;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196) : f.call(null,G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196));
}
} else {
var k4696 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696);
} else {
var G__8197 = a4686;
var G__8198 = b4687;
var G__8199 = c4688;
var G__8200 = d4689;
var G__8201 = e4690;
var G__8202 = f4691;
var G__8203 = g4692;
var G__8204 = h4693;
var G__8205 = i4694;
var G__8206 = j4695;
var G__8207 = k4696;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8197,G__8198,G__8199,G__8200,G__8201,G__8202,G__8203,G__8204,G__8205,G__8206,G__8207) : f.call(null,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202,G__8203,G__8204,G__8205,G__8206,G__8207));
}
} else {
var l4697 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697);
} else {
var G__8208 = a4686;
var G__8209 = b4687;
var G__8210 = c4688;
var G__8211 = d4689;
var G__8212 = e4690;
var G__8213 = f4691;
var G__8214 = g4692;
var G__8215 = h4693;
var G__8216 = i4694;
var G__8217 = j4695;
var G__8218 = k4696;
var G__8219 = l4697;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219) : f.call(null,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219));
}
} else {
var m4698 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697,m4698);
} else {
var G__8220 = a4686;
var G__8221 = b4687;
var G__8222 = c4688;
var G__8223 = d4689;
var G__8224 = e4690;
var G__8225 = f4691;
var G__8226 = g4692;
var G__8227 = h4693;
var G__8228 = i4694;
var G__8229 = j4695;
var G__8230 = k4696;
var G__8231 = l4697;
var G__8232 = m4698;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8220,G__8221,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232) : f.call(null,G__8220,G__8221,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232));
}
} else {
var n4699 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697,m4698,n4699);
} else {
var G__8233 = a4686;
var G__8234 = b4687;
var G__8235 = c4688;
var G__8236 = d4689;
var G__8237 = e4690;
var G__8238 = f4691;
var G__8239 = g4692;
var G__8240 = h4693;
var G__8241 = i4694;
var G__8242 = j4695;
var G__8243 = k4696;
var G__8244 = l4697;
var G__8245 = m4698;
var G__8246 = n4699;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8233,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244,G__8245,G__8246) : f.call(null,G__8233,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244,G__8245,G__8246));
}
} else {
var o4700 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697,m4698,n4699,o4700);
} else {
var G__8247 = a4686;
var G__8248 = b4687;
var G__8249 = c4688;
var G__8250 = d4689;
var G__8251 = e4690;
var G__8252 = f4691;
var G__8253 = g4692;
var G__8254 = h4693;
var G__8255 = i4694;
var G__8256 = j4695;
var G__8257 = k4696;
var G__8258 = l4697;
var G__8259 = m4698;
var G__8260 = n4699;
var G__8261 = o4700;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8247,G__8248,G__8249,G__8250,G__8251,G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260,G__8261) : f.call(null,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260,G__8261));
}
} else {
var p4701 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697,m4698,n4699,o4700,p4701);
} else {
var G__8262 = a4686;
var G__8263 = b4687;
var G__8264 = c4688;
var G__8265 = d4689;
var G__8266 = e4690;
var G__8267 = f4691;
var G__8268 = g4692;
var G__8269 = h4693;
var G__8270 = i4694;
var G__8271 = j4695;
var G__8272 = k4696;
var G__8273 = l4697;
var G__8274 = m4698;
var G__8275 = n4699;
var G__8276 = o4700;
var G__8277 = p4701;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277) : f.call(null,G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277));
}
} else {
var q4702 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697,m4698,n4699,o4700,p4701,q4702);
} else {
var G__8278 = a4686;
var G__8279 = b4687;
var G__8280 = c4688;
var G__8281 = d4689;
var G__8282 = e4690;
var G__8283 = f4691;
var G__8284 = g4692;
var G__8285 = h4693;
var G__8286 = i4694;
var G__8287 = j4695;
var G__8288 = k4696;
var G__8289 = l4697;
var G__8290 = m4698;
var G__8291 = n4699;
var G__8292 = o4700;
var G__8293 = p4701;
var G__8294 = q4702;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8278,G__8279,G__8280,G__8281,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294) : f.call(null,G__8278,G__8279,G__8280,G__8281,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294));
}
} else {
var r4703 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697,m4698,n4699,o4700,p4701,q4702,r4703);
} else {
var G__8295 = a4686;
var G__8296 = b4687;
var G__8297 = c4688;
var G__8298 = d4689;
var G__8299 = e4690;
var G__8300 = f4691;
var G__8301 = g4692;
var G__8302 = h4693;
var G__8303 = i4694;
var G__8304 = j4695;
var G__8305 = k4696;
var G__8306 = l4697;
var G__8307 = m4698;
var G__8308 = n4699;
var G__8309 = o4700;
var G__8310 = p4701;
var G__8311 = q4702;
var G__8312 = r4703;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312) : f.call(null,G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312));
}
} else {
var s4704 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697,m4698,n4699,o4700,p4701,q4702,r4703,s4704);
} else {
var G__8313 = a4686;
var G__8314 = b4687;
var G__8315 = c4688;
var G__8316 = d4689;
var G__8317 = e4690;
var G__8318 = f4691;
var G__8319 = g4692;
var G__8320 = h4693;
var G__8321 = i4694;
var G__8322 = j4695;
var G__8323 = k4696;
var G__8324 = l4697;
var G__8325 = m4698;
var G__8326 = n4699;
var G__8327 = o4700;
var G__8328 = p4701;
var G__8329 = q4702;
var G__8330 = r4703;
var G__8331 = s4704;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327,G__8328,G__8329,G__8330,G__8331) : f.call(null,G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327,G__8328,G__8329,G__8330,G__8331));
}
} else {
var t4705 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4686,b4687,c4688,d4689,e4690,f4691,g4692,h4693,i4694,j4695,k4696,l4697,m4698,n4699,o4700,p4701,q4702,r4703,s4704,t4705);
} else {
var G__8332 = a4686;
var G__8333 = b4687;
var G__8334 = c4688;
var G__8335 = d4689;
var G__8336 = e4690;
var G__8337 = f4691;
var G__8338 = g4692;
var G__8339 = h4693;
var G__8340 = i4694;
var G__8341 = j4695;
var G__8342 = k4696;
var G__8343 = l4697;
var G__8344 = m4698;
var G__8345 = n4699;
var G__8346 = o4700;
var G__8347 = p4701;
var G__8348 = q4702;
var G__8349 = r4703;
var G__8350 = s4704;
var G__8351 = t4705;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8332,G__8333,G__8334,G__8335,G__8336,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351) : f.call(null,G__8332,G__8333,G__8334,G__8335,G__8336,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__8352__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__8352 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__8353__i = 0, G__8353__a = new Array(arguments.length -  5);
while (G__8353__i < G__8353__a.length) {G__8353__a[G__8353__i] = arguments[G__8353__i + 5]; ++G__8353__i;}
  args = new cljs.core.IndexedSeq(G__8353__a,0);
} 
return G__8352__delegate.call(this,f,a,b,c,d,args);};
G__8352.cljs$lang$maxFixedArity = 5;
G__8352.cljs$lang$applyTo = (function (arglist__8354){
var f = cljs.core.first(arglist__8354);
arglist__8354 = cljs.core.next(arglist__8354);
var a = cljs.core.first(arglist__8354);
arglist__8354 = cljs.core.next(arglist__8354);
var b = cljs.core.first(arglist__8354);
arglist__8354 = cljs.core.next(arglist__8354);
var c = cljs.core.first(arglist__8354);
arglist__8354 = cljs.core.next(arglist__8354);
var d = cljs.core.first(arglist__8354);
var args = cljs.core.rest(arglist__8354);
return G__8352__delegate(f,a,b,c,d,args);
});
G__8352.cljs$core$IFn$_invoke$arity$variadic = G__8352__delegate;
return G__8352;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__8355 = null;
if (arguments.length > 5) {
var G__8356__i = 0, G__8356__a = new Array(arguments.length -  5);
while (G__8356__i < G__8356__a.length) {G__8356__a[G__8356__i] = arguments[G__8356__i + 5]; ++G__8356__i;}
G__8355 = new cljs.core.IndexedSeq(G__8356__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__8355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8372 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8372) : f.call(null,G__8372));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8373 = cljs.core.meta(obj);
var G__8374 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8373,G__8374) : f.call(null,G__8373,G__8374));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8375 = cljs.core.meta(obj);
var G__8376 = a;
var G__8377 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8375,G__8376,G__8377) : f.call(null,G__8375,G__8376,G__8377));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8378 = cljs.core.meta(obj);
var G__8379 = a;
var G__8380 = b;
var G__8381 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8378,G__8379,G__8380,G__8381) : f.call(null,G__8378,G__8379,G__8380,G__8381));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8382 = cljs.core.meta(obj);
var G__8383 = a;
var G__8384 = b;
var G__8385 = c;
var G__8386 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8382,G__8383,G__8384,G__8385,G__8386) : f.call(null,G__8382,G__8383,G__8384,G__8385,G__8386));
})());
});
var vary_meta__7 = (function() { 
var G__8387__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8387 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8388__i = 0, G__8388__a = new Array(arguments.length -  6);
while (G__8388__i < G__8388__a.length) {G__8388__a[G__8388__i] = arguments[G__8388__i + 6]; ++G__8388__i;}
  args = new cljs.core.IndexedSeq(G__8388__a,0);
} 
return G__8387__delegate.call(this,obj,f,a,b,c,d,args);};
G__8387.cljs$lang$maxFixedArity = 6;
G__8387.cljs$lang$applyTo = (function (arglist__8389){
var obj = cljs.core.first(arglist__8389);
arglist__8389 = cljs.core.next(arglist__8389);
var f = cljs.core.first(arglist__8389);
arglist__8389 = cljs.core.next(arglist__8389);
var a = cljs.core.first(arglist__8389);
arglist__8389 = cljs.core.next(arglist__8389);
var b = cljs.core.first(arglist__8389);
arglist__8389 = cljs.core.next(arglist__8389);
var c = cljs.core.first(arglist__8389);
arglist__8389 = cljs.core.next(arglist__8389);
var d = cljs.core.first(arglist__8389);
var args = cljs.core.rest(arglist__8389);
return G__8387__delegate(obj,f,a,b,c,d,args);
});
G__8387.cljs$core$IFn$_invoke$arity$variadic = G__8387__delegate;
return G__8387;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8390 = null;
if (arguments.length > 6) {
var G__8391__i = 0, G__8391__a = new Array(arguments.length -  6);
while (G__8391__i < G__8391__a.length) {G__8391__a[G__8391__i] = arguments[G__8391__i + 6]; ++G__8391__i;}
G__8390 = new cljs.core.IndexedSeq(G__8391__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__8392__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8392 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8393__i = 0, G__8393__a = new Array(arguments.length -  2);
while (G__8393__i < G__8393__a.length) {G__8393__a[G__8393__i] = arguments[G__8393__i + 2]; ++G__8393__i;}
  more = new cljs.core.IndexedSeq(G__8393__a,0);
} 
return G__8392__delegate.call(this,x,y,more);};
G__8392.cljs$lang$maxFixedArity = 2;
G__8392.cljs$lang$applyTo = (function (arglist__8394){
var x = cljs.core.first(arglist__8394);
arglist__8394 = cljs.core.next(arglist__8394);
var y = cljs.core.first(arglist__8394);
var more = cljs.core.rest(arglist__8394);
return G__8392__delegate(x,y,more);
});
G__8392.cljs$core$IFn$_invoke$arity$variadic = G__8392__delegate;
return G__8392;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__8395 = null;
if (arguments.length > 2) {
var G__8396__i = 0, G__8396__a = new Array(arguments.length -  2);
while (G__8396__i < G__8396__a.length) {G__8396__a[G__8396__i] = arguments[G__8396__i + 2]; ++G__8396__i;}
G__8395 = new cljs.core.IndexedSeq(G__8396__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8395);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t8400 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8400 = (function (nil_iter,meta8401){
this.nil_iter = nil_iter;
this.meta8401 = meta8401;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8400.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8400.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8400.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8400.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8402){
var self__ = this;
var _8402__$1 = this;
return self__.meta8401;
});

cljs.core.t8400.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8402,meta8401__$1){
var self__ = this;
var _8402__$1 = this;
return (new cljs.core.t8400(self__.nil_iter,meta8401__$1));
});

cljs.core.t8400.cljs$lang$type = true;

cljs.core.t8400.cljs$lang$ctorStr = "cljs.core/t8400";

cljs.core.t8400.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/t8400");
});

cljs.core.__GT_t8400 = (function __GT_t8400(nil_iter__$1,meta8401){
return (new cljs.core.t8400(nil_iter__$1,meta8401));
});

}

return (new cljs.core.t8400(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/jwoo/github/frameworks-svg-test/om-svg-test/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3743__auto__ = !((lt.stepper == null));
if(and__3743__auto__){
return self__.iter.hasNext();
} else {
return and__3743__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8403 = lt;
var G__8404 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8403,G__8404) : self__.xform.call(null,G__8403,G__8404));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8405 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8405) : self__.xform.call(null,G__8405));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8407 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8407) : xform.call(null,G__8407));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8409 = cljs.core.next(iters__$1);
iters__$1 = G__8409;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4642__auto___8410 = self__.iters.length;
var i_8411 = (0);
while(true){
if((i_8411 < n__4642__auto___8410)){
(self__.nexts[i_8411] = (self__.iters[i_8411]).next());

var G__8412 = (i_8411 + (1));
i_8411 = G__8412;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3743__auto__ = !((lt.stepper == null));
if(and__3743__auto__){
return this$.hasNext();
} else {
return and__3743__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8408 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8408) : self__.xform.call(null,G__8408));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8417 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8417) : xform.call(null,G__8417));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8418_8422 = cljs.core.seq(colls);
var chunk__8419_8423 = null;
var count__8420_8424 = (0);
var i__8421_8425 = (0);
while(true){
if((i__8421_8425 < count__8420_8424)){
var coll_8426 = chunk__8419_8423.cljs$core$IIndexed$_nth$arity$2(null,i__8421_8425);
iters.push(cljs.core.iter(coll_8426));

var G__8427 = seq__8418_8422;
var G__8428 = chunk__8419_8423;
var G__8429 = count__8420_8424;
var G__8430 = (i__8421_8425 + (1));
seq__8418_8422 = G__8427;
chunk__8419_8423 = G__8428;
count__8420_8424 = G__8429;
i__8421_8425 = G__8430;
continue;
} else {
var temp__4126__auto___8431 = cljs.core.seq(seq__8418_8422);
if(temp__4126__auto___8431){
var seq__8418_8432__$1 = temp__4126__auto___8431;
if(cljs.core.chunked_seq_QMARK_(seq__8418_8432__$1)){
var c__4542__auto___8433 = cljs.core.chunk_first(seq__8418_8432__$1);
var G__8434 = cljs.core.chunk_rest(seq__8418_8432__$1);
var G__8435 = c__4542__auto___8433;
var G__8436 = cljs.core.count(c__4542__auto___8433);
var G__8437 = (0);
seq__8418_8422 = G__8434;
chunk__8419_8423 = G__8435;
count__8420_8424 = G__8436;
i__8421_8425 = G__8437;
continue;
} else {
var coll_8438 = cljs.core.first(seq__8418_8432__$1);
iters.push(cljs.core.iter(coll_8438));

var G__8439 = cljs.core.next(seq__8418_8432__$1);
var G__8440 = null;
var G__8441 = (0);
var G__8442 = (0);
seq__8418_8422 = G__8439;
chunk__8419_8423 = G__8440;
count__8420_8424 = G__8441;
i__8421_8425 = G__8442;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3755__auto__ = cljs.core.seq(coll);
if(or__3755__auto__){
return or__3755__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__8443__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8443 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8444__i = 0, G__8444__a = new Array(arguments.length -  2);
while (G__8444__i < G__8444__a.length) {G__8444__a[G__8444__i] = arguments[G__8444__i + 2]; ++G__8444__i;}
  colls = new cljs.core.IndexedSeq(G__8444__a,0);
} 
return G__8443__delegate.call(this,xform,coll,colls);};
G__8443.cljs$lang$maxFixedArity = 2;
G__8443.cljs$lang$applyTo = (function (arglist__8445){
var xform = cljs.core.first(arglist__8445);
arglist__8445 = cljs.core.next(arglist__8445);
var coll = cljs.core.first(arglist__8445);
var colls = cljs.core.rest(arglist__8445);
return G__8443__delegate(xform,coll,colls);
});
G__8443.cljs$core$IFn$_invoke$arity$variadic = G__8443__delegate;
return G__8443;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__8446 = null;
if (arguments.length > 2) {
var G__8447__i = 0, G__8447__a = new Array(arguments.length -  2);
while (G__8447__i < G__8447__a.length) {G__8447__a[G__8447__i] = arguments[G__8447__i + 2]; ++G__8447__i;}
G__8446 = new cljs.core.IndexedSeq(G__8447__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8446);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8449 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8449) : pred.call(null,G__8449));
})())){
var G__8450 = pred;
var G__8451 = cljs.core.next(coll);
pred = G__8450;
coll = G__8451;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3755__auto__ = (function (){var G__8455 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8455) : pred.call(null,G__8455));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var G__8456 = pred;
var G__8457 = cljs.core.next(coll);
pred = G__8456;
coll = G__8457;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__8464 = null;
var G__8464__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8464__1 = (function (x){
return cljs.core.not((function (){var G__8461 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8461) : f.call(null,G__8461));
})());
});
var G__8464__2 = (function (x,y){
return cljs.core.not((function (){var G__8462 = x;
var G__8463 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8462,G__8463) : f.call(null,G__8462,G__8463));
})());
});
var G__8464__3 = (function() { 
var G__8465__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8465 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8466__i = 0, G__8466__a = new Array(arguments.length -  2);
while (G__8466__i < G__8466__a.length) {G__8466__a[G__8466__i] = arguments[G__8466__i + 2]; ++G__8466__i;}
  zs = new cljs.core.IndexedSeq(G__8466__a,0);
} 
return G__8465__delegate.call(this,x,y,zs);};
G__8465.cljs$lang$maxFixedArity = 2;
G__8465.cljs$lang$applyTo = (function (arglist__8467){
var x = cljs.core.first(arglist__8467);
arglist__8467 = cljs.core.next(arglist__8467);
var y = cljs.core.first(arglist__8467);
var zs = cljs.core.rest(arglist__8467);
return G__8465__delegate(x,y,zs);
});
G__8465.cljs$core$IFn$_invoke$arity$variadic = G__8465__delegate;
return G__8465;
})()
;
G__8464 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8464__0.call(this);
case 1:
return G__8464__1.call(this,x);
case 2:
return G__8464__2.call(this,x,y);
default:
var G__8468 = null;
if (arguments.length > 2) {
var G__8469__i = 0, G__8469__a = new Array(arguments.length -  2);
while (G__8469__i < G__8469__a.length) {G__8469__a[G__8469__i] = arguments[G__8469__i + 2]; ++G__8469__i;}
G__8468 = new cljs.core.IndexedSeq(G__8469__a,0);
}
return G__8464__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8468);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8464.cljs$lang$maxFixedArity = 2;
G__8464.cljs$lang$applyTo = G__8464__3.cljs$lang$applyTo;
G__8464.cljs$core$IFn$_invoke$arity$0 = G__8464__0;
G__8464.cljs$core$IFn$_invoke$arity$1 = G__8464__1;
G__8464.cljs$core$IFn$_invoke$arity$2 = G__8464__2;
G__8464.cljs$core$IFn$_invoke$arity$variadic = G__8464__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8464;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__8470__delegate = function (args){
return x;
};
var G__8470 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8471__i = 0, G__8471__a = new Array(arguments.length -  0);
while (G__8471__i < G__8471__a.length) {G__8471__a[G__8471__i] = arguments[G__8471__i + 0]; ++G__8471__i;}
  args = new cljs.core.IndexedSeq(G__8471__a,0);
} 
return G__8470__delegate.call(this,args);};
G__8470.cljs$lang$maxFixedArity = 0;
G__8470.cljs$lang$applyTo = (function (arglist__8472){
var args = cljs.core.seq(arglist__8472);
return G__8470__delegate(args);
});
G__8470.cljs$core$IFn$_invoke$arity$variadic = G__8470__delegate;
return G__8470;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__8527 = null;
var G__8527__0 = (function (){
var G__8500 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8500) : f.call(null,G__8500));
});
var G__8527__1 = (function (x){
var G__8501 = (function (){var G__8502 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8502) : g.call(null,G__8502));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8501) : f.call(null,G__8501));
});
var G__8527__2 = (function (x,y){
var G__8503 = (function (){var G__8504 = x;
var G__8505 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8504,G__8505) : g.call(null,G__8504,G__8505));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8503) : f.call(null,G__8503));
});
var G__8527__3 = (function (x,y,z){
var G__8506 = (function (){var G__8507 = x;
var G__8508 = y;
var G__8509 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8507,G__8508,G__8509) : g.call(null,G__8507,G__8508,G__8509));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8506) : f.call(null,G__8506));
});
var G__8527__4 = (function() { 
var G__8528__delegate = function (x,y,z,args){
var G__8510 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8510) : f.call(null,G__8510));
};
var G__8528 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8529__i = 0, G__8529__a = new Array(arguments.length -  3);
while (G__8529__i < G__8529__a.length) {G__8529__a[G__8529__i] = arguments[G__8529__i + 3]; ++G__8529__i;}
  args = new cljs.core.IndexedSeq(G__8529__a,0);
} 
return G__8528__delegate.call(this,x,y,z,args);};
G__8528.cljs$lang$maxFixedArity = 3;
G__8528.cljs$lang$applyTo = (function (arglist__8530){
var x = cljs.core.first(arglist__8530);
arglist__8530 = cljs.core.next(arglist__8530);
var y = cljs.core.first(arglist__8530);
arglist__8530 = cljs.core.next(arglist__8530);
var z = cljs.core.first(arglist__8530);
var args = cljs.core.rest(arglist__8530);
return G__8528__delegate(x,y,z,args);
});
G__8528.cljs$core$IFn$_invoke$arity$variadic = G__8528__delegate;
return G__8528;
})()
;
G__8527 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8527__0.call(this);
case 1:
return G__8527__1.call(this,x);
case 2:
return G__8527__2.call(this,x,y);
case 3:
return G__8527__3.call(this,x,y,z);
default:
var G__8531 = null;
if (arguments.length > 3) {
var G__8532__i = 0, G__8532__a = new Array(arguments.length -  3);
while (G__8532__i < G__8532__a.length) {G__8532__a[G__8532__i] = arguments[G__8532__i + 3]; ++G__8532__i;}
G__8531 = new cljs.core.IndexedSeq(G__8532__a,0);
}
return G__8527__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8527.cljs$lang$maxFixedArity = 3;
G__8527.cljs$lang$applyTo = G__8527__4.cljs$lang$applyTo;
G__8527.cljs$core$IFn$_invoke$arity$0 = G__8527__0;
G__8527.cljs$core$IFn$_invoke$arity$1 = G__8527__1;
G__8527.cljs$core$IFn$_invoke$arity$2 = G__8527__2;
G__8527.cljs$core$IFn$_invoke$arity$3 = G__8527__3;
G__8527.cljs$core$IFn$_invoke$arity$variadic = G__8527__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8527;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__8533 = null;
var G__8533__0 = (function (){
var G__8511 = (function (){var G__8512 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8512) : g.call(null,G__8512));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8511) : f.call(null,G__8511));
});
var G__8533__1 = (function (x){
var G__8513 = (function (){var G__8514 = (function (){var G__8515 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8515) : h.call(null,G__8515));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8514) : g.call(null,G__8514));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8513) : f.call(null,G__8513));
});
var G__8533__2 = (function (x,y){
var G__8516 = (function (){var G__8517 = (function (){var G__8518 = x;
var G__8519 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8518,G__8519) : h.call(null,G__8518,G__8519));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8517) : g.call(null,G__8517));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8516) : f.call(null,G__8516));
});
var G__8533__3 = (function (x,y,z){
var G__8520 = (function (){var G__8521 = (function (){var G__8522 = x;
var G__8523 = y;
var G__8524 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8522,G__8523,G__8524) : h.call(null,G__8522,G__8523,G__8524));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8521) : g.call(null,G__8521));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8520) : f.call(null,G__8520));
});
var G__8533__4 = (function() { 
var G__8534__delegate = function (x,y,z,args){
var G__8525 = (function (){var G__8526 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8526) : g.call(null,G__8526));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8525) : f.call(null,G__8525));
};
var G__8534 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8535__i = 0, G__8535__a = new Array(arguments.length -  3);
while (G__8535__i < G__8535__a.length) {G__8535__a[G__8535__i] = arguments[G__8535__i + 3]; ++G__8535__i;}
  args = new cljs.core.IndexedSeq(G__8535__a,0);
} 
return G__8534__delegate.call(this,x,y,z,args);};
G__8534.cljs$lang$maxFixedArity = 3;
G__8534.cljs$lang$applyTo = (function (arglist__8536){
var x = cljs.core.first(arglist__8536);
arglist__8536 = cljs.core.next(arglist__8536);
var y = cljs.core.first(arglist__8536);
arglist__8536 = cljs.core.next(arglist__8536);
var z = cljs.core.first(arglist__8536);
var args = cljs.core.rest(arglist__8536);
return G__8534__delegate(x,y,z,args);
});
G__8534.cljs$core$IFn$_invoke$arity$variadic = G__8534__delegate;
return G__8534;
})()
;
G__8533 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8533__0.call(this);
case 1:
return G__8533__1.call(this,x);
case 2:
return G__8533__2.call(this,x,y);
case 3:
return G__8533__3.call(this,x,y,z);
default:
var G__8537 = null;
if (arguments.length > 3) {
var G__8538__i = 0, G__8538__a = new Array(arguments.length -  3);
while (G__8538__i < G__8538__a.length) {G__8538__a[G__8538__i] = arguments[G__8538__i + 3]; ++G__8538__i;}
G__8537 = new cljs.core.IndexedSeq(G__8538__a,0);
}
return G__8533__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8533.cljs$lang$maxFixedArity = 3;
G__8533.cljs$lang$applyTo = G__8533__4.cljs$lang$applyTo;
G__8533.cljs$core$IFn$_invoke$arity$0 = G__8533__0;
G__8533.cljs$core$IFn$_invoke$arity$1 = G__8533__1;
G__8533.cljs$core$IFn$_invoke$arity$2 = G__8533__2;
G__8533.cljs$core$IFn$_invoke$arity$3 = G__8533__3;
G__8533.cljs$core$IFn$_invoke$arity$variadic = G__8533__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8533;
})()
});
var comp__4 = (function() { 
var G__8539__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8540__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8541 = cljs.core.first(fs__$2).call(null,ret);
var G__8542 = cljs.core.next(fs__$2);
ret = G__8541;
fs__$2 = G__8542;
continue;
} else {
return ret;
}
break;
}
};
var G__8540 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8543__i = 0, G__8543__a = new Array(arguments.length -  0);
while (G__8543__i < G__8543__a.length) {G__8543__a[G__8543__i] = arguments[G__8543__i + 0]; ++G__8543__i;}
  args = new cljs.core.IndexedSeq(G__8543__a,0);
} 
return G__8540__delegate.call(this,args);};
G__8540.cljs$lang$maxFixedArity = 0;
G__8540.cljs$lang$applyTo = (function (arglist__8544){
var args = cljs.core.seq(arglist__8544);
return G__8540__delegate(args);
});
G__8540.cljs$core$IFn$_invoke$arity$variadic = G__8540__delegate;
return G__8540;
})()
;
;})(fs__$1))
};
var G__8539 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8545__i = 0, G__8545__a = new Array(arguments.length -  3);
while (G__8545__i < G__8545__a.length) {G__8545__a[G__8545__i] = arguments[G__8545__i + 3]; ++G__8545__i;}
  fs = new cljs.core.IndexedSeq(G__8545__a,0);
} 
return G__8539__delegate.call(this,f1,f2,f3,fs);};
G__8539.cljs$lang$maxFixedArity = 3;
G__8539.cljs$lang$applyTo = (function (arglist__8546){
var f1 = cljs.core.first(arglist__8546);
arglist__8546 = cljs.core.next(arglist__8546);
var f2 = cljs.core.first(arglist__8546);
arglist__8546 = cljs.core.next(arglist__8546);
var f3 = cljs.core.first(arglist__8546);
var fs = cljs.core.rest(arglist__8546);
return G__8539__delegate(f1,f2,f3,fs);
});
G__8539.cljs$core$IFn$_invoke$arity$variadic = G__8539__delegate;
return G__8539;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__8547 = null;
if (arguments.length > 3) {
var G__8548__i = 0, G__8548__a = new Array(arguments.length -  3);
while (G__8548__i < G__8548__a.length) {G__8548__a[G__8548__i] = arguments[G__8548__i + 3]; ++G__8548__i;}
G__8547 = new cljs.core.IndexedSeq(G__8548__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__8633 = null;
var G__8633__0 = (function (){
var G__8591 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8591) : f.call(null,G__8591));
});
var G__8633__1 = (function (x){
var G__8592 = arg1;
var G__8593 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8592,G__8593) : f.call(null,G__8592,G__8593));
});
var G__8633__2 = (function (x,y){
var G__8594 = arg1;
var G__8595 = x;
var G__8596 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8594,G__8595,G__8596) : f.call(null,G__8594,G__8595,G__8596));
});
var G__8633__3 = (function (x,y,z){
var G__8597 = arg1;
var G__8598 = x;
var G__8599 = y;
var G__8600 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8597,G__8598,G__8599,G__8600) : f.call(null,G__8597,G__8598,G__8599,G__8600));
});
var G__8633__4 = (function() { 
var G__8634__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8634 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8635__i = 0, G__8635__a = new Array(arguments.length -  3);
while (G__8635__i < G__8635__a.length) {G__8635__a[G__8635__i] = arguments[G__8635__i + 3]; ++G__8635__i;}
  args = new cljs.core.IndexedSeq(G__8635__a,0);
} 
return G__8634__delegate.call(this,x,y,z,args);};
G__8634.cljs$lang$maxFixedArity = 3;
G__8634.cljs$lang$applyTo = (function (arglist__8636){
var x = cljs.core.first(arglist__8636);
arglist__8636 = cljs.core.next(arglist__8636);
var y = cljs.core.first(arglist__8636);
arglist__8636 = cljs.core.next(arglist__8636);
var z = cljs.core.first(arglist__8636);
var args = cljs.core.rest(arglist__8636);
return G__8634__delegate(x,y,z,args);
});
G__8634.cljs$core$IFn$_invoke$arity$variadic = G__8634__delegate;
return G__8634;
})()
;
G__8633 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8633__0.call(this);
case 1:
return G__8633__1.call(this,x);
case 2:
return G__8633__2.call(this,x,y);
case 3:
return G__8633__3.call(this,x,y,z);
default:
var G__8637 = null;
if (arguments.length > 3) {
var G__8638__i = 0, G__8638__a = new Array(arguments.length -  3);
while (G__8638__i < G__8638__a.length) {G__8638__a[G__8638__i] = arguments[G__8638__i + 3]; ++G__8638__i;}
G__8637 = new cljs.core.IndexedSeq(G__8638__a,0);
}
return G__8633__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8637);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8633.cljs$lang$maxFixedArity = 3;
G__8633.cljs$lang$applyTo = G__8633__4.cljs$lang$applyTo;
G__8633.cljs$core$IFn$_invoke$arity$0 = G__8633__0;
G__8633.cljs$core$IFn$_invoke$arity$1 = G__8633__1;
G__8633.cljs$core$IFn$_invoke$arity$2 = G__8633__2;
G__8633.cljs$core$IFn$_invoke$arity$3 = G__8633__3;
G__8633.cljs$core$IFn$_invoke$arity$variadic = G__8633__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8633;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8639 = null;
var G__8639__0 = (function (){
var G__8601 = arg1;
var G__8602 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8601,G__8602) : f.call(null,G__8601,G__8602));
});
var G__8639__1 = (function (x){
var G__8603 = arg1;
var G__8604 = arg2;
var G__8605 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8603,G__8604,G__8605) : f.call(null,G__8603,G__8604,G__8605));
});
var G__8639__2 = (function (x,y){
var G__8606 = arg1;
var G__8607 = arg2;
var G__8608 = x;
var G__8609 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8606,G__8607,G__8608,G__8609) : f.call(null,G__8606,G__8607,G__8608,G__8609));
});
var G__8639__3 = (function (x,y,z){
var G__8610 = arg1;
var G__8611 = arg2;
var G__8612 = x;
var G__8613 = y;
var G__8614 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8610,G__8611,G__8612,G__8613,G__8614) : f.call(null,G__8610,G__8611,G__8612,G__8613,G__8614));
});
var G__8639__4 = (function() { 
var G__8640__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8640 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8641__i = 0, G__8641__a = new Array(arguments.length -  3);
while (G__8641__i < G__8641__a.length) {G__8641__a[G__8641__i] = arguments[G__8641__i + 3]; ++G__8641__i;}
  args = new cljs.core.IndexedSeq(G__8641__a,0);
} 
return G__8640__delegate.call(this,x,y,z,args);};
G__8640.cljs$lang$maxFixedArity = 3;
G__8640.cljs$lang$applyTo = (function (arglist__8642){
var x = cljs.core.first(arglist__8642);
arglist__8642 = cljs.core.next(arglist__8642);
var y = cljs.core.first(arglist__8642);
arglist__8642 = cljs.core.next(arglist__8642);
var z = cljs.core.first(arglist__8642);
var args = cljs.core.rest(arglist__8642);
return G__8640__delegate(x,y,z,args);
});
G__8640.cljs$core$IFn$_invoke$arity$variadic = G__8640__delegate;
return G__8640;
})()
;
G__8639 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8639__0.call(this);
case 1:
return G__8639__1.call(this,x);
case 2:
return G__8639__2.call(this,x,y);
case 3:
return G__8639__3.call(this,x,y,z);
default:
var G__8643 = null;
if (arguments.length > 3) {
var G__8644__i = 0, G__8644__a = new Array(arguments.length -  3);
while (G__8644__i < G__8644__a.length) {G__8644__a[G__8644__i] = arguments[G__8644__i + 3]; ++G__8644__i;}
G__8643 = new cljs.core.IndexedSeq(G__8644__a,0);
}
return G__8639__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8639.cljs$lang$maxFixedArity = 3;
G__8639.cljs$lang$applyTo = G__8639__4.cljs$lang$applyTo;
G__8639.cljs$core$IFn$_invoke$arity$0 = G__8639__0;
G__8639.cljs$core$IFn$_invoke$arity$1 = G__8639__1;
G__8639.cljs$core$IFn$_invoke$arity$2 = G__8639__2;
G__8639.cljs$core$IFn$_invoke$arity$3 = G__8639__3;
G__8639.cljs$core$IFn$_invoke$arity$variadic = G__8639__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8639;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8645 = null;
var G__8645__0 = (function (){
var G__8615 = arg1;
var G__8616 = arg2;
var G__8617 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8615,G__8616,G__8617) : f.call(null,G__8615,G__8616,G__8617));
});
var G__8645__1 = (function (x){
var G__8618 = arg1;
var G__8619 = arg2;
var G__8620 = arg3;
var G__8621 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8618,G__8619,G__8620,G__8621) : f.call(null,G__8618,G__8619,G__8620,G__8621));
});
var G__8645__2 = (function (x,y){
var G__8622 = arg1;
var G__8623 = arg2;
var G__8624 = arg3;
var G__8625 = x;
var G__8626 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8622,G__8623,G__8624,G__8625,G__8626) : f.call(null,G__8622,G__8623,G__8624,G__8625,G__8626));
});
var G__8645__3 = (function (x,y,z){
var G__8627 = arg1;
var G__8628 = arg2;
var G__8629 = arg3;
var G__8630 = x;
var G__8631 = y;
var G__8632 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8627,G__8628,G__8629,G__8630,G__8631,G__8632) : f.call(null,G__8627,G__8628,G__8629,G__8630,G__8631,G__8632));
});
var G__8645__4 = (function() { 
var G__8646__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8646 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8647__i = 0, G__8647__a = new Array(arguments.length -  3);
while (G__8647__i < G__8647__a.length) {G__8647__a[G__8647__i] = arguments[G__8647__i + 3]; ++G__8647__i;}
  args = new cljs.core.IndexedSeq(G__8647__a,0);
} 
return G__8646__delegate.call(this,x,y,z,args);};
G__8646.cljs$lang$maxFixedArity = 3;
G__8646.cljs$lang$applyTo = (function (arglist__8648){
var x = cljs.core.first(arglist__8648);
arglist__8648 = cljs.core.next(arglist__8648);
var y = cljs.core.first(arglist__8648);
arglist__8648 = cljs.core.next(arglist__8648);
var z = cljs.core.first(arglist__8648);
var args = cljs.core.rest(arglist__8648);
return G__8646__delegate(x,y,z,args);
});
G__8646.cljs$core$IFn$_invoke$arity$variadic = G__8646__delegate;
return G__8646;
})()
;
G__8645 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8645__0.call(this);
case 1:
return G__8645__1.call(this,x);
case 2:
return G__8645__2.call(this,x,y);
case 3:
return G__8645__3.call(this,x,y,z);
default:
var G__8649 = null;
if (arguments.length > 3) {
var G__8650__i = 0, G__8650__a = new Array(arguments.length -  3);
while (G__8650__i < G__8650__a.length) {G__8650__a[G__8650__i] = arguments[G__8650__i + 3]; ++G__8650__i;}
G__8649 = new cljs.core.IndexedSeq(G__8650__a,0);
}
return G__8645__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8645.cljs$lang$maxFixedArity = 3;
G__8645.cljs$lang$applyTo = G__8645__4.cljs$lang$applyTo;
G__8645.cljs$core$IFn$_invoke$arity$0 = G__8645__0;
G__8645.cljs$core$IFn$_invoke$arity$1 = G__8645__1;
G__8645.cljs$core$IFn$_invoke$arity$2 = G__8645__2;
G__8645.cljs$core$IFn$_invoke$arity$3 = G__8645__3;
G__8645.cljs$core$IFn$_invoke$arity$variadic = G__8645__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8645;
})()
});
var partial__5 = (function() { 
var G__8651__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8652__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8652 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8653__i = 0, G__8653__a = new Array(arguments.length -  0);
while (G__8653__i < G__8653__a.length) {G__8653__a[G__8653__i] = arguments[G__8653__i + 0]; ++G__8653__i;}
  args = new cljs.core.IndexedSeq(G__8653__a,0);
} 
return G__8652__delegate.call(this,args);};
G__8652.cljs$lang$maxFixedArity = 0;
G__8652.cljs$lang$applyTo = (function (arglist__8654){
var args = cljs.core.seq(arglist__8654);
return G__8652__delegate(args);
});
G__8652.cljs$core$IFn$_invoke$arity$variadic = G__8652__delegate;
return G__8652;
})()
;
};
var G__8651 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8655__i = 0, G__8655__a = new Array(arguments.length -  4);
while (G__8655__i < G__8655__a.length) {G__8655__a[G__8655__i] = arguments[G__8655__i + 4]; ++G__8655__i;}
  more = new cljs.core.IndexedSeq(G__8655__a,0);
} 
return G__8651__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8651.cljs$lang$maxFixedArity = 4;
G__8651.cljs$lang$applyTo = (function (arglist__8656){
var f = cljs.core.first(arglist__8656);
arglist__8656 = cljs.core.next(arglist__8656);
var arg1 = cljs.core.first(arglist__8656);
arglist__8656 = cljs.core.next(arglist__8656);
var arg2 = cljs.core.first(arglist__8656);
arglist__8656 = cljs.core.next(arglist__8656);
var arg3 = cljs.core.first(arglist__8656);
var more = cljs.core.rest(arglist__8656);
return G__8651__delegate(f,arg1,arg2,arg3,more);
});
G__8651.cljs$core$IFn$_invoke$arity$variadic = G__8651__delegate;
return G__8651;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8657 = null;
if (arguments.length > 4) {
var G__8658__i = 0, G__8658__a = new Array(arguments.length -  4);
while (G__8658__i < G__8658__a.length) {G__8658__a[G__8658__i] = arguments[G__8658__i + 4]; ++G__8658__i;}
G__8657 = new cljs.core.IndexedSeq(G__8658__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__8691 = null;
var G__8691__1 = (function (a){
var G__8675 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8675) : f.call(null,G__8675));
});
var G__8691__2 = (function (a,b){
var G__8676 = (((a == null))?x:a);
var G__8677 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8676,G__8677) : f.call(null,G__8676,G__8677));
});
var G__8691__3 = (function (a,b,c){
var G__8678 = (((a == null))?x:a);
var G__8679 = b;
var G__8680 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8678,G__8679,G__8680) : f.call(null,G__8678,G__8679,G__8680));
});
var G__8691__4 = (function() { 
var G__8692__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8692 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8693__i = 0, G__8693__a = new Array(arguments.length -  3);
while (G__8693__i < G__8693__a.length) {G__8693__a[G__8693__i] = arguments[G__8693__i + 3]; ++G__8693__i;}
  ds = new cljs.core.IndexedSeq(G__8693__a,0);
} 
return G__8692__delegate.call(this,a,b,c,ds);};
G__8692.cljs$lang$maxFixedArity = 3;
G__8692.cljs$lang$applyTo = (function (arglist__8694){
var a = cljs.core.first(arglist__8694);
arglist__8694 = cljs.core.next(arglist__8694);
var b = cljs.core.first(arglist__8694);
arglist__8694 = cljs.core.next(arglist__8694);
var c = cljs.core.first(arglist__8694);
var ds = cljs.core.rest(arglist__8694);
return G__8692__delegate(a,b,c,ds);
});
G__8692.cljs$core$IFn$_invoke$arity$variadic = G__8692__delegate;
return G__8692;
})()
;
G__8691 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8691__1.call(this,a);
case 2:
return G__8691__2.call(this,a,b);
case 3:
return G__8691__3.call(this,a,b,c);
default:
var G__8695 = null;
if (arguments.length > 3) {
var G__8696__i = 0, G__8696__a = new Array(arguments.length -  3);
while (G__8696__i < G__8696__a.length) {G__8696__a[G__8696__i] = arguments[G__8696__i + 3]; ++G__8696__i;}
G__8695 = new cljs.core.IndexedSeq(G__8696__a,0);
}
return G__8691__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8691.cljs$lang$maxFixedArity = 3;
G__8691.cljs$lang$applyTo = G__8691__4.cljs$lang$applyTo;
G__8691.cljs$core$IFn$_invoke$arity$1 = G__8691__1;
G__8691.cljs$core$IFn$_invoke$arity$2 = G__8691__2;
G__8691.cljs$core$IFn$_invoke$arity$3 = G__8691__3;
G__8691.cljs$core$IFn$_invoke$arity$variadic = G__8691__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8691;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__8697 = null;
var G__8697__2 = (function (a,b){
var G__8681 = (((a == null))?x:a);
var G__8682 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8681,G__8682) : f.call(null,G__8681,G__8682));
});
var G__8697__3 = (function (a,b,c){
var G__8683 = (((a == null))?x:a);
var G__8684 = (((b == null))?y:b);
var G__8685 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8683,G__8684,G__8685) : f.call(null,G__8683,G__8684,G__8685));
});
var G__8697__4 = (function() { 
var G__8698__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8698 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8699__i = 0, G__8699__a = new Array(arguments.length -  3);
while (G__8699__i < G__8699__a.length) {G__8699__a[G__8699__i] = arguments[G__8699__i + 3]; ++G__8699__i;}
  ds = new cljs.core.IndexedSeq(G__8699__a,0);
} 
return G__8698__delegate.call(this,a,b,c,ds);};
G__8698.cljs$lang$maxFixedArity = 3;
G__8698.cljs$lang$applyTo = (function (arglist__8700){
var a = cljs.core.first(arglist__8700);
arglist__8700 = cljs.core.next(arglist__8700);
var b = cljs.core.first(arglist__8700);
arglist__8700 = cljs.core.next(arglist__8700);
var c = cljs.core.first(arglist__8700);
var ds = cljs.core.rest(arglist__8700);
return G__8698__delegate(a,b,c,ds);
});
G__8698.cljs$core$IFn$_invoke$arity$variadic = G__8698__delegate;
return G__8698;
})()
;
G__8697 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8697__2.call(this,a,b);
case 3:
return G__8697__3.call(this,a,b,c);
default:
var G__8701 = null;
if (arguments.length > 3) {
var G__8702__i = 0, G__8702__a = new Array(arguments.length -  3);
while (G__8702__i < G__8702__a.length) {G__8702__a[G__8702__i] = arguments[G__8702__i + 3]; ++G__8702__i;}
G__8701 = new cljs.core.IndexedSeq(G__8702__a,0);
}
return G__8697__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8697.cljs$lang$maxFixedArity = 3;
G__8697.cljs$lang$applyTo = G__8697__4.cljs$lang$applyTo;
G__8697.cljs$core$IFn$_invoke$arity$2 = G__8697__2;
G__8697.cljs$core$IFn$_invoke$arity$3 = G__8697__3;
G__8697.cljs$core$IFn$_invoke$arity$variadic = G__8697__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8697;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__8703 = null;
var G__8703__2 = (function (a,b){
var G__8686 = (((a == null))?x:a);
var G__8687 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8686,G__8687) : f.call(null,G__8686,G__8687));
});
var G__8703__3 = (function (a,b,c){
var G__8688 = (((a == null))?x:a);
var G__8689 = (((b == null))?y:b);
var G__8690 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8688,G__8689,G__8690) : f.call(null,G__8688,G__8689,G__8690));
});
var G__8703__4 = (function() { 
var G__8704__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8704 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8705__i = 0, G__8705__a = new Array(arguments.length -  3);
while (G__8705__i < G__8705__a.length) {G__8705__a[G__8705__i] = arguments[G__8705__i + 3]; ++G__8705__i;}
  ds = new cljs.core.IndexedSeq(G__8705__a,0);
} 
return G__8704__delegate.call(this,a,b,c,ds);};
G__8704.cljs$lang$maxFixedArity = 3;
G__8704.cljs$lang$applyTo = (function (arglist__8706){
var a = cljs.core.first(arglist__8706);
arglist__8706 = cljs.core.next(arglist__8706);
var b = cljs.core.first(arglist__8706);
arglist__8706 = cljs.core.next(arglist__8706);
var c = cljs.core.first(arglist__8706);
var ds = cljs.core.rest(arglist__8706);
return G__8704__delegate(a,b,c,ds);
});
G__8704.cljs$core$IFn$_invoke$arity$variadic = G__8704__delegate;
return G__8704;
})()
;
G__8703 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8703__2.call(this,a,b);
case 3:
return G__8703__3.call(this,a,b,c);
default:
var G__8707 = null;
if (arguments.length > 3) {
var G__8708__i = 0, G__8708__a = new Array(arguments.length -  3);
while (G__8708__i < G__8708__a.length) {G__8708__a[G__8708__i] = arguments[G__8708__i + 3]; ++G__8708__i;}
G__8707 = new cljs.core.IndexedSeq(G__8708__a,0);
}
return G__8703__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8703.cljs$lang$maxFixedArity = 3;
G__8703.cljs$lang$applyTo = G__8703__4.cljs$lang$applyTo;
G__8703.cljs$core$IFn$_invoke$arity$2 = G__8703__2;
G__8703.cljs$core$IFn$_invoke$arity$3 = G__8703__3;
G__8703.cljs$core$IFn$_invoke$arity$variadic = G__8703__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8703;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8739 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8739) : cljs.core.volatile_BANG_.call(null,G__8739));
})();
return ((function (i){
return (function() {
var G__8769 = null;
var G__8769__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8769__1 = (function (result){
var G__8740 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8740) : rf.call(null,G__8740));
});
var G__8769__2 = (function (result,input){
var G__8741 = result;
var G__8742 = (function (){var G__8743 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8744 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8743,G__8744) : f.call(null,G__8743,G__8744));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8741,G__8742) : rf.call(null,G__8741,G__8742));
});
G__8769 = function(result,input){
switch(arguments.length){
case 0:
return G__8769__0.call(this);
case 1:
return G__8769__1.call(this,result);
case 2:
return G__8769__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8769.cljs$core$IFn$_invoke$arity$0 = G__8769__0;
G__8769.cljs$core$IFn$_invoke$arity$1 = G__8769__1;
G__8769.cljs$core$IFn$_invoke$arity$2 = G__8769__2;
return G__8769;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4642__auto___8770 = size;
var i_8771 = (0);
while(true){
if((i_8771 < n__4642__auto___8770)){
cljs.core.chunk_append(b,(function (){var G__8765 = (idx + i_8771);
var G__8766 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8771);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8765,G__8766) : f.call(null,G__8765,G__8766));
})());

var G__8772 = (i_8771 + (1));
i_8771 = G__8772;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8767 = idx;
var G__8768 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8767,G__8768) : f.call(null,G__8767,G__8768));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8791 = null;
var G__8791__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8791__1 = (function (result){
var G__8785 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8785) : rf.call(null,G__8785));
});
var G__8791__2 = (function (result,input){
var v = (function (){var G__8786 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8786) : f.call(null,G__8786));
})();
if((v == null)){
return result;
} else {
var G__8787 = result;
var G__8788 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8787,G__8788) : rf.call(null,G__8787,G__8788));
}
});
G__8791 = function(result,input){
switch(arguments.length){
case 0:
return G__8791__0.call(this);
case 1:
return G__8791__1.call(this,result);
case 2:
return G__8791__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8791.cljs$core$IFn$_invoke$arity$0 = G__8791__0;
G__8791.cljs$core$IFn$_invoke$arity$1 = G__8791__1;
G__8791.cljs$core$IFn$_invoke$arity$2 = G__8791__2;
return G__8791;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4642__auto___8792 = size;
var i_8793 = (0);
while(true){
if((i_8793 < n__4642__auto___8792)){
var x_8794 = (function (){var G__8789 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8793);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8789) : f.call(null,G__8789));
})();
if((x_8794 == null)){
} else {
cljs.core.chunk_append(b,x_8794);
}

var G__8795 = (i_8793 + (1));
i_8793 = G__8795;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8790 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8790) : f.call(null,G__8790));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8796 = this$__$1;
return goog.getUid(G__8796);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8797 = cljs.core.seq(self__.watches);
var chunk__8798 = null;
var count__8799 = (0);
var i__8800 = (0);
while(true){
if((i__8800 < count__8799)){
var vec__8801 = chunk__8798.cljs$core$IIndexed$_nth$arity$2(null,i__8800);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8801,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8801,(1),null);
var G__8802_8811 = key;
var G__8803_8812 = this$__$1;
var G__8804_8813 = oldval;
var G__8805_8814 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8802_8811,G__8803_8812,G__8804_8813,G__8805_8814) : f.call(null,G__8802_8811,G__8803_8812,G__8804_8813,G__8805_8814));

var G__8815 = seq__8797;
var G__8816 = chunk__8798;
var G__8817 = count__8799;
var G__8818 = (i__8800 + (1));
seq__8797 = G__8815;
chunk__8798 = G__8816;
count__8799 = G__8817;
i__8800 = G__8818;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8797);
if(temp__4126__auto__){
var seq__8797__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8797__$1)){
var c__4542__auto__ = cljs.core.chunk_first(seq__8797__$1);
var G__8819 = cljs.core.chunk_rest(seq__8797__$1);
var G__8820 = c__4542__auto__;
var G__8821 = cljs.core.count(c__4542__auto__);
var G__8822 = (0);
seq__8797 = G__8819;
chunk__8798 = G__8820;
count__8799 = G__8821;
i__8800 = G__8822;
continue;
} else {
var vec__8806 = cljs.core.first(seq__8797__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8806,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8806,(1),null);
var G__8807_8823 = key;
var G__8808_8824 = this$__$1;
var G__8809_8825 = oldval;
var G__8810_8826 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8807_8823,G__8808_8824,G__8809_8825,G__8810_8826) : f.call(null,G__8807_8823,G__8808_8824,G__8809_8825,G__8810_8826));

var G__8827 = cljs.core.next(seq__8797__$1);
var G__8828 = null;
var G__8829 = (0);
var G__8830 = (0);
seq__8797 = G__8827;
chunk__8798 = G__8828;
count__8799 = G__8829;
i__8800 = G__8830;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__8834__delegate = function (x,p__8831){
var map__8833 = p__8831;
var map__8833__$1 = ((cljs.core.seq_QMARK_(map__8833))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8833):map__8833);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8833__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8833__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8834 = function (x,var_args){
var p__8831 = null;
if (arguments.length > 1) {
var G__8835__i = 0, G__8835__a = new Array(arguments.length -  1);
while (G__8835__i < G__8835__a.length) {G__8835__a[G__8835__i] = arguments[G__8835__i + 1]; ++G__8835__i;}
  p__8831 = new cljs.core.IndexedSeq(G__8835__a,0);
} 
return G__8834__delegate.call(this,x,p__8831);};
G__8834.cljs$lang$maxFixedArity = 1;
G__8834.cljs$lang$applyTo = (function (arglist__8836){
var x = cljs.core.first(arglist__8836);
var p__8831 = cljs.core.rest(arglist__8836);
return G__8834__delegate(x,p__8831);
});
G__8834.cljs$core$IFn$_invoke$arity$variadic = G__8834__delegate;
return G__8834;
})()
;
atom = function(x,var_args){
var p__8831 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__8837 = null;
if (arguments.length > 1) {
var G__8838__i = 0, G__8838__a = new Array(arguments.length -  1);
while (G__8838__i < G__8838__a.length) {G__8838__a[G__8838__i] = arguments[G__8838__i + 1]; ++G__8838__i;}
G__8837 = new cljs.core.IndexedSeq(G__8838__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8841 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8841) : validate.call(null,G__8841));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8842 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8842) : cljs.core.pr_str.call(null,G__8842));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8849 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8849) : f.call(null,G__8849));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8850 = a.state;
var G__8851 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8850,G__8851) : f.call(null,G__8850,G__8851));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8852 = a.state;
var G__8853 = x;
var G__8854 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8852,G__8853,G__8854) : f.call(null,G__8852,G__8853,G__8854));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__8855__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8855 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8856__i = 0, G__8856__a = new Array(arguments.length -  4);
while (G__8856__i < G__8856__a.length) {G__8856__a[G__8856__i] = arguments[G__8856__i + 4]; ++G__8856__i;}
  more = new cljs.core.IndexedSeq(G__8856__a,0);
} 
return G__8855__delegate.call(this,a,f,x,y,more);};
G__8855.cljs$lang$maxFixedArity = 4;
G__8855.cljs$lang$applyTo = (function (arglist__8857){
var a = cljs.core.first(arglist__8857);
arglist__8857 = cljs.core.next(arglist__8857);
var f = cljs.core.first(arglist__8857);
arglist__8857 = cljs.core.next(arglist__8857);
var x = cljs.core.first(arglist__8857);
arglist__8857 = cljs.core.next(arglist__8857);
var y = cljs.core.first(arglist__8857);
var more = cljs.core.rest(arglist__8857);
return G__8855__delegate(a,f,x,y,more);
});
G__8855.cljs$core$IFn$_invoke$arity$variadic = G__8855__delegate;
return G__8855;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__8858 = null;
if (arguments.length > 4) {
var G__8859__i = 0, G__8859__a = new Array(arguments.length -  4);
while (G__8859__i < G__8859__a.length) {G__8859__a[G__8859__i] = arguments[G__8859__i + 4]; ++G__8859__i;}
G__8858 = new cljs.core.IndexedSeq(G__8859__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8858);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8926 = null;
var G__8926__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8926__1 = (function (result){
var G__8893 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8893) : rf.call(null,G__8893));
});
var G__8926__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8894 = i;
var G__8895 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8894,G__8895) : f.call(null,G__8894,G__8895));
})();
if((v == null)){
return result;
} else {
var G__8896 = result;
var G__8897 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8896,G__8897) : rf.call(null,G__8896,G__8897));
}
});
G__8926 = function(result,input){
switch(arguments.length){
case 0:
return G__8926__0.call(this);
case 1:
return G__8926__1.call(this,result);
case 2:
return G__8926__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8926.cljs$core$IFn$_invoke$arity$0 = G__8926__0;
G__8926.cljs$core$IFn$_invoke$arity$1 = G__8926__1;
G__8926.cljs$core$IFn$_invoke$arity$2 = G__8926__2;
return G__8926;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4642__auto___8927 = size;
var i_8928 = (0);
while(true){
if((i_8928 < n__4642__auto___8927)){
var x_8929 = (function (){var G__8922 = (idx + i_8928);
var G__8923 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8928);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8922,G__8923) : f.call(null,G__8922,G__8923));
})();
if((x_8929 == null)){
} else {
cljs.core.chunk_append(b,x_8929);
}

var G__8930 = (i_8928 + (1));
i_8928 = G__8930;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8924 = idx;
var G__8925 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8924,G__8925) : f.call(null,G__8924,G__8925));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9144 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9144) : p.call(null,G__9144));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3743__auto__ = (function (){var G__9146 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9146) : p.call(null,G__9146));
})();
if(cljs.core.truth_(and__3743__auto__)){
var G__9147 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9147) : p.call(null,G__9147));
} else {
return and__3743__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3743__auto__ = (function (){var G__9149 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9149) : p.call(null,G__9149));
})();
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__9151 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9151) : p.call(null,G__9151));
})();
if(cljs.core.truth_(and__3743__auto____$1)){
var G__9152 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9152) : p.call(null,G__9152));
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__9321__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9321 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9322__i = 0, G__9322__a = new Array(arguments.length -  3);
while (G__9322__i < G__9322__a.length) {G__9322__a[G__9322__i] = arguments[G__9322__i + 3]; ++G__9322__i;}
  args = new cljs.core.IndexedSeq(G__9322__a,0);
} 
return G__9321__delegate.call(this,x,y,z,args);};
G__9321.cljs$lang$maxFixedArity = 3;
G__9321.cljs$lang$applyTo = (function (arglist__9323){
var x = cljs.core.first(arglist__9323);
arglist__9323 = cljs.core.next(arglist__9323);
var y = cljs.core.first(arglist__9323);
arglist__9323 = cljs.core.next(arglist__9323);
var z = cljs.core.first(arglist__9323);
var args = cljs.core.rest(arglist__9323);
return G__9321__delegate(x,y,z,args);
});
G__9321.cljs$core$IFn$_invoke$arity$variadic = G__9321__delegate;
return G__9321;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__9324 = null;
if (arguments.length > 3) {
var G__9325__i = 0, G__9325__a = new Array(arguments.length -  3);
while (G__9325__i < G__9325__a.length) {G__9325__a[G__9325__i] = arguments[G__9325__i + 3]; ++G__9325__i;}
G__9324 = new cljs.core.IndexedSeq(G__9325__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3743__auto__ = (function (){var G__9184 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9184) : p1.call(null,G__9184));
})();
if(cljs.core.truth_(and__3743__auto__)){
var G__9185 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9185) : p2.call(null,G__9185));
} else {
return and__3743__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3743__auto__ = (function (){var G__9187 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9187) : p1.call(null,G__9187));
})();
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__9189 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9189) : p1.call(null,G__9189));
})();
if(cljs.core.truth_(and__3743__auto____$1)){
var and__3743__auto____$2 = (function (){var G__9191 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9191) : p2.call(null,G__9191));
})();
if(cljs.core.truth_(and__3743__auto____$2)){
var G__9192 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9192) : p2.call(null,G__9192));
} else {
return and__3743__auto____$2;
}
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3743__auto__ = (function (){var G__9194 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9194) : p1.call(null,G__9194));
})();
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__9196 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9196) : p1.call(null,G__9196));
})();
if(cljs.core.truth_(and__3743__auto____$1)){
var and__3743__auto____$2 = (function (){var G__9198 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9198) : p1.call(null,G__9198));
})();
if(cljs.core.truth_(and__3743__auto____$2)){
var and__3743__auto____$3 = (function (){var G__9200 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9200) : p2.call(null,G__9200));
})();
if(cljs.core.truth_(and__3743__auto____$3)){
var and__3743__auto____$4 = (function (){var G__9202 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9202) : p2.call(null,G__9202));
})();
if(cljs.core.truth_(and__3743__auto____$4)){
var G__9203 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9203) : p2.call(null,G__9203));
} else {
return and__3743__auto____$4;
}
} else {
return and__3743__auto____$3;
}
} else {
return and__3743__auto____$2;
}
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__9326__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8931_SHARP_){
var and__3743__auto__ = (function (){var G__9208 = p1__8931_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9208) : p1.call(null,G__9208));
})();
if(cljs.core.truth_(and__3743__auto__)){
var G__9209 = p1__8931_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9209) : p2.call(null,G__9209));
} else {
return and__3743__auto__;
}
}),args)));
};
var G__9326 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9327__i = 0, G__9327__a = new Array(arguments.length -  3);
while (G__9327__i < G__9327__a.length) {G__9327__a[G__9327__i] = arguments[G__9327__i + 3]; ++G__9327__i;}
  args = new cljs.core.IndexedSeq(G__9327__a,0);
} 
return G__9326__delegate.call(this,x,y,z,args);};
G__9326.cljs$lang$maxFixedArity = 3;
G__9326.cljs$lang$applyTo = (function (arglist__9328){
var x = cljs.core.first(arglist__9328);
arglist__9328 = cljs.core.next(arglist__9328);
var y = cljs.core.first(arglist__9328);
arglist__9328 = cljs.core.next(arglist__9328);
var z = cljs.core.first(arglist__9328);
var args = cljs.core.rest(arglist__9328);
return G__9326__delegate(x,y,z,args);
});
G__9326.cljs$core$IFn$_invoke$arity$variadic = G__9326__delegate;
return G__9326;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__9329 = null;
if (arguments.length > 3) {
var G__9330__i = 0, G__9330__a = new Array(arguments.length -  3);
while (G__9330__i < G__9330__a.length) {G__9330__a[G__9330__i] = arguments[G__9330__i + 3]; ++G__9330__i;}
G__9329 = new cljs.core.IndexedSeq(G__9330__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3743__auto__ = (function (){var G__9255 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9255) : p1.call(null,G__9255));
})();
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__9257 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9257) : p2.call(null,G__9257));
})();
if(cljs.core.truth_(and__3743__auto____$1)){
var G__9258 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9258) : p3.call(null,G__9258));
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3743__auto__ = (function (){var G__9260 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9260) : p1.call(null,G__9260));
})();
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__9262 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9262) : p2.call(null,G__9262));
})();
if(cljs.core.truth_(and__3743__auto____$1)){
var and__3743__auto____$2 = (function (){var G__9264 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9264) : p3.call(null,G__9264));
})();
if(cljs.core.truth_(and__3743__auto____$2)){
var and__3743__auto____$3 = (function (){var G__9266 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9266) : p1.call(null,G__9266));
})();
if(cljs.core.truth_(and__3743__auto____$3)){
var and__3743__auto____$4 = (function (){var G__9268 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9268) : p2.call(null,G__9268));
})();
if(cljs.core.truth_(and__3743__auto____$4)){
var G__9269 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9269) : p3.call(null,G__9269));
} else {
return and__3743__auto____$4;
}
} else {
return and__3743__auto____$3;
}
} else {
return and__3743__auto____$2;
}
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3743__auto__ = (function (){var G__9271 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9271) : p1.call(null,G__9271));
})();
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__9273 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9273) : p2.call(null,G__9273));
})();
if(cljs.core.truth_(and__3743__auto____$1)){
var and__3743__auto____$2 = (function (){var G__9275 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9275) : p3.call(null,G__9275));
})();
if(cljs.core.truth_(and__3743__auto____$2)){
var and__3743__auto____$3 = (function (){var G__9277 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9277) : p1.call(null,G__9277));
})();
if(cljs.core.truth_(and__3743__auto____$3)){
var and__3743__auto____$4 = (function (){var G__9279 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9279) : p2.call(null,G__9279));
})();
if(cljs.core.truth_(and__3743__auto____$4)){
var and__3743__auto____$5 = (function (){var G__9281 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9281) : p3.call(null,G__9281));
})();
if(cljs.core.truth_(and__3743__auto____$5)){
var and__3743__auto____$6 = (function (){var G__9283 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9283) : p1.call(null,G__9283));
})();
if(cljs.core.truth_(and__3743__auto____$6)){
var and__3743__auto____$7 = (function (){var G__9285 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9285) : p2.call(null,G__9285));
})();
if(cljs.core.truth_(and__3743__auto____$7)){
var G__9286 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9286) : p3.call(null,G__9286));
} else {
return and__3743__auto____$7;
}
} else {
return and__3743__auto____$6;
}
} else {
return and__3743__auto____$5;
}
} else {
return and__3743__auto____$4;
}
} else {
return and__3743__auto____$3;
}
} else {
return and__3743__auto____$2;
}
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__9331__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8932_SHARP_){
var and__3743__auto__ = (function (){var G__9293 = p1__8932_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9293) : p1.call(null,G__9293));
})();
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__9295 = p1__8932_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9295) : p2.call(null,G__9295));
})();
if(cljs.core.truth_(and__3743__auto____$1)){
var G__9296 = p1__8932_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9296) : p3.call(null,G__9296));
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
}),args)));
};
var G__9331 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9332__i = 0, G__9332__a = new Array(arguments.length -  3);
while (G__9332__i < G__9332__a.length) {G__9332__a[G__9332__i] = arguments[G__9332__i + 3]; ++G__9332__i;}
  args = new cljs.core.IndexedSeq(G__9332__a,0);
} 
return G__9331__delegate.call(this,x,y,z,args);};
G__9331.cljs$lang$maxFixedArity = 3;
G__9331.cljs$lang$applyTo = (function (arglist__9333){
var x = cljs.core.first(arglist__9333);
arglist__9333 = cljs.core.next(arglist__9333);
var y = cljs.core.first(arglist__9333);
arglist__9333 = cljs.core.next(arglist__9333);
var z = cljs.core.first(arglist__9333);
var args = cljs.core.rest(arglist__9333);
return G__9331__delegate(x,y,z,args);
});
G__9331.cljs$core$IFn$_invoke$arity$variadic = G__9331__delegate;
return G__9331;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__9334 = null;
if (arguments.length > 3) {
var G__9335__i = 0, G__9335__a = new Array(arguments.length -  3);
while (G__9335__i < G__9335__a.length) {G__9335__a[G__9335__i] = arguments[G__9335__i + 3]; ++G__9335__i;}
G__9334 = new cljs.core.IndexedSeq(G__9335__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__9336__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8933_SHARP_){
var G__9312 = x;
return (p1__8933_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8933_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9312) : p1__8933_SHARP_.call(null,G__9312));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8934_SHARP_){
var and__3743__auto__ = (function (){var G__9314 = x;
return (p1__8934_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8934_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9314) : p1__8934_SHARP_.call(null,G__9314));
})();
if(cljs.core.truth_(and__3743__auto__)){
var G__9315 = y;
return (p1__8934_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8934_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9315) : p1__8934_SHARP_.call(null,G__9315));
} else {
return and__3743__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8935_SHARP_){
var and__3743__auto__ = (function (){var G__9317 = x;
return (p1__8935_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8935_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9317) : p1__8935_SHARP_.call(null,G__9317));
})();
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__9319 = y;
return (p1__8935_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8935_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9319) : p1__8935_SHARP_.call(null,G__9319));
})();
if(cljs.core.truth_(and__3743__auto____$1)){
var G__9320 = z;
return (p1__8935_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8935_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9320) : p1__8935_SHARP_.call(null,G__9320));
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__9337__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8936_SHARP_){
return cljs.core.every_QMARK_(p1__8936_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__9337 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9338__i = 0, G__9338__a = new Array(arguments.length -  3);
while (G__9338__i < G__9338__a.length) {G__9338__a[G__9338__i] = arguments[G__9338__i + 3]; ++G__9338__i;}
  args = new cljs.core.IndexedSeq(G__9338__a,0);
} 
return G__9337__delegate.call(this,x,y,z,args);};
G__9337.cljs$lang$maxFixedArity = 3;
G__9337.cljs$lang$applyTo = (function (arglist__9339){
var x = cljs.core.first(arglist__9339);
arglist__9339 = cljs.core.next(arglist__9339);
var y = cljs.core.first(arglist__9339);
arglist__9339 = cljs.core.next(arglist__9339);
var z = cljs.core.first(arglist__9339);
var args = cljs.core.rest(arglist__9339);
return G__9337__delegate(x,y,z,args);
});
G__9337.cljs$core$IFn$_invoke$arity$variadic = G__9337__delegate;
return G__9337;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__9340 = null;
if (arguments.length > 3) {
var G__9341__i = 0, G__9341__a = new Array(arguments.length -  3);
while (G__9341__i < G__9341__a.length) {G__9341__a[G__9341__i] = arguments[G__9341__i + 3]; ++G__9341__i;}
G__9340 = new cljs.core.IndexedSeq(G__9341__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__9336 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9342__i = 0, G__9342__a = new Array(arguments.length -  3);
while (G__9342__i < G__9342__a.length) {G__9342__a[G__9342__i] = arguments[G__9342__i + 3]; ++G__9342__i;}
  ps = new cljs.core.IndexedSeq(G__9342__a,0);
} 
return G__9336__delegate.call(this,p1,p2,p3,ps);};
G__9336.cljs$lang$maxFixedArity = 3;
G__9336.cljs$lang$applyTo = (function (arglist__9343){
var p1 = cljs.core.first(arglist__9343);
arglist__9343 = cljs.core.next(arglist__9343);
var p2 = cljs.core.first(arglist__9343);
arglist__9343 = cljs.core.next(arglist__9343);
var p3 = cljs.core.first(arglist__9343);
var ps = cljs.core.rest(arglist__9343);
return G__9336__delegate(p1,p2,p3,ps);
});
G__9336.cljs$core$IFn$_invoke$arity$variadic = G__9336__delegate;
return G__9336;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__9344 = null;
if (arguments.length > 3) {
var G__9345__i = 0, G__9345__a = new Array(arguments.length -  3);
while (G__9345__i < G__9345__a.length) {G__9345__a[G__9345__i] = arguments[G__9345__i + 3]; ++G__9345__i;}
G__9344 = new cljs.core.IndexedSeq(G__9345__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__9551 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9551) : p.call(null,G__9551));
});
var sp1__2 = (function (x,y){
var or__3755__auto__ = (function (){var G__9553 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9553) : p.call(null,G__9553));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var G__9554 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9554) : p.call(null,G__9554));
}
});
var sp1__3 = (function (x,y,z){
var or__3755__auto__ = (function (){var G__9556 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9556) : p.call(null,G__9556));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (function (){var G__9558 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9558) : p.call(null,G__9558));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var G__9559 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9559) : p.call(null,G__9559));
}
}
});
var sp1__4 = (function() { 
var G__9720__delegate = function (x,y,z,args){
var or__3755__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9720 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9721__i = 0, G__9721__a = new Array(arguments.length -  3);
while (G__9721__i < G__9721__a.length) {G__9721__a[G__9721__i] = arguments[G__9721__i + 3]; ++G__9721__i;}
  args = new cljs.core.IndexedSeq(G__9721__a,0);
} 
return G__9720__delegate.call(this,x,y,z,args);};
G__9720.cljs$lang$maxFixedArity = 3;
G__9720.cljs$lang$applyTo = (function (arglist__9722){
var x = cljs.core.first(arglist__9722);
arglist__9722 = cljs.core.next(arglist__9722);
var y = cljs.core.first(arglist__9722);
arglist__9722 = cljs.core.next(arglist__9722);
var z = cljs.core.first(arglist__9722);
var args = cljs.core.rest(arglist__9722);
return G__9720__delegate(x,y,z,args);
});
G__9720.cljs$core$IFn$_invoke$arity$variadic = G__9720__delegate;
return G__9720;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__9723 = null;
if (arguments.length > 3) {
var G__9724__i = 0, G__9724__a = new Array(arguments.length -  3);
while (G__9724__i < G__9724__a.length) {G__9724__a[G__9724__i] = arguments[G__9724__i + 3]; ++G__9724__i;}
G__9723 = new cljs.core.IndexedSeq(G__9724__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3755__auto__ = (function (){var G__9591 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9591) : p1.call(null,G__9591));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var G__9592 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9592) : p2.call(null,G__9592));
}
});
var sp2__2 = (function (x,y){
var or__3755__auto__ = (function (){var G__9594 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9594) : p1.call(null,G__9594));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (function (){var G__9596 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9596) : p1.call(null,G__9596));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var or__3755__auto____$2 = (function (){var G__9598 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9598) : p2.call(null,G__9598));
})();
if(cljs.core.truth_(or__3755__auto____$2)){
return or__3755__auto____$2;
} else {
var G__9599 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9599) : p2.call(null,G__9599));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3755__auto__ = (function (){var G__9601 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9601) : p1.call(null,G__9601));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (function (){var G__9603 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9603) : p1.call(null,G__9603));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var or__3755__auto____$2 = (function (){var G__9605 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9605) : p1.call(null,G__9605));
})();
if(cljs.core.truth_(or__3755__auto____$2)){
return or__3755__auto____$2;
} else {
var or__3755__auto____$3 = (function (){var G__9607 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9607) : p2.call(null,G__9607));
})();
if(cljs.core.truth_(or__3755__auto____$3)){
return or__3755__auto____$3;
} else {
var or__3755__auto____$4 = (function (){var G__9609 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9609) : p2.call(null,G__9609));
})();
if(cljs.core.truth_(or__3755__auto____$4)){
return or__3755__auto____$4;
} else {
var G__9610 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9610) : p2.call(null,G__9610));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__9725__delegate = function (x,y,z,args){
var or__3755__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return cljs.core.some(((function (or__3755__auto__){
return (function (p1__9346_SHARP_){
var or__3755__auto____$1 = (function (){var G__9612 = p1__9346_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9612) : p1.call(null,G__9612));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var G__9613 = p1__9346_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9613) : p2.call(null,G__9613));
}
});})(or__3755__auto__))
,args);
}
};
var G__9725 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9726__i = 0, G__9726__a = new Array(arguments.length -  3);
while (G__9726__i < G__9726__a.length) {G__9726__a[G__9726__i] = arguments[G__9726__i + 3]; ++G__9726__i;}
  args = new cljs.core.IndexedSeq(G__9726__a,0);
} 
return G__9725__delegate.call(this,x,y,z,args);};
G__9725.cljs$lang$maxFixedArity = 3;
G__9725.cljs$lang$applyTo = (function (arglist__9727){
var x = cljs.core.first(arglist__9727);
arglist__9727 = cljs.core.next(arglist__9727);
var y = cljs.core.first(arglist__9727);
arglist__9727 = cljs.core.next(arglist__9727);
var z = cljs.core.first(arglist__9727);
var args = cljs.core.rest(arglist__9727);
return G__9725__delegate(x,y,z,args);
});
G__9725.cljs$core$IFn$_invoke$arity$variadic = G__9725__delegate;
return G__9725;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__9728 = null;
if (arguments.length > 3) {
var G__9729__i = 0, G__9729__a = new Array(arguments.length -  3);
while (G__9729__i < G__9729__a.length) {G__9729__a[G__9729__i] = arguments[G__9729__i + 3]; ++G__9729__i;}
G__9728 = new cljs.core.IndexedSeq(G__9729__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3755__auto__ = (function (){var G__9659 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9659) : p1.call(null,G__9659));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (function (){var G__9661 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9661) : p2.call(null,G__9661));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var G__9662 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9662) : p3.call(null,G__9662));
}
}
});
var sp3__2 = (function (x,y){
var or__3755__auto__ = (function (){var G__9664 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9664) : p1.call(null,G__9664));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (function (){var G__9666 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9666) : p2.call(null,G__9666));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var or__3755__auto____$2 = (function (){var G__9668 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9668) : p3.call(null,G__9668));
})();
if(cljs.core.truth_(or__3755__auto____$2)){
return or__3755__auto____$2;
} else {
var or__3755__auto____$3 = (function (){var G__9670 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9670) : p1.call(null,G__9670));
})();
if(cljs.core.truth_(or__3755__auto____$3)){
return or__3755__auto____$3;
} else {
var or__3755__auto____$4 = (function (){var G__9672 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9672) : p2.call(null,G__9672));
})();
if(cljs.core.truth_(or__3755__auto____$4)){
return or__3755__auto____$4;
} else {
var G__9673 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9673) : p3.call(null,G__9673));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3755__auto__ = (function (){var G__9675 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9675) : p1.call(null,G__9675));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (function (){var G__9677 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9677) : p2.call(null,G__9677));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var or__3755__auto____$2 = (function (){var G__9679 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9679) : p3.call(null,G__9679));
})();
if(cljs.core.truth_(or__3755__auto____$2)){
return or__3755__auto____$2;
} else {
var or__3755__auto____$3 = (function (){var G__9681 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9681) : p1.call(null,G__9681));
})();
if(cljs.core.truth_(or__3755__auto____$3)){
return or__3755__auto____$3;
} else {
var or__3755__auto____$4 = (function (){var G__9683 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9683) : p2.call(null,G__9683));
})();
if(cljs.core.truth_(or__3755__auto____$4)){
return or__3755__auto____$4;
} else {
var or__3755__auto____$5 = (function (){var G__9685 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9685) : p3.call(null,G__9685));
})();
if(cljs.core.truth_(or__3755__auto____$5)){
return or__3755__auto____$5;
} else {
var or__3755__auto____$6 = (function (){var G__9687 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9687) : p1.call(null,G__9687));
})();
if(cljs.core.truth_(or__3755__auto____$6)){
return or__3755__auto____$6;
} else {
var or__3755__auto____$7 = (function (){var G__9689 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9689) : p2.call(null,G__9689));
})();
if(cljs.core.truth_(or__3755__auto____$7)){
return or__3755__auto____$7;
} else {
var G__9690 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9690) : p3.call(null,G__9690));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__9730__delegate = function (x,y,z,args){
var or__3755__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return cljs.core.some(((function (or__3755__auto__){
return (function (p1__9347_SHARP_){
var or__3755__auto____$1 = (function (){var G__9692 = p1__9347_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9692) : p1.call(null,G__9692));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var or__3755__auto____$2 = (function (){var G__9694 = p1__9347_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9694) : p2.call(null,G__9694));
})();
if(cljs.core.truth_(or__3755__auto____$2)){
return or__3755__auto____$2;
} else {
var G__9695 = p1__9347_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9695) : p3.call(null,G__9695));
}
}
});})(or__3755__auto__))
,args);
}
};
var G__9730 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9731__i = 0, G__9731__a = new Array(arguments.length -  3);
while (G__9731__i < G__9731__a.length) {G__9731__a[G__9731__i] = arguments[G__9731__i + 3]; ++G__9731__i;}
  args = new cljs.core.IndexedSeq(G__9731__a,0);
} 
return G__9730__delegate.call(this,x,y,z,args);};
G__9730.cljs$lang$maxFixedArity = 3;
G__9730.cljs$lang$applyTo = (function (arglist__9732){
var x = cljs.core.first(arglist__9732);
arglist__9732 = cljs.core.next(arglist__9732);
var y = cljs.core.first(arglist__9732);
arglist__9732 = cljs.core.next(arglist__9732);
var z = cljs.core.first(arglist__9732);
var args = cljs.core.rest(arglist__9732);
return G__9730__delegate(x,y,z,args);
});
G__9730.cljs$core$IFn$_invoke$arity$variadic = G__9730__delegate;
return G__9730;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__9733 = null;
if (arguments.length > 3) {
var G__9734__i = 0, G__9734__a = new Array(arguments.length -  3);
while (G__9734__i < G__9734__a.length) {G__9734__a[G__9734__i] = arguments[G__9734__i + 3]; ++G__9734__i;}
G__9733 = new cljs.core.IndexedSeq(G__9734__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__9735__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__9348_SHARP_){
var G__9711 = x;
return (p1__9348_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9348_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9711) : p1__9348_SHARP_.call(null,G__9711));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__9349_SHARP_){
var or__3755__auto__ = (function (){var G__9713 = x;
return (p1__9349_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9349_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9713) : p1__9349_SHARP_.call(null,G__9713));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var G__9714 = y;
return (p1__9349_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9349_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9714) : p1__9349_SHARP_.call(null,G__9714));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__9350_SHARP_){
var or__3755__auto__ = (function (){var G__9716 = x;
return (p1__9350_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9350_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9716) : p1__9350_SHARP_.call(null,G__9716));
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (function (){var G__9718 = y;
return (p1__9350_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9350_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9718) : p1__9350_SHARP_.call(null,G__9718));
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var G__9719 = z;
return (p1__9350_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9350_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9719) : p1__9350_SHARP_.call(null,G__9719));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__9736__delegate = function (x,y,z,args){
var or__3755__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return cljs.core.some(((function (or__3755__auto__,ps__$1){
return (function (p1__9351_SHARP_){
return cljs.core.some(p1__9351_SHARP_,args);
});})(or__3755__auto__,ps__$1))
,ps__$1);
}
};
var G__9736 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9737__i = 0, G__9737__a = new Array(arguments.length -  3);
while (G__9737__i < G__9737__a.length) {G__9737__a[G__9737__i] = arguments[G__9737__i + 3]; ++G__9737__i;}
  args = new cljs.core.IndexedSeq(G__9737__a,0);
} 
return G__9736__delegate.call(this,x,y,z,args);};
G__9736.cljs$lang$maxFixedArity = 3;
G__9736.cljs$lang$applyTo = (function (arglist__9738){
var x = cljs.core.first(arglist__9738);
arglist__9738 = cljs.core.next(arglist__9738);
var y = cljs.core.first(arglist__9738);
arglist__9738 = cljs.core.next(arglist__9738);
var z = cljs.core.first(arglist__9738);
var args = cljs.core.rest(arglist__9738);
return G__9736__delegate(x,y,z,args);
});
G__9736.cljs$core$IFn$_invoke$arity$variadic = G__9736__delegate;
return G__9736;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__9739 = null;
if (arguments.length > 3) {
var G__9740__i = 0, G__9740__a = new Array(arguments.length -  3);
while (G__9740__i < G__9740__a.length) {G__9740__a[G__9740__i] = arguments[G__9740__i + 3]; ++G__9740__i;}
G__9739 = new cljs.core.IndexedSeq(G__9740__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__9735 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9741__i = 0, G__9741__a = new Array(arguments.length -  3);
while (G__9741__i < G__9741__a.length) {G__9741__a[G__9741__i] = arguments[G__9741__i + 3]; ++G__9741__i;}
  ps = new cljs.core.IndexedSeq(G__9741__a,0);
} 
return G__9735__delegate.call(this,p1,p2,p3,ps);};
G__9735.cljs$lang$maxFixedArity = 3;
G__9735.cljs$lang$applyTo = (function (arglist__9742){
var p1 = cljs.core.first(arglist__9742);
arglist__9742 = cljs.core.next(arglist__9742);
var p2 = cljs.core.first(arglist__9742);
arglist__9742 = cljs.core.next(arglist__9742);
var p3 = cljs.core.first(arglist__9742);
var ps = cljs.core.rest(arglist__9742);
return G__9735__delegate(p1,p2,p3,ps);
});
G__9735.cljs$core$IFn$_invoke$arity$variadic = G__9735__delegate;
return G__9735;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__9743 = null;
if (arguments.length > 3) {
var G__9744__i = 0, G__9744__a = new Array(arguments.length -  3);
while (G__9744__i < G__9744__a.length) {G__9744__a[G__9744__i] = arguments[G__9744__i + 3]; ++G__9744__i;}
G__9743 = new cljs.core.IndexedSeq(G__9744__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__9799 = null;
var G__9799__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9799__1 = (function (result){
var G__9785 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9785) : rf.call(null,G__9785));
});
var G__9799__2 = (function (result,input){
var G__9786 = result;
var G__9787 = (function (){var G__9788 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9788) : f.call(null,G__9788));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9786,G__9787) : rf.call(null,G__9786,G__9787));
});
var G__9799__3 = (function() { 
var G__9800__delegate = function (result,input,inputs){
var G__9789 = result;
var G__9790 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9789,G__9790) : rf.call(null,G__9789,G__9790));
};
var G__9800 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9801__i = 0, G__9801__a = new Array(arguments.length -  2);
while (G__9801__i < G__9801__a.length) {G__9801__a[G__9801__i] = arguments[G__9801__i + 2]; ++G__9801__i;}
  inputs = new cljs.core.IndexedSeq(G__9801__a,0);
} 
return G__9800__delegate.call(this,result,input,inputs);};
G__9800.cljs$lang$maxFixedArity = 2;
G__9800.cljs$lang$applyTo = (function (arglist__9802){
var result = cljs.core.first(arglist__9802);
arglist__9802 = cljs.core.next(arglist__9802);
var input = cljs.core.first(arglist__9802);
var inputs = cljs.core.rest(arglist__9802);
return G__9800__delegate(result,input,inputs);
});
G__9800.cljs$core$IFn$_invoke$arity$variadic = G__9800__delegate;
return G__9800;
})()
;
G__9799 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9799__0.call(this);
case 1:
return G__9799__1.call(this,result);
case 2:
return G__9799__2.call(this,result,input);
default:
var G__9803 = null;
if (arguments.length > 2) {
var G__9804__i = 0, G__9804__a = new Array(arguments.length -  2);
while (G__9804__i < G__9804__a.length) {G__9804__a[G__9804__i] = arguments[G__9804__i + 2]; ++G__9804__i;}
G__9803 = new cljs.core.IndexedSeq(G__9804__a,0);
}
return G__9799__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9799.cljs$lang$maxFixedArity = 2;
G__9799.cljs$lang$applyTo = G__9799__3.cljs$lang$applyTo;
G__9799.cljs$core$IFn$_invoke$arity$0 = G__9799__0;
G__9799.cljs$core$IFn$_invoke$arity$1 = G__9799__1;
G__9799.cljs$core$IFn$_invoke$arity$2 = G__9799__2;
G__9799.cljs$core$IFn$_invoke$arity$variadic = G__9799__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9799;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4642__auto___9805 = size;
var i_9806 = (0);
while(true){
if((i_9806 < n__4642__auto___9805)){
cljs.core.chunk_append(b,(function (){var G__9791 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9806);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9791) : f.call(null,G__9791));
})());

var G__9807 = (i_9806 + (1));
i_9806 = G__9807;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9792 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9792) : f.call(null,G__9792));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9793 = cljs.core.first(s1);
var G__9794 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9793,G__9794) : f.call(null,G__9793,G__9794));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9795 = cljs.core.first(s1);
var G__9796 = cljs.core.first(s2);
var G__9797 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9795,G__9796,G__9797) : f.call(null,G__9795,G__9796,G__9797));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__9808__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9745_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9745_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9808 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9809__i = 0, G__9809__a = new Array(arguments.length -  4);
while (G__9809__i < G__9809__a.length) {G__9809__a[G__9809__i] = arguments[G__9809__i + 4]; ++G__9809__i;}
  colls = new cljs.core.IndexedSeq(G__9809__a,0);
} 
return G__9808__delegate.call(this,f,c1,c2,c3,colls);};
G__9808.cljs$lang$maxFixedArity = 4;
G__9808.cljs$lang$applyTo = (function (arglist__9810){
var f = cljs.core.first(arglist__9810);
arglist__9810 = cljs.core.next(arglist__9810);
var c1 = cljs.core.first(arglist__9810);
arglist__9810 = cljs.core.next(arglist__9810);
var c2 = cljs.core.first(arglist__9810);
arglist__9810 = cljs.core.next(arglist__9810);
var c3 = cljs.core.first(arglist__9810);
var colls = cljs.core.rest(arglist__9810);
return G__9808__delegate(f,c1,c2,c3,colls);
});
G__9808.cljs$core$IFn$_invoke$arity$variadic = G__9808__delegate;
return G__9808;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__9811 = null;
if (arguments.length > 4) {
var G__9812__i = 0, G__9812__a = new Array(arguments.length -  4);
while (G__9812__i < G__9812__a.length) {G__9812__a[G__9812__i] = arguments[G__9812__i + 4]; ++G__9812__i;}
G__9811 = new cljs.core.IndexedSeq(G__9812__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9821 = null;
var G__9821__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9821__1 = (function (result){
var G__9818 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9818) : rf.call(null,G__9818));
});
var G__9821__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9819 = result;
var G__9820 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9819,G__9820) : rf.call(null,G__9819,G__9820));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9821 = function(result,input){
switch(arguments.length){
case 0:
return G__9821__0.call(this);
case 1:
return G__9821__1.call(this,result);
case 2:
return G__9821__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9821.cljs$core$IFn$_invoke$arity$0 = G__9821__0;
G__9821.cljs$core$IFn$_invoke$arity$1 = G__9821__1;
G__9821.cljs$core$IFn$_invoke$arity$2 = G__9821__2;
return G__9821;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9828 = null;
var G__9828__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9828__1 = (function (result){
var G__9825 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9825) : rf.call(null,G__9825));
});
var G__9828__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9826 = result;
var G__9827 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9826,G__9827) : rf.call(null,G__9826,G__9827));
}
});
G__9828 = function(result,input){
switch(arguments.length){
case 0:
return G__9828__0.call(this);
case 1:
return G__9828__1.call(this,result);
case 2:
return G__9828__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9828.cljs$core$IFn$_invoke$arity$0 = G__9828__0;
G__9828.cljs$core$IFn$_invoke$arity$1 = G__9828__1;
G__9828.cljs$core$IFn$_invoke$arity$2 = G__9828__2;
return G__9828;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9829 = (n__$1 - (1));
var G__9830 = cljs.core.rest(s);
n__$1 = G__9829;
coll__$1 = G__9830;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9833 = cljs.core.next(s);
var G__9834 = cljs.core.next(lead);
s = G__9833;
lead = G__9834;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9847 = null;
var G__9847__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9847__1 = (function (result){
var G__9841 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9841) : rf.call(null,G__9841));
});
var G__9847__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3743__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3743__auto__)){
var G__9842 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9842) : pred.call(null,G__9842));
} else {
return and__3743__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9843 = result;
var G__9844 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9843,G__9844) : rf.call(null,G__9843,G__9844));
}
});
G__9847 = function(result,input){
switch(arguments.length){
case 0:
return G__9847__0.call(this);
case 1:
return G__9847__1.call(this,result);
case 2:
return G__9847__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9847.cljs$core$IFn$_invoke$arity$0 = G__9847__0;
G__9847.cljs$core$IFn$_invoke$arity$1 = G__9847__1;
G__9847.cljs$core$IFn$_invoke$arity$2 = G__9847__2;
return G__9847;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3743__auto__ = s;
if(and__3743__auto__){
var G__9846 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9846) : pred__$1.call(null,G__9846));
} else {
return and__3743__auto__;
}
})())){
var G__9848 = pred__$1;
var G__9849 = cljs.core.rest(s);
pred__$1 = G__9848;
coll__$1 = G__9849;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__9858 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9858) : f.call(null,G__9858));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__9861__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9861 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9862__i = 0, G__9862__a = new Array(arguments.length -  2);
while (G__9862__i < G__9862__a.length) {G__9862__a[G__9862__i] = arguments[G__9862__i + 2]; ++G__9862__i;}
  colls = new cljs.core.IndexedSeq(G__9862__a,0);
} 
return G__9861__delegate.call(this,c1,c2,colls);};
G__9861.cljs$lang$maxFixedArity = 2;
G__9861.cljs$lang$applyTo = (function (arglist__9863){
var c1 = cljs.core.first(arglist__9863);
arglist__9863 = cljs.core.next(arglist__9863);
var c2 = cljs.core.first(arglist__9863);
var colls = cljs.core.rest(arglist__9863);
return G__9861__delegate(c1,c2,colls);
});
G__9861.cljs$core$IFn$_invoke$arity$variadic = G__9861__delegate;
return G__9861;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__9864 = null;
if (arguments.length > 2) {
var G__9865__i = 0, G__9865__a = new Array(arguments.length -  2);
while (G__9865__i < G__9865__a.length) {G__9865__a[G__9865__i] = arguments[G__9865__i + 2]; ++G__9865__i;}
G__9864 = new cljs.core.IndexedSeq(G__9865__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9864);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9880 = null;
var G__9880__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9880__1 = (function (result){
var G__9873 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9873) : rf.call(null,G__9873));
});
var G__9880__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9874 = result;
var G__9875 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9874,G__9875) : rf.call(null,G__9874,G__9875));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9876 = sepr;
var G__9877 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9876,G__9877) : rf.call(null,G__9876,G__9877));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9878 = result;
var G__9879 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9878,G__9879) : rf.call(null,G__9878,G__9879));
}
});
G__9880 = function(result,input){
switch(arguments.length){
case 0:
return G__9880__0.call(this);
case 1:
return G__9880__1.call(this,result);
case 2:
return G__9880__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9880.cljs$core$IFn$_invoke$arity$0 = G__9880__0;
G__9880.cljs$core$IFn$_invoke$arity$1 = G__9880__1;
G__9880.cljs$core$IFn$_invoke$arity$2 = G__9880__2;
return G__9880;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__9889__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9889 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9890__i = 0, G__9890__a = new Array(arguments.length -  1);
while (G__9890__i < G__9890__a.length) {G__9890__a[G__9890__i] = arguments[G__9890__i + 1]; ++G__9890__i;}
  colls = new cljs.core.IndexedSeq(G__9890__a,0);
} 
return G__9889__delegate.call(this,f,colls);};
G__9889.cljs$lang$maxFixedArity = 1;
G__9889.cljs$lang$applyTo = (function (arglist__9891){
var f = cljs.core.first(arglist__9891);
var colls = cljs.core.rest(arglist__9891);
return G__9889__delegate(f,colls);
});
G__9889.cljs$core$IFn$_invoke$arity$variadic = G__9889__delegate;
return G__9889;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__9892 = null;
if (arguments.length > 1) {
var G__9893__i = 0, G__9893__a = new Array(arguments.length -  1);
while (G__9893__i < G__9893__a.length) {G__9893__a[G__9893__i] = arguments[G__9893__i + 1]; ++G__9893__i;}
G__9892 = new cljs.core.IndexedSeq(G__9893__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9912 = null;
var G__9912__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9912__1 = (function (result){
var G__9906 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9906) : rf.call(null,G__9906));
});
var G__9912__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9907 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9907) : pred.call(null,G__9907));
})())){
var G__9908 = result;
var G__9909 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9908,G__9909) : rf.call(null,G__9908,G__9909));
} else {
return result;
}
});
G__9912 = function(result,input){
switch(arguments.length){
case 0:
return G__9912__0.call(this);
case 1:
return G__9912__1.call(this,result);
case 2:
return G__9912__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9912.cljs$core$IFn$_invoke$arity$0 = G__9912__0;
G__9912.cljs$core$IFn$_invoke$arity$1 = G__9912__1;
G__9912.cljs$core$IFn$_invoke$arity$2 = G__9912__2;
return G__9912;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4642__auto___9913 = size;
var i_9914 = (0);
while(true){
if((i_9914 < n__4642__auto___9913)){
if(cljs.core.truth_((function (){var G__9910 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9914);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9910) : pred.call(null,G__9910));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9914));
} else {
}

var G__9915 = (i_9914 + (1));
i_9914 = G__9915;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9911 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9911) : pred.call(null,G__9911));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9922 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9922) : branch_QMARK_.call(null,G__9922));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__9923 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9923) : children.call(null,G__9923));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9924_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9924_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9927 = to;
if(G__9927){
var bit__4429__auto__ = (G__9927.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4429__auto__) || (G__9927.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__9928 = to;
if(G__9928){
var bit__4429__auto__ = (G__9928.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4429__auto__) || (G__9928.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9930 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9930) : f.call(null,G__9930));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__9931__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9931 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9932__i = 0, G__9932__a = new Array(arguments.length -  4);
while (G__9932__i < G__9932__a.length) {G__9932__a[G__9932__i] = arguments[G__9932__i + 4]; ++G__9932__i;}
  colls = new cljs.core.IndexedSeq(G__9932__a,0);
} 
return G__9931__delegate.call(this,f,c1,c2,c3,colls);};
G__9931.cljs$lang$maxFixedArity = 4;
G__9931.cljs$lang$applyTo = (function (arglist__9933){
var f = cljs.core.first(arglist__9933);
arglist__9933 = cljs.core.next(arglist__9933);
var c1 = cljs.core.first(arglist__9933);
arglist__9933 = cljs.core.next(arglist__9933);
var c2 = cljs.core.first(arglist__9933);
arglist__9933 = cljs.core.next(arglist__9933);
var c3 = cljs.core.first(arglist__9933);
var colls = cljs.core.rest(arglist__9933);
return G__9931__delegate(f,c1,c2,c3,colls);
});
G__9931.cljs$core$IFn$_invoke$arity$variadic = G__9931__delegate;
return G__9931;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__9934 = null;
if (arguments.length > 4) {
var G__9935__i = 0, G__9935__a = new Array(arguments.length -  4);
while (G__9935__i < G__9935__a.length) {G__9935__a[G__9935__i] = arguments[G__9935__i + 4]; ++G__9935__i;}
G__9934 = new cljs.core.IndexedSeq(G__9935__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9934);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9937 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9937) : pred.call(null,G__9937));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9952 = m__$1;
if(G__9952){
var bit__4436__auto__ = (G__9952.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4436__auto__) || (G__9952.cljs$core$ILookup$)){
return true;
} else {
if((!G__9952.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9952);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9952);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9953 = sentinel;
var G__9954 = m__$2;
var G__9955 = cljs.core.next(ks__$1);
sentinel = G__9953;
m__$1 = G__9954;
ks__$1 = G__9955;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__9956,v){
var vec__9961 = p__9956;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9961,(0),null);
var ks = cljs.core.nthnext(vec__9961,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__9962,f){
var vec__10000 = p__9962;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10000,(0),null);
var ks = cljs.core.nthnext(vec__10000,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10001 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10001) : f.call(null,G__10001));
})());
}
});
var update_in__4 = (function (m,p__9963,f,a){
var vec__10002 = p__9963;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10002,(0),null);
var ks = cljs.core.nthnext(vec__10002,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10003 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10004 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10003,G__10004) : f.call(null,G__10003,G__10004));
})());
}
});
var update_in__5 = (function (m,p__9964,f,a,b){
var vec__10005 = p__9964;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10005,(0),null);
var ks = cljs.core.nthnext(vec__10005,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10006 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10007 = a;
var G__10008 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10006,G__10007,G__10008) : f.call(null,G__10006,G__10007,G__10008));
})());
}
});
var update_in__6 = (function (m,p__9965,f,a,b,c){
var vec__10009 = p__9965;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10009,(0),null);
var ks = cljs.core.nthnext(vec__10009,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10010 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10011 = a;
var G__10012 = b;
var G__10013 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10010,G__10011,G__10012,G__10013) : f.call(null,G__10010,G__10011,G__10012,G__10013));
})());
}
});
var update_in__7 = (function() { 
var G__10015__delegate = function (m,p__9966,f,a,b,c,args){
var vec__10014 = p__9966;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10014,(0),null);
var ks = cljs.core.nthnext(vec__10014,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__10015 = function (m,p__9966,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__10016__i = 0, G__10016__a = new Array(arguments.length -  6);
while (G__10016__i < G__10016__a.length) {G__10016__a[G__10016__i] = arguments[G__10016__i + 6]; ++G__10016__i;}
  args = new cljs.core.IndexedSeq(G__10016__a,0);
} 
return G__10015__delegate.call(this,m,p__9966,f,a,b,c,args);};
G__10015.cljs$lang$maxFixedArity = 6;
G__10015.cljs$lang$applyTo = (function (arglist__10017){
var m = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var p__9966 = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var f = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var a = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var b = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var c = cljs.core.first(arglist__10017);
var args = cljs.core.rest(arglist__10017);
return G__10015__delegate(m,p__9966,f,a,b,c,args);
});
G__10015.cljs$core$IFn$_invoke$arity$variadic = G__10015__delegate;
return G__10015;
})()
;
update_in = function(m,p__9966,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__9966,f);
case 4:
return update_in__4.call(this,m,p__9966,f,a);
case 5:
return update_in__5.call(this,m,p__9966,f,a,b);
case 6:
return update_in__6.call(this,m,p__9966,f,a,b,c);
default:
var G__10018 = null;
if (arguments.length > 6) {
var G__10019__i = 0, G__10019__a = new Array(arguments.length -  6);
while (G__10019__i < G__10019__a.length) {G__10019__a[G__10019__i] = arguments[G__10019__i + 6]; ++G__10019__i;}
G__10018 = new cljs.core.IndexedSeq(G__10019__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9966,f,a,b,c, G__10018);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10030 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10030) : f.call(null,G__10030));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10031 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10032 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10031,G__10032) : f.call(null,G__10031,G__10032));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10033 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10034 = x;
var G__10035 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10033,G__10034,G__10035) : f.call(null,G__10033,G__10034,G__10035));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10036 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10037 = x;
var G__10038 = y;
var G__10039 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10036,G__10037,G__10038,G__10039) : f.call(null,G__10036,G__10037,G__10038,G__10039));
})());
});
var update__7 = (function() { 
var G__10040__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__10040 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__10041__i = 0, G__10041__a = new Array(arguments.length -  6);
while (G__10041__i < G__10041__a.length) {G__10041__a[G__10041__i] = arguments[G__10041__i + 6]; ++G__10041__i;}
  more = new cljs.core.IndexedSeq(G__10041__a,0);
} 
return G__10040__delegate.call(this,m,k,f,x,y,z,more);};
G__10040.cljs$lang$maxFixedArity = 6;
G__10040.cljs$lang$applyTo = (function (arglist__10042){
var m = cljs.core.first(arglist__10042);
arglist__10042 = cljs.core.next(arglist__10042);
var k = cljs.core.first(arglist__10042);
arglist__10042 = cljs.core.next(arglist__10042);
var f = cljs.core.first(arglist__10042);
arglist__10042 = cljs.core.next(arglist__10042);
var x = cljs.core.first(arglist__10042);
arglist__10042 = cljs.core.next(arglist__10042);
var y = cljs.core.first(arglist__10042);
arglist__10042 = cljs.core.next(arglist__10042);
var z = cljs.core.first(arglist__10042);
var more = cljs.core.rest(arglist__10042);
return G__10040__delegate(m,k,f,x,y,z,more);
});
G__10040.cljs$core$IFn$_invoke$arity$variadic = G__10040__delegate;
return G__10040;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__10043 = null;
if (arguments.length > 6) {
var G__10044__i = 0, G__10044__a = new Array(arguments.length -  6);
while (G__10044__i < G__10044__a.length) {G__10044__a[G__10044__i] = arguments[G__10044__i + 6]; ++G__10044__i;}
G__10043 = new cljs.core.IndexedSeq(G__10044__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__10043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__10045 = (ll - (5));
var G__10046 = r;
ll = G__10045;
ret = G__10046;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10051 = cljs.core.pv_aget(node,(0));
var G__10052 = (level - (5));
node = G__10051;
level = G__10052;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10053 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__10054 = (level - (5));
node = G__10053;
level = G__10054;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10064 = init__$2;
var G__10065 = (j + i);
var G__10066 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10064,G__10065,G__10066) : f.call(null,G__10064,G__10065,G__10066));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10077 = (j + (1));
var G__10078 = init__$3;
j = G__10077;
init__$2 = G__10078;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10067 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10067) : cljs.core.deref.call(null,G__10067));
} else {
var G__10079 = (i + len);
var G__10080 = init__$2;
i = G__10079;
init__$1 = G__10080;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__10068 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__10068) : cljs.core.tv_editable_root.call(null,G__10068));
})(),(function (){var G__10069 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__10069) : cljs.core.tv_editable_tail.call(null,G__10069));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10070 = init__$2;
var G__10071 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10070,G__10071) : f.call(null,G__10070,G__10071));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10081 = (j + (1));
var G__10082 = init__$3;
j = G__10081;
init__$2 = G__10082;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10072 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10072) : cljs.core.deref.call(null,G__10072));
} else {
var G__10083 = (i + len);
var G__10084 = init__$2;
i = G__10083;
init__$1 = G__10084;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__10073 = coll__$1;
var G__10074 = cljs.core.first_array_for_longvec(coll__$1);
var G__10075 = (0);
var G__10076 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10073,G__10074,G__10075,G__10076) : cljs.core.chunked_seq.call(null,G__10073,G__10074,G__10075,G__10076));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4642__auto___10085 = len;
var i_10086 = (0);
while(true){
if((i_10086 < n__4642__auto___10085)){
(new_tail[i_10086] = (self__.tail[i_10086]));

var G__10087 = (i_10086 + (1));
i_10086 = G__10087;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__10088 = null;
var G__10088__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10088__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10088 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10088__2.call(this,self__,k);
case 3:
return G__10088__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10088.cljs$core$IFn$_invoke$arity$2 = G__10088__2;
G__10088.cljs$core$IFn$_invoke$arity$3 = G__10088__3;
return G__10088;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args10063){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10063)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__10089 = (i + (1));
var G__10090 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__10089;
out = G__10090;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10091__i = 0, G__10091__a = new Array(arguments.length -  0);
while (G__10091__i < G__10091__a.length) {G__10091__a[G__10091__i] = arguments[G__10091__i + 0]; ++G__10091__i;}
  args = new cljs.core.IndexedSeq(G__10091__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__10092){
var args = cljs.core.seq(arglist__10092);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10093 = self__.vec;
var G__10094 = self__.node;
var G__10095 = self__.i;
var G__10096 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10093,G__10094,G__10095,G__10096) : cljs.core.chunked_seq.call(null,G__10093,G__10094,G__10095,G__10096));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__10097 = self__.vec;
var G__10098 = (self__.i + self__.off);
var G__10099 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10097,G__10098,G__10099) : cljs.core.subvec.call(null,G__10097,G__10098,G__10099));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__10100 = self__.vec;
var G__10101 = (self__.i + self__.off);
var G__10102 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10100,G__10101,G__10102) : cljs.core.subvec.call(null,G__10100,G__10101,G__10102));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10103 = self__.vec;
var G__10104 = self__.node;
var G__10105 = self__.i;
var G__10106 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10103,G__10104,G__10105,G__10106) : cljs.core.chunked_seq.call(null,G__10103,G__10104,G__10105,G__10106));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10107 = self__.vec;
var G__10108 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10109 = end;
var G__10110 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10107,G__10108,G__10109,G__10110) : cljs.core.chunked_seq.call(null,G__10107,G__10108,G__10109,G__10110));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10111 = self__.vec;
var G__10112 = self__.node;
var G__10113 = self__.i;
var G__10114 = self__.off;
var G__10115 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10111,G__10112,G__10113,G__10114,G__10115) : cljs.core.chunked_seq.call(null,G__10111,G__10112,G__10113,G__10114,G__10115));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10116 = self__.vec;
var G__10117 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10118 = end;
var G__10119 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10116,G__10117,G__10118,G__10119) : cljs.core.chunked_seq.call(null,G__10116,G__10117,G__10118,G__10119));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10121 = self__.meta;
var G__10122 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10123 = self__.start;
var G__10124 = (function (){var x__4072__auto__ = self__.end;
var y__4073__auto__ = (v_pos + (1));
return ((x__4072__auto__ > y__4073__auto__) ? x__4072__auto__ : y__4073__auto__);
})();
var G__10125 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10121,G__10122,G__10123,G__10124,G__10125) : cljs.core.build_subvec.call(null,G__10121,G__10122,G__10123,G__10124,G__10125));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10126 = self__.meta;
var G__10127 = self__.v;
var G__10128 = self__.start;
var G__10129 = (self__.end - (1));
var G__10130 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10126,G__10127,G__10128,G__10129,G__10130) : cljs.core.build_subvec.call(null,G__10126,G__10127,G__10128,G__10129,G__10130));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10132 = meta__$1;
var G__10133 = self__.v;
var G__10134 = self__.start;
var G__10135 = self__.end;
var G__10136 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10132,G__10133,G__10134,G__10135,G__10136) : cljs.core.build_subvec.call(null,G__10132,G__10133,G__10134,G__10135,G__10136));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10137 = self__.meta;
var G__10138 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10139 = self__.start;
var G__10140 = (self__.end + (1));
var G__10141 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10137,G__10138,G__10139,G__10140,G__10141) : cljs.core.build_subvec.call(null,G__10137,G__10138,G__10139,G__10140,G__10141));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10142 = null;
var G__10142__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10142__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10142 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10142__2.call(this,self__,k);
case 3:
return G__10142__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10142.cljs$core$IFn$_invoke$arity$2 = G__10142__2;
G__10142.cljs$core$IFn$_invoke$arity$3 = G__10142__3;
return G__10142;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10120){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10120)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10143 = meta;
var G__10144 = v.v;
var G__10145 = (v.start + start);
var G__10146 = (v.start + end);
var G__10147 = __hash;
meta = G__10143;
v = G__10144;
start = G__10145;
end = G__10146;
__hash = G__10147;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj10154 = {};
return obj10154;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__10162 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__10163 = (level - (5));
node = G__10162;
level = G__10163;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10167 = null;
var G__10167__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10167__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10167 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10167__2.call(this,self__,k);
case 3:
return G__10167__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10167.cljs$core$IFn$_invoke$arity$2 = G__10167__2;
G__10167.cljs$core$IFn$_invoke$arity$3 = G__10167__3;
return G__10167;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10164){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10164)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3755__auto__ = self__.front;
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3755__auto__ = self__.rear;
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__10168 = (i + incr);
i = G__10168;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__10169 = (i + (1));
var G__10170 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__10169;
out = G__10170;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj10174 = {};
return obj10174;
})();
var l = ks.length;
var i_10175 = (0);
while(true){
if((i_10175 < l)){
var k_10176 = (ks[i_10175]);
(new_obj[k_10176] = (obj[k_10176]));

var G__10177 = (i_10175 + (1));
i_10175 = G__10177;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3743__auto__ = (function (){var G__10181 = k;
return goog.isString(G__10181);
})();
if(cljs.core.truth_(and__3743__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3743__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__10182 = init__$1;
var G__10183 = k;
var G__10184 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10182,G__10183,G__10184) : f.call(null,G__10182,G__10183,G__10184));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10185 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10185) : cljs.core.deref.call(null,G__10185));
} else {
var G__10191 = cljs.core.rest(keys__$1);
var G__10192 = init__$2;
keys__$1 = G__10191;
init__$1 = G__10192;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3743__auto__ = (function (){var G__10187 = k;
return goog.isString(G__10187);
})();
if(cljs.core.truth_(and__3743__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3743__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__10188 = k;
return goog.isString(G__10188);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3743__auto__ = (function (){var G__10190 = k;
return goog.isString(G__10190);
})();
if(cljs.core.truth_(and__3743__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3743__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__10178_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10178_SHARP_,(self__.strobj[p1__10178_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__10193 = null;
var G__10193__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10193__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10193 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10193__2.call(this,self__,k);
case 3:
return G__10193__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10193.cljs$core$IFn$_invoke$arity$2 = G__10193__2;
G__10193.cljs$core$IFn$_invoke$arity$3 = G__10193__3;
return G__10193;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args10179){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10179)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj10195 = {};
return obj10195;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__10196 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10196,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10196,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__10197 = (i + (2));
i = G__10197;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__10198 = (i + (2));
i = G__10198;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__10199 = (i + (2));
i = G__10199;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__10200 = (i + (2));
i = G__10200;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__10201 = (i + (2));
i = G__10201;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3755__auto__ = (function (){var G__10205 = k;
return goog.isString(G__10205);
})();
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_10206 = (0);
while(true){
if((i_10206 < l)){
(narr[i_10206] = (arr[i_10206]));

var G__10207 = (i_10206 + (1));
i_10206 = G__10207;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10209 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10209) : cljs.core.keys.call(null,G__10209));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10210 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10210) : cljs.core.vals.call(null,G__10210));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10211 = cljs.core.seq(coll);
var chunk__10212 = null;
var count__10213 = (0);
var i__10214 = (0);
while(true){
if((i__10214 < count__10213)){
var vec__10215 = chunk__10212.cljs$core$IIndexed$_nth$arity$2(null,i__10214);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10215,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10215,(1),null);
var G__10216_10229 = v;
var G__10217_10230 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10216_10229,G__10217_10230) : f.call(null,G__10216_10229,G__10217_10230));

var G__10231 = seq__10211;
var G__10232 = chunk__10212;
var G__10233 = count__10213;
var G__10234 = (i__10214 + (1));
seq__10211 = G__10231;
chunk__10212 = G__10232;
count__10213 = G__10233;
i__10214 = G__10234;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10211);
if(temp__4126__auto__){
var seq__10211__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10211__$1)){
var c__4542__auto__ = cljs.core.chunk_first(seq__10211__$1);
var G__10235 = cljs.core.chunk_rest(seq__10211__$1);
var G__10236 = c__4542__auto__;
var G__10237 = cljs.core.count(c__4542__auto__);
var G__10238 = (0);
seq__10211 = G__10235;
chunk__10212 = G__10236;
count__10213 = G__10237;
i__10214 = G__10238;
continue;
} else {
var vec__10218 = cljs.core.first(seq__10211__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10218,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10218,(1),null);
var G__10219_10239 = v;
var G__10220_10240 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10219_10239,G__10220_10240) : f.call(null,G__10219_10239,G__10220_10240));

var G__10241 = cljs.core.next(seq__10211__$1);
var G__10242 = null;
var G__10243 = (0);
var G__10244 = (0);
seq__10211 = G__10241;
chunk__10212 = G__10242;
count__10213 = G__10243;
i__10214 = G__10244;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__10221 = init__$1;
var G__10222 = (self__.arr[i]);
var G__10223 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10221,G__10222,G__10223) : f.call(null,G__10221,G__10222,G__10223));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10224 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10224) : cljs.core.deref.call(null,G__10224));
} else {
var G__10245 = (i + (2));
var G__10246 = init__$2;
i = G__10245;
init__$1 = G__10246;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__10225 = other;
if(G__10225){
var bit__4429__auto__ = (G__10225.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4429__auto__) || (G__10225.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__10247 = (i + (2));
i = G__10247;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj10227 = {};
return obj10227;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__10248 = (s + (2));
var G__10249 = d;
s = G__10248;
d = G__10249;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__10250 = (s + (2));
var G__10251 = (d + (2));
s = G__10250;
d = G__10251;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__10228 = cljs.core.aclone(self__.arr);
(G__10228[(idx + (1))] = v);

return G__10228;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10252 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10253 = cljs.core.next(es);
ret = G__10252;
es = G__10253;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__10254 = null;
var G__10254__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10254__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10254 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10254__2.call(this,self__,k);
case 3:
return G__10254__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10254.cljs$core$IFn$_invoke$arity$2 = G__10254__2;
G__10254.cljs$core$IFn$_invoke$arity$3 = G__10254__3;
return G__10254;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args10208){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10208)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10255 = (i + (2));
var G__10256 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10255;
ret = G__10256;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__10257_10265 = self__.arr;
G__10257_10265.pop();

G__10257_10265.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__10258 = self__.len;
var G__10259 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__10258,G__10259) : cljs.core.array__GT_transient_hash_map.call(null,G__10258,G__10259));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__10260 = o;
if(G__10260){
var bit__4436__auto__ = (G__10260.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4436__auto__) || (G__10260.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10260.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10260);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10260);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__10261 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10261) : cljs.core.key.call(null,G__10261));
})(),(function (){var G__10262 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10262) : cljs.core.val.call(null,G__10262));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10266 = cljs.core.next(es);
var G__10267 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__10263 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10263) : cljs.core.key.call(null,G__10263));
})(),(function (){var G__10264 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10264) : cljs.core.val.call(null,G__10264));
})());
es = G__10266;
tcoll__$2 = G__10267;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10268 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10269 = (i + (2));
out = G__10268;
i = G__10269;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__10272 = cljs.core.aclone(arr);
(G__10272[i] = a);

return G__10272;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__10273 = cljs.core.aclone(arr);
(G__10273[i] = a);

(G__10273[j] = b);

return G__10273;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10278 = init__$1;
var G__10279 = k;
var G__10280 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10278,G__10279,G__10280) : f.call(null,G__10278,G__10279,G__10280));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10281 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10281) : cljs.core.deref.call(null,G__10281));
} else {
var G__10282 = (i + (2));
var G__10283 = init__$2;
i = G__10282;
init__$1 = G__10283;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10284 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10284) : cljs.core.create_inode_seq.call(null,G__10284));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10298 = (0);
var j_10299 = (0);
while(true){
if((i_10298 < (32))){
if((((self__.bitmap >>> i_10298) & (1)) === (0))){
var G__10300 = (i_10298 + (1));
var G__10301 = j_10299;
i_10298 = G__10300;
j_10299 = G__10301;
continue;
} else {
(nodes[i_10298] = ((!(((self__.arr[j_10299]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10299])),(self__.arr[j_10299]),(self__.arr[(j_10299 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10299 + (1))])));

var G__10302 = (i_10298 + (1));
var G__10303 = (j_10299 + (2));
i_10298 = G__10302;
j_10299 = G__10303;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10285 = edit__$1;
var G__10286 = (shift + (5));
var G__10287 = key_or_nil;
var G__10288 = val_or_node;
var G__10289 = hash;
var G__10290 = key;
var G__10291 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10285,G__10286,G__10287,G__10288,G__10289,G__10290,G__10291) : cljs.core.create_node.call(null,G__10285,G__10286,G__10287,G__10288,G__10289,G__10290,G__10291));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10304 = (0);
var j_10305 = (0);
while(true){
if((i_10304 < (32))){
if((((self__.bitmap >>> i_10304) & (1)) === (0))){
var G__10306 = (i_10304 + (1));
var G__10307 = j_10305;
i_10304 = G__10306;
j_10305 = G__10307;
continue;
} else {
(nodes[i_10304] = ((!(((self__.arr[j_10305]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10305])),(self__.arr[j_10305]),(self__.arr[(j_10305 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10305 + (1))])));

var G__10308 = (i_10304 + (1));
var G__10309 = (j_10305 + (2));
i_10304 = G__10308;
j_10305 = G__10309;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10292 = (shift + (5));
var G__10293 = key_or_nil;
var G__10294 = val_or_node;
var G__10295 = hash;
var G__10296 = key;
var G__10297 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10292,G__10293,G__10294,G__10295,G__10296,G__10297) : cljs.core.create_node.call(null,G__10292,G__10293,G__10294,G__10295,G__10296,G__10297));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10310 = (i + (1));
var G__10311 = (j + (2));
var G__10312 = (bitmap | ((1) << i));
i = G__10310;
j = G__10311;
bitmap = G__10312;
continue;
} else {
var G__10313 = (i + (1));
var G__10314 = j;
var G__10315 = bitmap;
i = G__10313;
j = G__10314;
bitmap = G__10315;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10316 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10316) : cljs.core.create_array_node_seq.call(null,G__10316));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10317 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10317) : cljs.core.deref.call(null,G__10317));
} else {
var G__10318 = (i + (1));
var G__10319 = init__$2;
i = G__10318;
init__$1 = G__10319;
continue;
}
} else {
var G__10320 = (i + (1));
var G__10321 = init__$1;
i = G__10320;
init__$1 = G__10321;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__10322 = (i + (2));
i = G__10322;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10323 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10323) : cljs.core.create_inode_seq.call(null,G__10323));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__10324 = self__.nodes;
var G__10325 = (self__.i + (2));
var G__10326 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10324,G__10325,G__10326) : cljs.core.create_inode_seq.call(null,G__10324,G__10325,G__10326));
} else {
var G__10327 = self__.nodes;
var G__10328 = self__.i;
var G__10329 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10327,G__10328,G__10329) : cljs.core.create_inode_seq.call(null,G__10327,G__10328,G__10329));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__10333 = (j + (2));
j = G__10333;
continue;
}
} else {
var G__10334 = (j + (2));
j = G__10334;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10335 = null;
var G__10336 = self__.nodes;
var G__10337 = self__.i;
var G__10338 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10335,G__10336,G__10337,G__10338) : cljs.core.create_array_node_seq.call(null,G__10335,G__10336,G__10337,G__10338));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__10343 = (j + (1));
j = G__10343;
continue;
}
} else {
var G__10344 = (j + (1));
j = G__10344;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10346 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10346) : cljs.core.keys.call(null,G__10346));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10347 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10347) : cljs.core.vals.call(null,G__10347));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10348 = cljs.core.seq(coll);
var chunk__10349 = null;
var count__10350 = (0);
var i__10351 = (0);
while(true){
if((i__10351 < count__10350)){
var vec__10352 = chunk__10349.cljs$core$IIndexed$_nth$arity$2(null,i__10351);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10352,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10352,(1),null);
var G__10353_10364 = v;
var G__10354_10365 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10353_10364,G__10354_10365) : f.call(null,G__10353_10364,G__10354_10365));

var G__10366 = seq__10348;
var G__10367 = chunk__10349;
var G__10368 = count__10350;
var G__10369 = (i__10351 + (1));
seq__10348 = G__10366;
chunk__10349 = G__10367;
count__10350 = G__10368;
i__10351 = G__10369;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10348);
if(temp__4126__auto__){
var seq__10348__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10348__$1)){
var c__4542__auto__ = cljs.core.chunk_first(seq__10348__$1);
var G__10370 = cljs.core.chunk_rest(seq__10348__$1);
var G__10371 = c__4542__auto__;
var G__10372 = cljs.core.count(c__4542__auto__);
var G__10373 = (0);
seq__10348 = G__10370;
chunk__10349 = G__10371;
count__10350 = G__10372;
i__10351 = G__10373;
continue;
} else {
var vec__10355 = cljs.core.first(seq__10348__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10355,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10355,(1),null);
var G__10356_10374 = v;
var G__10357_10375 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10356_10374,G__10357_10375) : f.call(null,G__10356_10374,G__10357_10375));

var G__10376 = cljs.core.next(seq__10348__$1);
var G__10377 = null;
var G__10378 = (0);
var G__10379 = (0);
seq__10348 = G__10376;
chunk__10349 = G__10377;
count__10350 = G__10378;
i__10351 = G__10379;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__10358 = init;
var G__10359 = null;
var G__10360 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10358,G__10359,G__10360) : f.call(null,G__10358,G__10359,G__10360));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10361 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10361) : cljs.core.deref.call(null,G__10361));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10363 = {};
return obj10363;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10380 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10381 = cljs.core.next(es);
ret = G__10380;
es = G__10381;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10382 = null;
var G__10382__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10382__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10382 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10382__2.call(this,self__,k);
case 3:
return G__10382__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10382.cljs$core$IFn$_invoke$arity$2 = G__10382__2;
G__10382.cljs$core$IFn$_invoke$arity$3 = G__10382__3;
return G__10382;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args10345){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10345)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10383 = (i + (2));
var G__10384 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10383;
ret = G__10384;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10385 = (i + (1));
var G__10386 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10385;
out = G__10386;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10387 = o;
if(G__10387){
var bit__4436__auto__ = (G__10387.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4436__auto__) || (G__10387.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10387.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10387);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10387);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10388 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10388) : cljs.core.key.call(null,G__10388));
})(),(function (){var G__10389 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10389) : cljs.core.val.call(null,G__10389));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10392 = cljs.core.next(es);
var G__10393 = tcoll__$1.assoc_BANG_((function (){var G__10390 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10390) : cljs.core.key.call(null,G__10390));
})(),(function (){var G__10391 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10391) : cljs.core.val.call(null,G__10391));
})());
es = G__10392;
tcoll__$1 = G__10393;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10394 = ((ascending_QMARK_)?t.left:t.right);
var G__10395 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10394;
stack__$1 = G__10395;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10408 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10408) : cljs.core.deref.call(null,G__10408));
} else {
var init__$2 = (function (){var G__10409 = init__$1;
var G__10410 = node.key;
var G__10411 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10409,G__10410,G__10411) : f.call(null,G__10409,G__10410,G__10411));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10412 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10412) : cljs.core.deref.call(null,G__10412));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10413 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10413) : cljs.core.deref.call(null,G__10413));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10415 = null;
var G__10415__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10415__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10415 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10415__2.call(this,self__,k);
case 3:
return G__10415__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10415.cljs$core$IFn$_invoke$arity$2 = G__10415__2;
G__10415.cljs$core$IFn$_invoke$arity$3 = G__10415__3;
return G__10415;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10414){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10414)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10417 = null;
var G__10417__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10417__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10417 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10417__2.call(this,self__,k);
case 3:
return G__10417__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10417.cljs$core$IFn$_invoke$arity$2 = G__10417__2;
G__10417.cljs$core$IFn$_invoke$arity$3 = G__10417__3;
return G__10417;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10416){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10416)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10430 = k;
var G__10431 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10430,G__10431) : comp.call(null,G__10430,G__10431));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10450 = k;
var G__10451 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10450,G__10451) : comp.call(null,G__10450,G__10451));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10462 = k;
var G__10463 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10462,G__10463) : comp.call(null,G__10462,G__10463));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10465 = cljs.core.seq(coll);
var chunk__10466 = null;
var count__10467 = (0);
var i__10468 = (0);
while(true){
if((i__10468 < count__10467)){
var vec__10469 = chunk__10466.cljs$core$IIndexed$_nth$arity$2(null,i__10468);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10469,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10469,(1),null);
var G__10470_10482 = v;
var G__10471_10483 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10470_10482,G__10471_10483) : f.call(null,G__10470_10482,G__10471_10483));

var G__10484 = seq__10465;
var G__10485 = chunk__10466;
var G__10486 = count__10467;
var G__10487 = (i__10468 + (1));
seq__10465 = G__10484;
chunk__10466 = G__10485;
count__10467 = G__10486;
i__10468 = G__10487;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10465);
if(temp__4126__auto__){
var seq__10465__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10465__$1)){
var c__4542__auto__ = cljs.core.chunk_first(seq__10465__$1);
var G__10488 = cljs.core.chunk_rest(seq__10465__$1);
var G__10489 = c__4542__auto__;
var G__10490 = cljs.core.count(c__4542__auto__);
var G__10491 = (0);
seq__10465 = G__10488;
chunk__10466 = G__10489;
count__10467 = G__10490;
i__10468 = G__10491;
continue;
} else {
var vec__10472 = cljs.core.first(seq__10465__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10472,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10472,(1),null);
var G__10473_10492 = v;
var G__10474_10493 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10473_10492,G__10474_10493) : f.call(null,G__10473_10492,G__10474_10493));

var G__10494 = cljs.core.next(seq__10465__$1);
var G__10495 = null;
var G__10496 = (0);
var G__10497 = (0);
seq__10465 = G__10494;
chunk__10466 = G__10495;
count__10467 = G__10496;
i__10468 = G__10497;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10475 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10475) : cljs.core.keys.call(null,G__10475));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10476 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10476) : cljs.core.vals.call(null,G__10476));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10477 = k;
var G__10478 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10477,G__10478) : self__.comp.call(null,G__10477,G__10478));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10498 = t.left;
t = G__10498;
continue;
} else {
var G__10499 = t.right;
t = G__10499;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10500 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10501 = cljs.core.next(es);
ret = G__10500;
es = G__10501;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10502 = null;
var G__10502__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10502__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10502 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10502__2.call(this,self__,k);
case 3:
return G__10502__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10502.cljs$core$IFn$_invoke$arity$2 = G__10502__2;
G__10502.cljs$core$IFn$_invoke$arity$3 = G__10502__3;
return G__10502;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10464){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10464)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10479 = k;
var G__10480 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10479,G__10480) : self__.comp.call(null,G__10479,G__10480));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10503 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10504 = t.left;
stack = G__10503;
t = G__10504;
continue;
} else {
var G__10505 = stack;
var G__10506 = t.right;
stack = G__10505;
t = G__10506;
continue;
}
} else {
if((c > (0))){
var G__10507 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10508 = t.right;
stack = G__10507;
t = G__10508;
continue;
} else {
var G__10509 = stack;
var G__10510 = t.left;
stack = G__10509;
t = G__10510;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10481 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10481) : cljs.core.key.call(null,G__10481));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10511 = cljs.core.nnext(in$);
var G__10512 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10511;
out = G__10512;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10513__i = 0, G__10513__a = new Array(arguments.length -  0);
while (G__10513__i < G__10513__a.length) {G__10513__a[G__10513__i] = arguments[G__10513__i + 0]; ++G__10513__i;}
  keyvals = new cljs.core.IndexedSeq(G__10513__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__10514){
var keyvals = cljs.core.seq(arglist__10514);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10515__i = 0, G__10515__a = new Array(arguments.length -  0);
while (G__10515__i < G__10515__a.length) {G__10515__a[G__10515__i] = arguments[G__10515__i + 0]; ++G__10515__i;}
  keyvals = new cljs.core.IndexedSeq(G__10515__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__10516){
var keyvals = cljs.core.seq(arglist__10516);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10520 = {};
return obj10520;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10521 = cljs.core.nnext(kvs);
kvs = G__10521;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10522__i = 0, G__10522__a = new Array(arguments.length -  0);
while (G__10522__i < G__10522__a.length) {G__10522__a[G__10522__i] = arguments[G__10522__i + 0]; ++G__10522__i;}
  keyvals = new cljs.core.IndexedSeq(G__10522__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__10523){
var keyvals = cljs.core.seq(arglist__10523);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10524 = cljs.core.nnext(in$);
var G__10525 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10524;
out = G__10525;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10526__i = 0, G__10526__a = new Array(arguments.length -  0);
while (G__10526__i < G__10526__a.length) {G__10526__a[G__10526__i] = arguments[G__10526__i + 0]; ++G__10526__i;}
  keyvals = new cljs.core.IndexedSeq(G__10526__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__10527){
var keyvals = cljs.core.seq(arglist__10527);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10528 = cljs.core.nnext(in$);
var G__10529 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10528;
out = G__10529;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10530__i = 0, G__10530__a = new Array(arguments.length -  1);
while (G__10530__i < G__10530__a.length) {G__10530__a[G__10530__i] = arguments[G__10530__i + 1]; ++G__10530__i;}
  keyvals = new cljs.core.IndexedSeq(G__10530__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__10531){
var comparator = cljs.core.first(arglist__10531);
var keyvals = cljs.core.rest(arglist__10531);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10532 = self__.mseq;
if(G__10532){
var bit__4436__auto__ = (G__10532.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4436__auto__) || (G__10532.cljs$core$INext$)){
return true;
} else {
if((!G__10532.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10532);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10532);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10533 = self__.mseq;
if(G__10533){
var bit__4436__auto__ = (G__10533.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4436__auto__) || (G__10533.cljs$core$INext$)){
return true;
} else {
if((!G__10533.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10533);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10533);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10534 = self__.mseq;
if(G__10534){
var bit__4436__auto__ = (G__10534.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4436__auto__) || (G__10534.cljs$core$INext$)){
return true;
} else {
if((!G__10534.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10534);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10534);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10535 = self__.mseq;
if(G__10535){
var bit__4436__auto__ = (G__10535.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4436__auto__) || (G__10535.cljs$core$INext$)){
return true;
} else {
if((!G__10535.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10535);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10535);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10536_SHARP_,p2__10537_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3755__auto__ = p1__10536_SHARP_;
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10537_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10538__i = 0, G__10538__a = new Array(arguments.length -  0);
while (G__10538__i < G__10538__a.length) {G__10538__a[G__10538__i] = arguments[G__10538__i + 0]; ++G__10538__i;}
  maps = new cljs.core.IndexedSeq(G__10538__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__10539){
var maps = cljs.core.seq(arglist__10539);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10542 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10543 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10542,G__10543) : f.call(null,G__10542,G__10543));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3755__auto__ = m1;
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10544__i = 0, G__10544__a = new Array(arguments.length -  1);
while (G__10544__i < G__10544__a.length) {G__10544__a[G__10544__i] = arguments[G__10544__i + 1]; ++G__10544__i;}
  maps = new cljs.core.IndexedSeq(G__10544__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__10545){
var f = cljs.core.first(arglist__10545);
var maps = cljs.core.rest(arglist__10545);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__10546 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10547 = cljs.core.next(keys);
ret = G__10546;
keys = G__10547;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10550 = cljs.core.seq(coll);
var chunk__10551 = null;
var count__10552 = (0);
var i__10553 = (0);
while(true){
if((i__10553 < count__10552)){
var vec__10554 = chunk__10551.cljs$core$IIndexed$_nth$arity$2(null,i__10553);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10554,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10554,(1),null);
var G__10555_10560 = v;
var G__10556_10561 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10555_10560,G__10556_10561) : f.call(null,G__10555_10560,G__10556_10561));

var G__10562 = seq__10550;
var G__10563 = chunk__10551;
var G__10564 = count__10552;
var G__10565 = (i__10553 + (1));
seq__10550 = G__10562;
chunk__10551 = G__10563;
count__10552 = G__10564;
i__10553 = G__10565;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10550);
if(temp__4126__auto__){
var seq__10550__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10550__$1)){
var c__4542__auto__ = cljs.core.chunk_first(seq__10550__$1);
var G__10566 = cljs.core.chunk_rest(seq__10550__$1);
var G__10567 = c__4542__auto__;
var G__10568 = cljs.core.count(c__4542__auto__);
var G__10569 = (0);
seq__10550 = G__10566;
chunk__10551 = G__10567;
count__10552 = G__10568;
i__10553 = G__10569;
continue;
} else {
var vec__10557 = cljs.core.first(seq__10550__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10557,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10557,(1),null);
var G__10558_10570 = v;
var G__10559_10571 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10558_10570,G__10559_10571) : f.call(null,G__10558_10570,G__10559_10571));

var G__10572 = cljs.core.next(seq__10550__$1);
var G__10573 = null;
var G__10574 = (0);
var G__10575 = (0);
seq__10550 = G__10572;
chunk__10551 = G__10573;
count__10552 = G__10574;
i__10553 = G__10575;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10548_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10548_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10576 = null;
var G__10576__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10576__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10576 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10576__2.call(this,self__,k);
case 3:
return G__10576__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10576.cljs$core$IFn$_invoke$arity$2 = G__10576__2;
G__10576.cljs$core$IFn$_invoke$arity$3 = G__10576__3;
return G__10576;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10549){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10549)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10577 = (i + (1));
var G__10578 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10577;
out = G__10578;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10579 = (i + (1));
var G__10580 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10579;
out = G__10580;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10582 = null;
var G__10582__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10582__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10582 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10582__2.call(this,self__,k);
case 3:
return G__10582__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10582.cljs$core$IFn$_invoke$arity$2 = G__10582__2;
G__10582.cljs$core$IFn$_invoke$arity$3 = G__10582__3;
return G__10582;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10581){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10581)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10585 = cljs.core.seq(coll);
var chunk__10586 = null;
var count__10587 = (0);
var i__10588 = (0);
while(true){
if((i__10588 < count__10587)){
var vec__10589 = chunk__10586.cljs$core$IIndexed$_nth$arity$2(null,i__10588);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10589,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10589,(1),null);
var G__10590_10595 = v;
var G__10591_10596 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10590_10595,G__10591_10596) : f.call(null,G__10590_10595,G__10591_10596));

var G__10597 = seq__10585;
var G__10598 = chunk__10586;
var G__10599 = count__10587;
var G__10600 = (i__10588 + (1));
seq__10585 = G__10597;
chunk__10586 = G__10598;
count__10587 = G__10599;
i__10588 = G__10600;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10585);
if(temp__4126__auto__){
var seq__10585__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10585__$1)){
var c__4542__auto__ = cljs.core.chunk_first(seq__10585__$1);
var G__10601 = cljs.core.chunk_rest(seq__10585__$1);
var G__10602 = c__4542__auto__;
var G__10603 = cljs.core.count(c__4542__auto__);
var G__10604 = (0);
seq__10585 = G__10601;
chunk__10586 = G__10602;
count__10587 = G__10603;
i__10588 = G__10604;
continue;
} else {
var vec__10592 = cljs.core.first(seq__10585__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10592,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10592,(1),null);
var G__10593_10605 = v;
var G__10594_10606 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10593_10605,G__10594_10606) : f.call(null,G__10593_10605,G__10594_10606));

var G__10607 = cljs.core.next(seq__10585__$1);
var G__10608 = null;
var G__10609 = (0);
var G__10610 = (0);
seq__10585 = G__10607;
chunk__10586 = G__10608;
count__10587 = G__10609;
i__10588 = G__10610;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10583_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10583_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10611 = null;
var G__10611__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10611__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10611 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10611__2.call(this,self__,k);
case 3:
return G__10611__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10611.cljs$core$IFn$_invoke$arity$2 = G__10611__2;
G__10611.cljs$core$IFn$_invoke$arity$3 = G__10611__3;
return G__10611;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10584){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10584)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4636__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4636__auto__.length)){
var G__10612 = (i + (1));
var G__10613 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10612;
res = G__10613;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10614 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10615 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10614;
out = G__10615;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__10616__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10616 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10617__i = 0, G__10617__a = new Array(arguments.length -  0);
while (G__10617__i < G__10617__a.length) {G__10617__a[G__10617__i] = arguments[G__10617__i + 0]; ++G__10617__i;}
  keys = new cljs.core.IndexedSeq(G__10617__a,0);
} 
return G__10616__delegate.call(this,keys);};
G__10616.cljs$lang$maxFixedArity = 0;
G__10616.cljs$lang$applyTo = (function (arglist__10618){
var keys = cljs.core.seq(arglist__10618);
return G__10616__delegate(keys);
});
G__10616.cljs$core$IFn$_invoke$arity$variadic = G__10616__delegate;
return G__10616;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__10619 = null;
if (arguments.length > 0) {
var G__10620__i = 0, G__10620__a = new Array(arguments.length -  0);
while (G__10620__i < G__10620__a.length) {G__10620__a[G__10620__i] = arguments[G__10620__i + 0]; ++G__10620__i;}
G__10619 = new cljs.core.IndexedSeq(G__10620__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10621__i = 0, G__10621__a = new Array(arguments.length -  0);
while (G__10621__i < G__10621__a.length) {G__10621__a[G__10621__i] = arguments[G__10621__i + 0]; ++G__10621__i;}
  keys = new cljs.core.IndexedSeq(G__10621__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__10622){
var keys = cljs.core.seq(arglist__10622);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10623__i = 0, G__10623__a = new Array(arguments.length -  1);
while (G__10623__i < G__10623__a.length) {G__10623__a[G__10623__i] = arguments[G__10623__i + 1]; ++G__10623__i;}
  keys = new cljs.core.IndexedSeq(G__10623__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__10624){
var comparator = cljs.core.first(arglist__10624);
var keys = cljs.core.rest(arglist__10624);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10625_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10625_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10625_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10626_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10626_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10626_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10647 = null;
var G__10647__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10647__1 = (function (result){
var G__10637 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10637) : rf.call(null,G__10637));
});
var G__10647__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10638 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10638) : cljs.core.deref.call(null,G__10638));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10639 = result;
var G__10640 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10639,G__10640) : rf.call(null,G__10639,G__10640));
}
});
G__10647 = function(result,input){
switch(arguments.length){
case 0:
return G__10647__0.call(this);
case 1:
return G__10647__1.call(this,result);
case 2:
return G__10647__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10647.cljs$core$IFn$_invoke$arity$0 = G__10647__0;
G__10647.cljs$core$IFn$_invoke$arity$1 = G__10647__1;
G__10647.cljs$core$IFn$_invoke$arity$2 = G__10647__2;
return G__10647;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10645,seen__$1){
while(true){
var vec__10646 = p__10645;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10646,(0),null);
var xs__$1 = vec__10646;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10648 = cljs.core.rest(s);
var G__10649 = seen__$1;
p__10645 = G__10648;
seen__$1 = G__10649;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10650 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10651 = cljs.core.next(s__$1);
ret = G__10650;
s__$1 = G__10651;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__10653 = x;
if(G__10653){
var bit__4429__auto__ = (G__10653.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4429__auto__) || (G__10653.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10654 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10655 = cljs.core.next(ks);
var G__10656 = cljs.core.next(vs);
map = G__10654;
ks = G__10655;
vs = G__10656;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__10667 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10667) : k.call(null,G__10667));
})() > (function (){var G__10668 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10668) : k.call(null,G__10668));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__10669__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10657_SHARP_,p2__10658_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10657_SHARP_,p2__10658_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10669 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10670__i = 0, G__10670__a = new Array(arguments.length -  3);
while (G__10670__i < G__10670__a.length) {G__10670__a[G__10670__i] = arguments[G__10670__i + 3]; ++G__10670__i;}
  more = new cljs.core.IndexedSeq(G__10670__a,0);
} 
return G__10669__delegate.call(this,k,x,y,more);};
G__10669.cljs$lang$maxFixedArity = 3;
G__10669.cljs$lang$applyTo = (function (arglist__10671){
var k = cljs.core.first(arglist__10671);
arglist__10671 = cljs.core.next(arglist__10671);
var x = cljs.core.first(arglist__10671);
arglist__10671 = cljs.core.next(arglist__10671);
var y = cljs.core.first(arglist__10671);
var more = cljs.core.rest(arglist__10671);
return G__10669__delegate(k,x,y,more);
});
G__10669.cljs$core$IFn$_invoke$arity$variadic = G__10669__delegate;
return G__10669;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__10672 = null;
if (arguments.length > 3) {
var G__10673__i = 0, G__10673__a = new Array(arguments.length -  3);
while (G__10673__i < G__10673__a.length) {G__10673__a[G__10673__i] = arguments[G__10673__i + 3]; ++G__10673__i;}
G__10672 = new cljs.core.IndexedSeq(G__10673__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__10684 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10684) : k.call(null,G__10684));
})() < (function (){var G__10685 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10685) : k.call(null,G__10685));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__10686__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10674_SHARP_,p2__10675_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10674_SHARP_,p2__10675_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10686 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10687__i = 0, G__10687__a = new Array(arguments.length -  3);
while (G__10687__i < G__10687__a.length) {G__10687__a[G__10687__i] = arguments[G__10687__i + 3]; ++G__10687__i;}
  more = new cljs.core.IndexedSeq(G__10687__a,0);
} 
return G__10686__delegate.call(this,k,x,y,more);};
G__10686.cljs$lang$maxFixedArity = 3;
G__10686.cljs$lang$applyTo = (function (arglist__10688){
var k = cljs.core.first(arglist__10688);
arglist__10688 = cljs.core.next(arglist__10688);
var x = cljs.core.first(arglist__10688);
arglist__10688 = cljs.core.next(arglist__10688);
var y = cljs.core.first(arglist__10688);
var more = cljs.core.rest(arglist__10688);
return G__10686__delegate(k,x,y,more);
});
G__10686.cljs$core$IFn$_invoke$arity$variadic = G__10686__delegate;
return G__10686;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__10689 = null;
if (arguments.length > 3) {
var G__10690__i = 0, G__10690__a = new Array(arguments.length -  3);
while (G__10690__i < G__10690__a.length) {G__10690__a[G__10690__i] = arguments[G__10690__i + 3]; ++G__10690__i;}
G__10689 = new cljs.core.IndexedSeq(G__10690__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10689);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10707 = null;
var G__10707__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10707__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10702 = result;
var G__10703 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10702,G__10703) : rf.call(null,G__10702,G__10703));
})());
})());
var G__10704 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10704) : rf.call(null,G__10704));
});
var G__10707__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10705 = result;
var G__10706 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10705,G__10706) : rf.call(null,G__10705,G__10706));
} else {
return result;
}
});
G__10707 = function(result,input){
switch(arguments.length){
case 0:
return G__10707__0.call(this);
case 1:
return G__10707__1.call(this,result);
case 2:
return G__10707__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10707.cljs$core$IFn$_invoke$arity$0 = G__10707__0;
G__10707.cljs$core$IFn$_invoke$arity$1 = G__10707__1;
G__10707.cljs$core$IFn$_invoke$arity$2 = G__10707__2;
return G__10707;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10720 = null;
var G__10720__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10720__1 = (function (result){
var G__10715 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10715) : rf.call(null,G__10715));
});
var G__10720__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10716 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10716) : pred.call(null,G__10716));
})())){
var G__10717 = result;
var G__10718 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10717,G__10718) : rf.call(null,G__10717,G__10718));
} else {
return cljs.core.reduced(result);
}
});
G__10720 = function(result,input){
switch(arguments.length){
case 0:
return G__10720__0.call(this);
case 1:
return G__10720__1.call(this,result);
case 2:
return G__10720__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10720.cljs$core$IFn$_invoke$arity$0 = G__10720__0;
G__10720.cljs$core$IFn$_invoke$arity$1 = G__10720__1;
G__10720.cljs$core$IFn$_invoke$arity$2 = G__10720__2;
return G__10720;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10719 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10719) : pred.call(null,G__10719));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10725 = (function (){var G__10727 = cljs.core._entry_key(sc,e);
var G__10728 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10727,G__10728) : comp.call(null,G__10727,G__10728));
})();
var G__10726 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10725,G__10726) : test.call(null,G__10725,G__10726));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10732 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10732,(0),null);
var s = vec__10732;
if(cljs.core.truth_((function (){var G__10733 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10733) : include.call(null,G__10733));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10734 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10734,(0),null);
var s = vec__10734;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10738 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10738,(0),null);
var s = vec__10738;
if(cljs.core.truth_((function (){var G__10739 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10739) : include.call(null,G__10739));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10740 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10740,(0),null);
var s = vec__10740;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10741 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10741) : Math.ceil.call(null,G__10741));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4176__auto__ = self__.__hash;
if(!((h__4176__auto__ == null))){
return h__4176__auto__;
} else {
var h__4176__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4176__auto____$1;

return h__4176__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10742 = ret;
var G__10743 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10742,G__10743) : f.call(null,G__10742,G__10743));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10744 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10744) : cljs.core.deref.call(null,G__10744));
} else {
var G__10745 = (i + self__.step);
var G__10746 = ret__$1;
i = G__10745;
ret = G__10746;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10764 = null;
var G__10764__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10764__1 = (function (result){
var G__10761 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10761) : rf.call(null,G__10761));
});
var G__10764__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10762 = result;
var G__10763 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10762,G__10763) : rf.call(null,G__10762,G__10763));
} else {
return result;
}
});
G__10764 = function(result,input){
switch(arguments.length){
case 0:
return G__10764__0.call(this);
case 1:
return G__10764__1.call(this,result);
case 2:
return G__10764__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10764.cljs$core$IFn$_invoke$arity$0 = G__10764__0;
G__10764.cljs$core$IFn$_invoke$arity$1 = G__10764__1;
G__10764.cljs$core$IFn$_invoke$arity$2 = G__10764__2;
return G__10764;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10786 = null;
var G__10786__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10786__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10777 = result;
var G__10778 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10777,G__10778) : rf.call(null,G__10777,G__10778));
})());
})());
var G__10779 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10779) : rf.call(null,G__10779));
});
var G__10786__2 = (function (result,input){
var pval = (function (){var G__10780 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10780) : cljs.core.deref.call(null,G__10780));
})();
var val = (function (){var G__10781 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10781) : f.call(null,G__10781));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10782 = result;
var G__10783 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10782,G__10783) : rf.call(null,G__10782,G__10783));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10786 = function(result,input){
switch(arguments.length){
case 0:
return G__10786__0.call(this);
case 1:
return G__10786__1.call(this,result);
case 2:
return G__10786__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10786.cljs$core$IFn$_invoke$arity$0 = G__10786__0;
G__10786.cljs$core$IFn$_invoke$arity$1 = G__10786__1;
G__10786.cljs$core$IFn$_invoke$arity$2 = G__10786__2;
return G__10786;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10784 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10784) : f.call(null,G__10784));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10765_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10785 = p1__10765_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10785) : f.call(null,G__10785));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10795 = init;
var G__10796 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10795,G__10796) : f.call(null,G__10795,G__10796));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__10891 = null;
var G__10891__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10891__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10849 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10849) : f.call(null,G__10849));
})()],null));
});
var G__10891__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10850 = x;
var G__10851 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10850,G__10851) : f.call(null,G__10850,G__10851));
})()],null));
});
var G__10891__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10852 = x;
var G__10853 = y;
var G__10854 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10852,G__10853,G__10854) : f.call(null,G__10852,G__10853,G__10854));
})()],null));
});
var G__10891__4 = (function() { 
var G__10892__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10892 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10893__i = 0, G__10893__a = new Array(arguments.length -  3);
while (G__10893__i < G__10893__a.length) {G__10893__a[G__10893__i] = arguments[G__10893__i + 3]; ++G__10893__i;}
  args = new cljs.core.IndexedSeq(G__10893__a,0);
} 
return G__10892__delegate.call(this,x,y,z,args);};
G__10892.cljs$lang$maxFixedArity = 3;
G__10892.cljs$lang$applyTo = (function (arglist__10894){
var x = cljs.core.first(arglist__10894);
arglist__10894 = cljs.core.next(arglist__10894);
var y = cljs.core.first(arglist__10894);
arglist__10894 = cljs.core.next(arglist__10894);
var z = cljs.core.first(arglist__10894);
var args = cljs.core.rest(arglist__10894);
return G__10892__delegate(x,y,z,args);
});
G__10892.cljs$core$IFn$_invoke$arity$variadic = G__10892__delegate;
return G__10892;
})()
;
G__10891 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10891__0.call(this);
case 1:
return G__10891__1.call(this,x);
case 2:
return G__10891__2.call(this,x,y);
case 3:
return G__10891__3.call(this,x,y,z);
default:
var G__10895 = null;
if (arguments.length > 3) {
var G__10896__i = 0, G__10896__a = new Array(arguments.length -  3);
while (G__10896__i < G__10896__a.length) {G__10896__a[G__10896__i] = arguments[G__10896__i + 3]; ++G__10896__i;}
G__10895 = new cljs.core.IndexedSeq(G__10896__a,0);
}
return G__10891__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10895);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10891.cljs$lang$maxFixedArity = 3;
G__10891.cljs$lang$applyTo = G__10891__4.cljs$lang$applyTo;
G__10891.cljs$core$IFn$_invoke$arity$0 = G__10891__0;
G__10891.cljs$core$IFn$_invoke$arity$1 = G__10891__1;
G__10891.cljs$core$IFn$_invoke$arity$2 = G__10891__2;
G__10891.cljs$core$IFn$_invoke$arity$3 = G__10891__3;
G__10891.cljs$core$IFn$_invoke$arity$variadic = G__10891__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10891;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__10897 = null;
var G__10897__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10897__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10855 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10855) : f.call(null,G__10855));
})(),(function (){var G__10856 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10856) : g.call(null,G__10856));
})()],null));
});
var G__10897__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10857 = x;
var G__10858 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10857,G__10858) : f.call(null,G__10857,G__10858));
})(),(function (){var G__10859 = x;
var G__10860 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10859,G__10860) : g.call(null,G__10859,G__10860));
})()],null));
});
var G__10897__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10861 = x;
var G__10862 = y;
var G__10863 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10861,G__10862,G__10863) : f.call(null,G__10861,G__10862,G__10863));
})(),(function (){var G__10864 = x;
var G__10865 = y;
var G__10866 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10864,G__10865,G__10866) : g.call(null,G__10864,G__10865,G__10866));
})()],null));
});
var G__10897__4 = (function() { 
var G__10898__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10898 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10899__i = 0, G__10899__a = new Array(arguments.length -  3);
while (G__10899__i < G__10899__a.length) {G__10899__a[G__10899__i] = arguments[G__10899__i + 3]; ++G__10899__i;}
  args = new cljs.core.IndexedSeq(G__10899__a,0);
} 
return G__10898__delegate.call(this,x,y,z,args);};
G__10898.cljs$lang$maxFixedArity = 3;
G__10898.cljs$lang$applyTo = (function (arglist__10900){
var x = cljs.core.first(arglist__10900);
arglist__10900 = cljs.core.next(arglist__10900);
var y = cljs.core.first(arglist__10900);
arglist__10900 = cljs.core.next(arglist__10900);
var z = cljs.core.first(arglist__10900);
var args = cljs.core.rest(arglist__10900);
return G__10898__delegate(x,y,z,args);
});
G__10898.cljs$core$IFn$_invoke$arity$variadic = G__10898__delegate;
return G__10898;
})()
;
G__10897 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10897__0.call(this);
case 1:
return G__10897__1.call(this,x);
case 2:
return G__10897__2.call(this,x,y);
case 3:
return G__10897__3.call(this,x,y,z);
default:
var G__10901 = null;
if (arguments.length > 3) {
var G__10902__i = 0, G__10902__a = new Array(arguments.length -  3);
while (G__10902__i < G__10902__a.length) {G__10902__a[G__10902__i] = arguments[G__10902__i + 3]; ++G__10902__i;}
G__10901 = new cljs.core.IndexedSeq(G__10902__a,0);
}
return G__10897__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10897.cljs$lang$maxFixedArity = 3;
G__10897.cljs$lang$applyTo = G__10897__4.cljs$lang$applyTo;
G__10897.cljs$core$IFn$_invoke$arity$0 = G__10897__0;
G__10897.cljs$core$IFn$_invoke$arity$1 = G__10897__1;
G__10897.cljs$core$IFn$_invoke$arity$2 = G__10897__2;
G__10897.cljs$core$IFn$_invoke$arity$3 = G__10897__3;
G__10897.cljs$core$IFn$_invoke$arity$variadic = G__10897__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10897;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__10903 = null;
var G__10903__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10903__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10867 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10867) : f.call(null,G__10867));
})(),(function (){var G__10868 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10868) : g.call(null,G__10868));
})(),(function (){var G__10869 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10869) : h.call(null,G__10869));
})()],null));
});
var G__10903__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10870 = x;
var G__10871 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10870,G__10871) : f.call(null,G__10870,G__10871));
})(),(function (){var G__10872 = x;
var G__10873 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10872,G__10873) : g.call(null,G__10872,G__10873));
})(),(function (){var G__10874 = x;
var G__10875 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10874,G__10875) : h.call(null,G__10874,G__10875));
})()],null));
});
var G__10903__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10876 = x;
var G__10877 = y;
var G__10878 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10876,G__10877,G__10878) : f.call(null,G__10876,G__10877,G__10878));
})(),(function (){var G__10879 = x;
var G__10880 = y;
var G__10881 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10879,G__10880,G__10881) : g.call(null,G__10879,G__10880,G__10881));
})(),(function (){var G__10882 = x;
var G__10883 = y;
var G__10884 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10882,G__10883,G__10884) : h.call(null,G__10882,G__10883,G__10884));
})()],null));
});
var G__10903__4 = (function() { 
var G__10904__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10904 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10905__i = 0, G__10905__a = new Array(arguments.length -  3);
while (G__10905__i < G__10905__a.length) {G__10905__a[G__10905__i] = arguments[G__10905__i + 3]; ++G__10905__i;}
  args = new cljs.core.IndexedSeq(G__10905__a,0);
} 
return G__10904__delegate.call(this,x,y,z,args);};
G__10904.cljs$lang$maxFixedArity = 3;
G__10904.cljs$lang$applyTo = (function (arglist__10906){
var x = cljs.core.first(arglist__10906);
arglist__10906 = cljs.core.next(arglist__10906);
var y = cljs.core.first(arglist__10906);
arglist__10906 = cljs.core.next(arglist__10906);
var z = cljs.core.first(arglist__10906);
var args = cljs.core.rest(arglist__10906);
return G__10904__delegate(x,y,z,args);
});
G__10904.cljs$core$IFn$_invoke$arity$variadic = G__10904__delegate;
return G__10904;
})()
;
G__10903 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10903__0.call(this);
case 1:
return G__10903__1.call(this,x);
case 2:
return G__10903__2.call(this,x,y);
case 3:
return G__10903__3.call(this,x,y,z);
default:
var G__10907 = null;
if (arguments.length > 3) {
var G__10908__i = 0, G__10908__a = new Array(arguments.length -  3);
while (G__10908__i < G__10908__a.length) {G__10908__a[G__10908__i] = arguments[G__10908__i + 3]; ++G__10908__i;}
G__10907 = new cljs.core.IndexedSeq(G__10908__a,0);
}
return G__10903__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10903.cljs$lang$maxFixedArity = 3;
G__10903.cljs$lang$applyTo = G__10903__4.cljs$lang$applyTo;
G__10903.cljs$core$IFn$_invoke$arity$0 = G__10903__0;
G__10903.cljs$core$IFn$_invoke$arity$1 = G__10903__1;
G__10903.cljs$core$IFn$_invoke$arity$2 = G__10903__2;
G__10903.cljs$core$IFn$_invoke$arity$3 = G__10903__3;
G__10903.cljs$core$IFn$_invoke$arity$variadic = G__10903__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10903;
})()
});
var juxt__4 = (function() { 
var G__10909__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10910 = null;
var G__10910__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10797_SHARP_,p2__10798_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10797_SHARP_,(function (){return (p2__10798_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10798_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10798_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10910__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10799_SHARP_,p2__10800_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10799_SHARP_,(function (){var G__10885 = x;
return (p2__10800_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10800_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10885) : p2__10800_SHARP_.call(null,G__10885));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10910__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10801_SHARP_,p2__10802_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10801_SHARP_,(function (){var G__10886 = x;
var G__10887 = y;
return (p2__10802_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10802_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10886,G__10887) : p2__10802_SHARP_.call(null,G__10886,G__10887));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10910__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10803_SHARP_,p2__10804_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10803_SHARP_,(function (){var G__10888 = x;
var G__10889 = y;
var G__10890 = z;
return (p2__10804_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10804_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10888,G__10889,G__10890) : p2__10804_SHARP_.call(null,G__10888,G__10889,G__10890));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10910__4 = (function() { 
var G__10911__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10805_SHARP_,p2__10806_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10805_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10806_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10911 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10912__i = 0, G__10912__a = new Array(arguments.length -  3);
while (G__10912__i < G__10912__a.length) {G__10912__a[G__10912__i] = arguments[G__10912__i + 3]; ++G__10912__i;}
  args = new cljs.core.IndexedSeq(G__10912__a,0);
} 
return G__10911__delegate.call(this,x,y,z,args);};
G__10911.cljs$lang$maxFixedArity = 3;
G__10911.cljs$lang$applyTo = (function (arglist__10913){
var x = cljs.core.first(arglist__10913);
arglist__10913 = cljs.core.next(arglist__10913);
var y = cljs.core.first(arglist__10913);
arglist__10913 = cljs.core.next(arglist__10913);
var z = cljs.core.first(arglist__10913);
var args = cljs.core.rest(arglist__10913);
return G__10911__delegate(x,y,z,args);
});
G__10911.cljs$core$IFn$_invoke$arity$variadic = G__10911__delegate;
return G__10911;
})()
;
G__10910 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10910__0.call(this);
case 1:
return G__10910__1.call(this,x);
case 2:
return G__10910__2.call(this,x,y);
case 3:
return G__10910__3.call(this,x,y,z);
default:
var G__10914 = null;
if (arguments.length > 3) {
var G__10915__i = 0, G__10915__a = new Array(arguments.length -  3);
while (G__10915__i < G__10915__a.length) {G__10915__a[G__10915__i] = arguments[G__10915__i + 3]; ++G__10915__i;}
G__10914 = new cljs.core.IndexedSeq(G__10915__a,0);
}
return G__10910__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10914);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10910.cljs$lang$maxFixedArity = 3;
G__10910.cljs$lang$applyTo = G__10910__4.cljs$lang$applyTo;
G__10910.cljs$core$IFn$_invoke$arity$0 = G__10910__0;
G__10910.cljs$core$IFn$_invoke$arity$1 = G__10910__1;
G__10910.cljs$core$IFn$_invoke$arity$2 = G__10910__2;
G__10910.cljs$core$IFn$_invoke$arity$3 = G__10910__3;
G__10910.cljs$core$IFn$_invoke$arity$variadic = G__10910__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10910;
})()
;})(fs__$1))
};
var G__10909 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10916__i = 0, G__10916__a = new Array(arguments.length -  3);
while (G__10916__i < G__10916__a.length) {G__10916__a[G__10916__i] = arguments[G__10916__i + 3]; ++G__10916__i;}
  fs = new cljs.core.IndexedSeq(G__10916__a,0);
} 
return G__10909__delegate.call(this,f,g,h,fs);};
G__10909.cljs$lang$maxFixedArity = 3;
G__10909.cljs$lang$applyTo = (function (arglist__10917){
var f = cljs.core.first(arglist__10917);
arglist__10917 = cljs.core.next(arglist__10917);
var g = cljs.core.first(arglist__10917);
arglist__10917 = cljs.core.next(arglist__10917);
var h = cljs.core.first(arglist__10917);
var fs = cljs.core.rest(arglist__10917);
return G__10909__delegate(f,g,h,fs);
});
G__10909.cljs$core$IFn$_invoke$arity$variadic = G__10909__delegate;
return G__10909;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__10918 = null;
if (arguments.length > 3) {
var G__10919__i = 0, G__10919__a = new Array(arguments.length -  3);
while (G__10919__i < G__10919__a.length) {G__10919__a[G__10919__i] = arguments[G__10919__i + 3]; ++G__10919__i;}
G__10918 = new cljs.core.IndexedSeq(G__10919__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10918);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10920 = cljs.core.next(coll);
coll = G__10920;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10921 = (n - (1));
var G__10922 = cljs.core.next(coll);
n = G__10921;
coll = G__10922;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10926 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10926,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10926,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10926,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10934 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__10935_10941 = cljs.core.first(coll);
var G__10936_10942 = writer;
var G__10937_10943 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10935_10941,G__10936_10942,G__10937_10943) : print_one.call(null,G__10935_10941,G__10936_10942,G__10937_10943));
} else {
}

var coll_10944__$1 = cljs.core.next(coll);
var n_10945 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10944__$1) && (((n_10945 == null)) || (!((n_10945 === (0)))))){
cljs.core._write(writer,sep);

var G__10938_10946 = cljs.core.first(coll_10944__$1);
var G__10939_10947 = writer;
var G__10940_10948 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10938_10946,G__10939_10947,G__10940_10948) : print_one.call(null,G__10938_10946,G__10939_10947,G__10940_10948));

var G__10949 = cljs.core.next(coll_10944__$1);
var G__10950 = (n_10945 - (1));
coll_10944__$1 = G__10949;
n_10945 = G__10950;
continue;
} else {
if((cljs.core.seq(coll_10944__$1)) && ((n_10945 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10934;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__10955 = cljs.core.seq(ss);
var chunk__10956 = null;
var count__10957 = (0);
var i__10958 = (0);
while(true){
if((i__10958 < count__10957)){
var s = chunk__10956.cljs$core$IIndexed$_nth$arity$2(null,i__10958);
cljs.core._write(writer,s);

var G__10959 = seq__10955;
var G__10960 = chunk__10956;
var G__10961 = count__10957;
var G__10962 = (i__10958 + (1));
seq__10955 = G__10959;
chunk__10956 = G__10960;
count__10957 = G__10961;
i__10958 = G__10962;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10955);
if(temp__4126__auto__){
var seq__10955__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10955__$1)){
var c__4542__auto__ = cljs.core.chunk_first(seq__10955__$1);
var G__10963 = cljs.core.chunk_rest(seq__10955__$1);
var G__10964 = c__4542__auto__;
var G__10965 = cljs.core.count(c__4542__auto__);
var G__10966 = (0);
seq__10955 = G__10963;
chunk__10956 = G__10964;
count__10957 = G__10965;
i__10958 = G__10966;
continue;
} else {
var s = cljs.core.first(seq__10955__$1);
cljs.core._write(writer,s);

var G__10967 = cljs.core.next(seq__10955__$1);
var G__10968 = null;
var G__10969 = (0);
var G__10970 = (0);
seq__10955 = G__10967;
chunk__10956 = G__10968;
count__10957 = G__10969;
i__10958 = G__10970;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10971__i = 0, G__10971__a = new Array(arguments.length -  1);
while (G__10971__i < G__10971__a.length) {G__10971__a[G__10971__i] = arguments[G__10971__i + 1]; ++G__10971__i;}
  ss = new cljs.core.IndexedSeq(G__10971__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__10972){
var writer = cljs.core.first(arglist__10972);
var ss = cljs.core.rest(arglist__10972);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10974 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10974;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10977 = "[\\\\\"\b\f\n\r\t]";
var G__10978 = "g";
return RegExp(G__10977,G__10978);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3743__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3743__auto__)){
var and__3743__auto____$1 = (function (){var G__10992 = obj;
if(G__10992){
var bit__4436__auto__ = (G__10992.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4436__auto__) || (G__10992.cljs$core$IMeta$)){
return true;
} else {
if((!G__10992.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10992);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10992);
}
})();
if(and__3743__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10993 = obj;
if(G__10993){
var bit__4429__auto__ = (G__10993.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4429__auto__) || (G__10993.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10994 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10995 = pr_writer;
var G__10996 = writer;
var G__10997 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10994,G__10995,G__10996,G__10997) : cljs.core.print_map.call(null,G__10994,G__10995,G__10996,G__10997));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10998 = obj;
return goog.isString(G__10998);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__11000 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__11000;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10999 = obj;
if(G__10999){
var bit__4436__auto__ = (G__10999.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4436__auto__) || (G__10999.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10999.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10999);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10999);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__11005 = cljs.core.seq(cljs.core.next(objs));
var chunk__11006 = null;
var count__11007 = (0);
var i__11008 = (0);
while(true){
if((i__11008 < count__11007)){
var obj = chunk__11006.cljs$core$IIndexed$_nth$arity$2(null,i__11008);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11009 = seq__11005;
var G__11010 = chunk__11006;
var G__11011 = count__11007;
var G__11012 = (i__11008 + (1));
seq__11005 = G__11009;
chunk__11006 = G__11010;
count__11007 = G__11011;
i__11008 = G__11012;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11005);
if(temp__4126__auto__){
var seq__11005__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11005__$1)){
var c__4542__auto__ = cljs.core.chunk_first(seq__11005__$1);
var G__11013 = cljs.core.chunk_rest(seq__11005__$1);
var G__11014 = c__4542__auto__;
var G__11015 = cljs.core.count(c__4542__auto__);
var G__11016 = (0);
seq__11005 = G__11013;
chunk__11006 = G__11014;
count__11007 = G__11015;
i__11008 = G__11016;
continue;
} else {
var obj = cljs.core.first(seq__11005__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11017 = cljs.core.next(seq__11005__$1);
var G__11018 = null;
var G__11019 = (0);
var G__11020 = (0);
seq__11005 = G__11017;
chunk__11006 = G__11018;
count__11007 = G__11019;
i__11008 = G__11020;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11021__i = 0, G__11021__a = new Array(arguments.length -  0);
while (G__11021__i < G__11021__a.length) {G__11021__a[G__11021__i] = arguments[G__11021__i + 0]; ++G__11021__i;}
  objs = new cljs.core.IndexedSeq(G__11021__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__11022){
var objs = cljs.core.seq(arglist__11022);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11023__i = 0, G__11023__a = new Array(arguments.length -  0);
while (G__11023__i < G__11023__a.length) {G__11023__a[G__11023__i] = arguments[G__11023__i + 0]; ++G__11023__i;}
  objs = new cljs.core.IndexedSeq(G__11023__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__11024){
var objs = cljs.core.seq(arglist__11024);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11025__i = 0, G__11025__a = new Array(arguments.length -  0);
while (G__11025__i < G__11025__a.length) {G__11025__a[G__11025__i] = arguments[G__11025__i + 0]; ++G__11025__i;}
  objs = new cljs.core.IndexedSeq(G__11025__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__11026){
var objs = cljs.core.seq(arglist__11026);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11027__i = 0, G__11027__a = new Array(arguments.length -  0);
while (G__11027__i < G__11027__a.length) {G__11027__a[G__11027__i] = arguments[G__11027__i + 0]; ++G__11027__i;}
  objs = new cljs.core.IndexedSeq(G__11027__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__11028){
var objs = cljs.core.seq(arglist__11028);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11029__i = 0, G__11029__a = new Array(arguments.length -  0);
while (G__11029__i < G__11029__a.length) {G__11029__a[G__11029__i] = arguments[G__11029__i + 0]; ++G__11029__i;}
  objs = new cljs.core.IndexedSeq(G__11029__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__11030){
var objs = cljs.core.seq(arglist__11030);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11031__i = 0, G__11031__a = new Array(arguments.length -  0);
while (G__11031__i < G__11031__a.length) {G__11031__a[G__11031__i] = arguments[G__11031__i + 0]; ++G__11031__i;}
  objs = new cljs.core.IndexedSeq(G__11031__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__11032){
var objs = cljs.core.seq(arglist__11032);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11033__i = 0, G__11033__a = new Array(arguments.length -  0);
while (G__11033__i < G__11033__a.length) {G__11033__a[G__11033__i] = arguments[G__11033__i + 0]; ++G__11033__i;}
  objs = new cljs.core.IndexedSeq(G__11033__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__11034){
var objs = cljs.core.seq(arglist__11034);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11035__i = 0, G__11035__a = new Array(arguments.length -  0);
while (G__11035__i < G__11035__a.length) {G__11035__a[G__11035__i] = arguments[G__11035__i + 0]; ++G__11035__i;}
  objs = new cljs.core.IndexedSeq(G__11035__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__11036){
var objs = cljs.core.seq(arglist__11036);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__11043_11049 = cljs.core.key(e);
var G__11044_11050 = w;
var G__11045_11051 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11043_11049,G__11044_11050,G__11045_11051) : print_one.call(null,G__11043_11049,G__11044_11050,G__11045_11051));

cljs.core._write(w," ");

var G__11046 = cljs.core.val(e);
var G__11047 = w;
var G__11048 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11046,G__11047,G__11048) : print_one.call(null,G__11046,G__11047,G__11048));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__11052__i = 0, G__11052__a = new Array(arguments.length -  2);
while (G__11052__i < G__11052__a.length) {G__11052__a[G__11052__i] = arguments[G__11052__i + 2]; ++G__11052__i;}
  args = new cljs.core.IndexedSeq(G__11052__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__11053){
var iref = cljs.core.first(arglist__11053);
arglist__11053 = cljs.core.next(arglist__11053);
var f = cljs.core.first(arglist__11053);
var args = cljs.core.rest(arglist__11053);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__11056 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11056) : cljs.core.atom.call(null,G__11056));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__11058 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11058) : cljs.core.deref.call(null,G__11058));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__11059_SHARP_,p2__11060_SHARP_){
var ret = (function (){var G__11063 = p1__11059_SHARP_;
var G__11064 = p2__11060_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11063,G__11064) : rf.call(null,G__11063,G__11064));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__11067 = null;
var G__11067__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11067__1 = (function (result){
var G__11066 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11066) : rf.call(null,G__11066));
});
var G__11067__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__11067 = function(result,input){
switch(arguments.length){
case 0:
return G__11067__0.call(this);
case 1:
return G__11067__1.call(this,result);
case 2:
return G__11067__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11067.cljs$core$IFn$_invoke$arity$0 = G__11067__0;
G__11067.cljs$core$IFn$_invoke$arity$1 = G__11067__1;
G__11067.cljs$core$IFn$_invoke$arity$2 = G__11067__2;
return G__11067;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__11076 = null;
var G__11076__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11076__1 = (function (result){
var G__11072 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11072) : rf.call(null,G__11072));
});
var G__11076__2 = (function (result,input){
var prior = (function (){var G__11073 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11073) : cljs.core.deref.call(null,G__11073));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__11074 = result;
var G__11075 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11074,G__11075) : rf.call(null,G__11074,G__11075));
}
});
G__11076 = function(result,input){
switch(arguments.length){
case 0:
return G__11076__0.call(this);
case 1:
return G__11076__1.call(this,result);
case 2:
return G__11076__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11076.cljs$core$IFn$_invoke$arity$0 = G__11076__0;
G__11076.cljs$core$IFn$_invoke$arity$1 = G__11076__1;
G__11076.cljs$core$IFn$_invoke$arity$2 = G__11076__2;
return G__11076;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4733__auto__ = this;
return cljs.core.es6_iterator(this__4733__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11078_SHARP_,p2__11077_SHARP_){
var G__11080 = p2__11077_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11080) : proc.call(null,G__11080));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj11082 = {};
return obj11082;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3743__auto__ = x;
if(and__3743__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3743__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4399__auto__ = (((x == null))?null:x);
return (function (){var or__3755__auto__ = (cljs.core._clj__GT_js[(function (){var G__11086 = x__4399__auto__;
return goog.typeOf(G__11086);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3743__auto__ = x;
if(and__3743__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3743__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4399__auto__ = (((x == null))?null:x);
return (function (){var or__3755__auto__ = (cljs.core._key__GT_js[(function (){var G__11090 = x__4399__auto__;
return goog.typeOf(G__11090);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__11093 = k;
if(G__11093){
var bit__4436__auto__ = null;
if(cljs.core.truth_((function (){var or__3755__auto__ = bit__4436__auto__;
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return G__11093.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11093.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11093);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11093);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__11094 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11094) : cljs.core.clj__GT_js.call(null,G__11094));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11110 = x;
if(G__11110){
var bit__4436__auto__ = null;
if(cljs.core.truth_((function (){var or__3755__auto__ = bit__4436__auto__;
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return G__11110.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11110.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11110);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11110);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11112 = {};
return obj11112;
})();
var seq__11113_11123 = cljs.core.seq(x);
var chunk__11114_11124 = null;
var count__11115_11125 = (0);
var i__11116_11126 = (0);
while(true){
if((i__11116_11126 < count__11115_11125)){
var vec__11117_11127 = chunk__11114_11124.cljs$core$IIndexed$_nth$arity$2(null,i__11116_11126);
var k_11128 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11117_11127,(0),null);
var v_11129 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11117_11127,(1),null);
(m[cljs.core.key__GT_js(k_11128)] = clj__GT_js(v_11129));

var G__11130 = seq__11113_11123;
var G__11131 = chunk__11114_11124;
var G__11132 = count__11115_11125;
var G__11133 = (i__11116_11126 + (1));
seq__11113_11123 = G__11130;
chunk__11114_11124 = G__11131;
count__11115_11125 = G__11132;
i__11116_11126 = G__11133;
continue;
} else {
var temp__4126__auto___11134 = cljs.core.seq(seq__11113_11123);
if(temp__4126__auto___11134){
var seq__11113_11135__$1 = temp__4126__auto___11134;
if(cljs.core.chunked_seq_QMARK_(seq__11113_11135__$1)){
var c__4542__auto___11136 = cljs.core.chunk_first(seq__11113_11135__$1);
var G__11137 = cljs.core.chunk_rest(seq__11113_11135__$1);
var G__11138 = c__4542__auto___11136;
var G__11139 = cljs.core.count(c__4542__auto___11136);
var G__11140 = (0);
seq__11113_11123 = G__11137;
chunk__11114_11124 = G__11138;
count__11115_11125 = G__11139;
i__11116_11126 = G__11140;
continue;
} else {
var vec__11118_11141 = cljs.core.first(seq__11113_11135__$1);
var k_11142 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11118_11141,(0),null);
var v_11143 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11118_11141,(1),null);
(m[cljs.core.key__GT_js(k_11142)] = clj__GT_js(v_11143));

var G__11144 = cljs.core.next(seq__11113_11135__$1);
var G__11145 = null;
var G__11146 = (0);
var G__11147 = (0);
seq__11113_11123 = G__11144;
chunk__11114_11124 = G__11145;
count__11115_11125 = G__11146;
i__11116_11126 = G__11147;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11119_11148 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__11120_11149 = null;
var count__11121_11150 = (0);
var i__11122_11151 = (0);
while(true){
if((i__11122_11151 < count__11121_11150)){
var x_11152__$1 = chunk__11120_11149.cljs$core$IIndexed$_nth$arity$2(null,i__11122_11151);
arr.push(x_11152__$1);

var G__11153 = seq__11119_11148;
var G__11154 = chunk__11120_11149;
var G__11155 = count__11121_11150;
var G__11156 = (i__11122_11151 + (1));
seq__11119_11148 = G__11153;
chunk__11120_11149 = G__11154;
count__11121_11150 = G__11155;
i__11122_11151 = G__11156;
continue;
} else {
var temp__4126__auto___11157 = cljs.core.seq(seq__11119_11148);
if(temp__4126__auto___11157){
var seq__11119_11158__$1 = temp__4126__auto___11157;
if(cljs.core.chunked_seq_QMARK_(seq__11119_11158__$1)){
var c__4542__auto___11159 = cljs.core.chunk_first(seq__11119_11158__$1);
var G__11160 = cljs.core.chunk_rest(seq__11119_11158__$1);
var G__11161 = c__4542__auto___11159;
var G__11162 = cljs.core.count(c__4542__auto___11159);
var G__11163 = (0);
seq__11119_11148 = G__11160;
chunk__11120_11149 = G__11161;
count__11121_11150 = G__11162;
i__11122_11151 = G__11163;
continue;
} else {
var x_11164__$1 = cljs.core.first(seq__11119_11158__$1);
arr.push(x_11164__$1);

var G__11165 = cljs.core.next(seq__11119_11158__$1);
var G__11166 = null;
var G__11167 = (0);
var G__11168 = (0);
seq__11119_11148 = G__11165;
chunk__11120_11149 = G__11166;
count__11121_11150 = G__11167;
i__11122_11151 = G__11168;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj11170 = {};
return obj11170;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3743__auto__ = x;
if(and__3743__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3743__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4399__auto__ = (((x == null))?null:x);
return (function (){var or__3755__auto__ = (cljs.core._js__GT_clj[(function (){var G__11174 = x__4399__auto__;
return goog.typeOf(G__11174);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__11231__delegate = function (x,opts){
var map__11204 = opts;
var map__11204__$1 = ((cljs.core.seq_QMARK_(map__11204))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11204):map__11204);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11204__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__11204,map__11204__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__11220 = x__$1;
if(G__11220){
var bit__4436__auto__ = null;
if(cljs.core.truth_((function (){var or__3755__auto__ = bit__4436__auto__;
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return G__11220.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__11220.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11220);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11220);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4511__auto__ = ((function (map__11204,map__11204__$1,keywordize_keys,keyfn){
return (function iter__11221(s__11222){
return (new cljs.core.LazySeq(null,((function (map__11204,map__11204__$1,keywordize_keys,keyfn){
return (function (){
var s__11222__$1 = s__11222;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__11222__$1);
if(temp__4126__auto__){
var s__11222__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__11222__$2)){
var c__4509__auto__ = cljs.core.chunk_first(s__11222__$2);
var size__4510__auto__ = cljs.core.count(c__4509__auto__);
var b__11224 = cljs.core.chunk_buffer(size__4510__auto__);
if((function (){var i__11223 = (0);
while(true){
if((i__11223 < size__4510__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4509__auto__,i__11223);
cljs.core.chunk_append(b__11224,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11229 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11229) : keyfn.call(null,G__11229));
})(),thisfn((x__$1[k]))], null));

var G__11232 = (i__11223 + (1));
i__11223 = G__11232;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__11224),iter__11221(cljs.core.chunk_rest(s__11222__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__11224),null);
}
} else {
var k = cljs.core.first(s__11222__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11230 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11230) : keyfn.call(null,G__11230));
})(),thisfn((x__$1[k]))], null),iter__11221(cljs.core.rest(s__11222__$2)));
}
} else {
return null;
}
break;
}
});})(map__11204,map__11204__$1,keywordize_keys,keyfn))
,null,null));
});})(map__11204,map__11204__$1,keywordize_keys,keyfn))
;
return iter__4511__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__11204,map__11204__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__11231 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__11233__i = 0, G__11233__a = new Array(arguments.length -  1);
while (G__11233__i < G__11233__a.length) {G__11233__a[G__11233__i] = arguments[G__11233__i + 1]; ++G__11233__i;}
  opts = new cljs.core.IndexedSeq(G__11233__a,0);
} 
return G__11231__delegate.call(this,x,opts);};
G__11231.cljs$lang$maxFixedArity = 1;
G__11231.cljs$lang$applyTo = (function (arglist__11234){
var x = cljs.core.first(arglist__11234);
var opts = cljs.core.rest(arglist__11234);
return G__11231__delegate(x,opts);
});
G__11231.cljs$core$IFn$_invoke$arity$variadic = G__11231__delegate;
return G__11231;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__11235 = null;
if (arguments.length > 1) {
var G__11236__i = 0, G__11236__a = new Array(arguments.length -  1);
while (G__11236__i < G__11236__a.length) {G__11236__a[G__11236__i] = arguments[G__11236__i + 1]; ++G__11236__i;}
G__11235 = new cljs.core.IndexedSeq(G__11236__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__11239 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11239) : cljs.core.atom.call(null,G__11239));
})();
return ((function (mem){
return (function() { 
var G__11241__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__11240 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11240) : cljs.core.deref.call(null,G__11240));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__11241 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11242__i = 0, G__11242__a = new Array(arguments.length -  0);
while (G__11242__i < G__11242__a.length) {G__11242__a[G__11242__i] = arguments[G__11242__i + 0]; ++G__11242__i;}
  args = new cljs.core.IndexedSeq(G__11242__a,0);
} 
return G__11241__delegate.call(this,args);};
G__11241.cljs$lang$maxFixedArity = 0;
G__11241.cljs$lang$applyTo = (function (arglist__11243){
var args = cljs.core.seq(arglist__11243);
return G__11241__delegate(args);
});
G__11241.cljs$core$IFn$_invoke$arity$variadic = G__11241__delegate;
return G__11241;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__11245 = ret;
f = G__11245;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__11246__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__11246 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11247__i = 0, G__11247__a = new Array(arguments.length -  1);
while (G__11247__i < G__11247__a.length) {G__11247__a[G__11247__i] = arguments[G__11247__i + 1]; ++G__11247__i;}
  args = new cljs.core.IndexedSeq(G__11247__a,0);
} 
return G__11246__delegate.call(this,f,args);};
G__11246.cljs$lang$maxFixedArity = 1;
G__11246.cljs$lang$applyTo = (function (arglist__11248){
var f = cljs.core.first(arglist__11248);
var args = cljs.core.rest(arglist__11248);
return G__11246__delegate(f,args);
});
G__11246.cljs$core$IFn$_invoke$arity$variadic = G__11246__delegate;
return G__11246;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__11249 = null;
if (arguments.length > 1) {
var G__11250__i = 0, G__11250__a = new Array(arguments.length -  1);
while (G__11250__i < G__11250__a.length) {G__11250__a[G__11250__i] = arguments[G__11250__i + 1]; ++G__11250__i;}
G__11249 = new cljs.core.IndexedSeq(G__11250__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__11253 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11253) : Math.floor.call(null,G__11253));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11255 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11255) : f.call(null,G__11255));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11257 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11257) : cljs.core.atom.call(null,G__11257));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11258__i = 0, G__11258__a = new Array(arguments.length -  1);
while (G__11258__i < G__11258__a.length) {G__11258__a[G__11258__i] = arguments[G__11258__i + 1]; ++G__11258__i;}
  args = new cljs.core.IndexedSeq(G__11258__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11259){
var f = cljs.core.first(arglist__11259);
var args = cljs.core.rest(arglist__11259);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11324 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11324) : cljs.core.deref.call(null,G__11324));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3755__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
var and__3743__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3743__auto__){
var and__3743__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3743__auto____$1){
var and__3743__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3743__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__11349 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__11347 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__11347) : child.call(null,G__11347));
})(),(function (){var G__11348 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__11348) : parent.call(null,G__11348));
})());
var G__11350 = (i + (1));
ret = G__11349;
i = G__11350;
continue;
}
break;
}
} else {
return and__3743__auto____$2;
}
} else {
return and__3743__auto____$1;
}
} else {
return and__3743__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__11354 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11354) : cljs.core.deref.call(null,G__11354));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__11358 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11358) : cljs.core.deref.call(null,G__11358));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11362 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11362) : cljs.core.deref.call(null,G__11362));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11371 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11371) : targets.call(null,G__11371));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11372 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11372) : sources.call(null,G__11372));
})()));
});})(tp,td,ta))
;
var or__3755__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11376 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11376) : tp.call(null,G__11376));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11377 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11377) : ta.call(null,G__11377));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11378 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11378) : ta.call(null,G__11378));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11385 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11385) : parentMap.call(null,G__11385));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11386 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11386) : parentMap.call(null,G__11386));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11379_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11379_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11379_SHARP_),cljs.core.second(p1__11379_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11387 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11387) : parentMap.call(null,G__11387));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11380_SHARP_,p2__11381_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11380_SHARP_,p2__11381_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11390 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11390) : cljs.core.deref.call(null,G__11390));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11391 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11391) : cljs.core.deref.call(null,G__11391));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11407 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11407) : cljs.core.deref.call(null,G__11407));
})().call(null,x);
var or__3755__auto__ = (cljs.core.truth_((function (){var and__3743__auto__ = xprefs;
if(cljs.core.truth_(and__3743__auto__)){
var G__11409 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11409) : xprefs.call(null,G__11409));
} else {
return and__3743__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11410 = cljs.core.rest(ps);
ps = G__11410;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3755__auto____$1)){
return or__3755__auto____$1;
} else {
var or__3755__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11411 = cljs.core.rest(ps);
ps = G__11411;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3755__auto____$2)){
return or__3755__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3755__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3755__auto__)){
return or__3755__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11425){
var vec__11426 = p__11425;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11426,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11426,(1),null);
var e = vec__11426;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11427 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11427) : cljs.core.deref.call(null,G__11427));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3755__auto__ = (be == null);
if(or__3755__auto__){
return or__3755__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11428 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11428) : cljs.core.deref.call(null,G__11428));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11429 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11429) : cljs.core.deref.call(null,G__11429));
})(),(function (){var G__11430 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11430) : cljs.core.deref.call(null,G__11430));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11432 = {};
return obj11432;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3743__auto__ = mf;
if(and__3743__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3743__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4399__auto__ = (((mf == null))?null:mf);
return (function (){var or__3755__auto__ = (cljs.core._reset[(function (){var G__11436 = x__4399__auto__;
return goog.typeOf(G__11436);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._reset["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3743__auto__ = mf;
if(and__3743__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3743__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4399__auto__ = (((mf == null))?null:mf);
return (function (){var or__3755__auto__ = (cljs.core._add_method[(function (){var G__11440 = x__4399__auto__;
return goog.typeOf(G__11440);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._add_method["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3743__auto__ = mf;
if(and__3743__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3743__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4399__auto__ = (((mf == null))?null:mf);
return (function (){var or__3755__auto__ = (cljs.core._remove_method[(function (){var G__11444 = x__4399__auto__;
return goog.typeOf(G__11444);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3743__auto__ = mf;
if(and__3743__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3743__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4399__auto__ = (((mf == null))?null:mf);
return (function (){var or__3755__auto__ = (cljs.core._prefer_method[(function (){var G__11448 = x__4399__auto__;
return goog.typeOf(G__11448);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3743__auto__ = mf;
if(and__3743__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3743__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4399__auto__ = (((mf == null))?null:mf);
return (function (){var or__3755__auto__ = (cljs.core._get_method[(function (){var G__11452 = x__4399__auto__;
return goog.typeOf(G__11452);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._get_method["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3743__auto__ = mf;
if(and__3743__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3743__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4399__auto__ = (((mf == null))?null:mf);
return (function (){var or__3755__auto__ = (cljs.core._methods[(function (){var G__11456 = x__4399__auto__;
return goog.typeOf(G__11456);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._methods["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3743__auto__ = mf;
if(and__3743__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3743__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4399__auto__ = (((mf == null))?null:mf);
return (function (){var or__3755__auto__ = (cljs.core._prefers[(function (){var G__11460 = x__4399__auto__;
return goog.typeOf(G__11460);
})()]);
if(or__3755__auto__){
return or__3755__auto__;
} else {
var or__3755__auto____$1 = (cljs.core._prefers["_"]);
if(or__3755__auto____$1){
return or__3755__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11462 = this$__$1;
return goog.getUid(G__11462);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11463 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11463) : cljs.core.deref.call(null,G__11463));
})(),(function (){var G__11464 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11464) : cljs.core.deref.call(null,G__11464));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11465 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11465) : cljs.core.deref.call(null,G__11465));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11466 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11466) : cljs.core.deref.call(null,G__11466));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11467 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11467) : cljs.core.deref.call(null,G__11467));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11468 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11468) : cljs.core.deref.call(null,G__11468));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12309 = null;
var G__12309__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12309__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11469 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11469) : self__.dispatch_fn.call(null,G__11469));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11470 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11470) : target_fn.call(null,G__11470));
});
var G__12309__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11471 = a;
var G__11472 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11471,G__11472) : self__.dispatch_fn.call(null,G__11471,G__11472));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11473 = a;
var G__11474 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11473,G__11474) : target_fn.call(null,G__11473,G__11474));
});
var G__12309__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11475 = a;
var G__11476 = b;
var G__11477 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11475,G__11476,G__11477) : self__.dispatch_fn.call(null,G__11475,G__11476,G__11477));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11478 = a;
var G__11479 = b;
var G__11480 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11478,G__11479,G__11480) : target_fn.call(null,G__11478,G__11479,G__11480));
});
var G__12309__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11481 = a;
var G__11482 = b;
var G__11483 = c;
var G__11484 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11481,G__11482,G__11483,G__11484) : self__.dispatch_fn.call(null,G__11481,G__11482,G__11483,G__11484));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11485 = a;
var G__11486 = b;
var G__11487 = c;
var G__11488 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11485,G__11486,G__11487,G__11488) : target_fn.call(null,G__11485,G__11486,G__11487,G__11488));
});
var G__12309__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11489 = a;
var G__11490 = b;
var G__11491 = c;
var G__11492 = d;
var G__11493 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11489,G__11490,G__11491,G__11492,G__11493) : self__.dispatch_fn.call(null,G__11489,G__11490,G__11491,G__11492,G__11493));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11494 = a;
var G__11495 = b;
var G__11496 = c;
var G__11497 = d;
var G__11498 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11494,G__11495,G__11496,G__11497,G__11498) : target_fn.call(null,G__11494,G__11495,G__11496,G__11497,G__11498));
});
var G__12309__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11499 = a;
var G__11500 = b;
var G__11501 = c;
var G__11502 = d;
var G__11503 = e;
var G__11504 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11499,G__11500,G__11501,G__11502,G__11503,G__11504) : self__.dispatch_fn.call(null,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11505 = a;
var G__11506 = b;
var G__11507 = c;
var G__11508 = d;
var G__11509 = e;
var G__11510 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11505,G__11506,G__11507,G__11508,G__11509,G__11510) : target_fn.call(null,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510));
});
var G__12309__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11511 = a;
var G__11512 = b;
var G__11513 = c;
var G__11514 = d;
var G__11515 = e;
var G__11516 = f;
var G__11517 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517) : self__.dispatch_fn.call(null,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11518 = a;
var G__11519 = b;
var G__11520 = c;
var G__11521 = d;
var G__11522 = e;
var G__11523 = f;
var G__11524 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524) : target_fn.call(null,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524));
});
var G__12309__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11525 = a;
var G__11526 = b;
var G__11527 = c;
var G__11528 = d;
var G__11529 = e;
var G__11530 = f;
var G__11531 = g;
var G__11532 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532) : self__.dispatch_fn.call(null,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11533 = a;
var G__11534 = b;
var G__11535 = c;
var G__11536 = d;
var G__11537 = e;
var G__11538 = f;
var G__11539 = g;
var G__11540 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11533,G__11534,G__11535,G__11536,G__11537,G__11538,G__11539,G__11540) : target_fn.call(null,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538,G__11539,G__11540));
});
var G__12309__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11541 = a;
var G__11542 = b;
var G__11543 = c;
var G__11544 = d;
var G__11545 = e;
var G__11546 = f;
var G__11547 = g;
var G__11548 = h;
var G__11549 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549) : self__.dispatch_fn.call(null,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11550 = a;
var G__11551 = b;
var G__11552 = c;
var G__11553 = d;
var G__11554 = e;
var G__11555 = f;
var G__11556 = g;
var G__11557 = h;
var G__11558 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558) : target_fn.call(null,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558));
});
var G__12309__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11559 = a;
var G__11560 = b;
var G__11561 = c;
var G__11562 = d;
var G__11563 = e;
var G__11564 = f;
var G__11565 = g;
var G__11566 = h;
var G__11567 = i;
var G__11568 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568) : self__.dispatch_fn.call(null,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11569 = a;
var G__11570 = b;
var G__11571 = c;
var G__11572 = d;
var G__11573 = e;
var G__11574 = f;
var G__11575 = g;
var G__11576 = h;
var G__11577 = i;
var G__11578 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578) : target_fn.call(null,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578));
});
var G__12309__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11579 = a;
var G__11580 = b;
var G__11581 = c;
var G__11582 = d;
var G__11583 = e;
var G__11584 = f;
var G__11585 = g;
var G__11586 = h;
var G__11587 = i;
var G__11588 = j;
var G__11589 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589) : self__.dispatch_fn.call(null,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11590 = a;
var G__11591 = b;
var G__11592 = c;
var G__11593 = d;
var G__11594 = e;
var G__11595 = f;
var G__11596 = g;
var G__11597 = h;
var G__11598 = i;
var G__11599 = j;
var G__11600 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11590,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600) : target_fn.call(null,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600));
});
var G__12309__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11601 = a;
var G__11602 = b;
var G__11603 = c;
var G__11604 = d;
var G__11605 = e;
var G__11606 = f;
var G__11607 = g;
var G__11608 = h;
var G__11609 = i;
var G__11610 = j;
var G__11611 = k;
var G__11612 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612) : self__.dispatch_fn.call(null,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11613 = a;
var G__11614 = b;
var G__11615 = c;
var G__11616 = d;
var G__11617 = e;
var G__11618 = f;
var G__11619 = g;
var G__11620 = h;
var G__11621 = i;
var G__11622 = j;
var G__11623 = k;
var G__11624 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624) : target_fn.call(null,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624));
});
var G__12309__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11625 = a;
var G__11626 = b;
var G__11627 = c;
var G__11628 = d;
var G__11629 = e;
var G__11630 = f;
var G__11631 = g;
var G__11632 = h;
var G__11633 = i;
var G__11634 = j;
var G__11635 = k;
var G__11636 = l;
var G__11637 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637) : self__.dispatch_fn.call(null,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11638 = a;
var G__11639 = b;
var G__11640 = c;
var G__11641 = d;
var G__11642 = e;
var G__11643 = f;
var G__11644 = g;
var G__11645 = h;
var G__11646 = i;
var G__11647 = j;
var G__11648 = k;
var G__11649 = l;
var G__11650 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650) : target_fn.call(null,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650));
});
var G__12309__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11651 = a;
var G__11652 = b;
var G__11653 = c;
var G__11654 = d;
var G__11655 = e;
var G__11656 = f;
var G__11657 = g;
var G__11658 = h;
var G__11659 = i;
var G__11660 = j;
var G__11661 = k;
var G__11662 = l;
var G__11663 = m;
var G__11664 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664) : self__.dispatch_fn.call(null,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11665 = a;
var G__11666 = b;
var G__11667 = c;
var G__11668 = d;
var G__11669 = e;
var G__11670 = f;
var G__11671 = g;
var G__11672 = h;
var G__11673 = i;
var G__11674 = j;
var G__11675 = k;
var G__11676 = l;
var G__11677 = m;
var G__11678 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678) : target_fn.call(null,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678));
});
var G__12309__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11679 = a;
var G__11680 = b;
var G__11681 = c;
var G__11682 = d;
var G__11683 = e;
var G__11684 = f;
var G__11685 = g;
var G__11686 = h;
var G__11687 = i;
var G__11688 = j;
var G__11689 = k;
var G__11690 = l;
var G__11691 = m;
var G__11692 = n;
var G__11693 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693) : self__.dispatch_fn.call(null,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11694 = a;
var G__11695 = b;
var G__11696 = c;
var G__11697 = d;
var G__11698 = e;
var G__11699 = f;
var G__11700 = g;
var G__11701 = h;
var G__11702 = i;
var G__11703 = j;
var G__11704 = k;
var G__11705 = l;
var G__11706 = m;
var G__11707 = n;
var G__11708 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11694,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708) : target_fn.call(null,G__11694,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708));
});
var G__12309__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11709 = a;
var G__11710 = b;
var G__11711 = c;
var G__11712 = d;
var G__11713 = e;
var G__11714 = f;
var G__11715 = g;
var G__11716 = h;
var G__11717 = i;
var G__11718 = j;
var G__11719 = k;
var G__11720 = l;
var G__11721 = m;
var G__11722 = n;
var G__11723 = o;
var G__11724 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724) : self__.dispatch_fn.call(null,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11725 = a;
var G__11726 = b;
var G__11727 = c;
var G__11728 = d;
var G__11729 = e;
var G__11730 = f;
var G__11731 = g;
var G__11732 = h;
var G__11733 = i;
var G__11734 = j;
var G__11735 = k;
var G__11736 = l;
var G__11737 = m;
var G__11738 = n;
var G__11739 = o;
var G__11740 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740) : target_fn.call(null,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740));
});
var G__12309__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11741 = a;
var G__11742 = b;
var G__11743 = c;
var G__11744 = d;
var G__11745 = e;
var G__11746 = f;
var G__11747 = g;
var G__11748 = h;
var G__11749 = i;
var G__11750 = j;
var G__11751 = k;
var G__11752 = l;
var G__11753 = m;
var G__11754 = n;
var G__11755 = o;
var G__11756 = p;
var G__11757 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757) : self__.dispatch_fn.call(null,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11758 = a;
var G__11759 = b;
var G__11760 = c;
var G__11761 = d;
var G__11762 = e;
var G__11763 = f;
var G__11764 = g;
var G__11765 = h;
var G__11766 = i;
var G__11767 = j;
var G__11768 = k;
var G__11769 = l;
var G__11770 = m;
var G__11771 = n;
var G__11772 = o;
var G__11773 = p;
var G__11774 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774) : target_fn.call(null,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774));
});
var G__12309__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11775 = a;
var G__11776 = b;
var G__11777 = c;
var G__11778 = d;
var G__11779 = e;
var G__11780 = f;
var G__11781 = g;
var G__11782 = h;
var G__11783 = i;
var G__11784 = j;
var G__11785 = k;
var G__11786 = l;
var G__11787 = m;
var G__11788 = n;
var G__11789 = o;
var G__11790 = p;
var G__11791 = q;
var G__11792 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792) : self__.dispatch_fn.call(null,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11793 = a;
var G__11794 = b;
var G__11795 = c;
var G__11796 = d;
var G__11797 = e;
var G__11798 = f;
var G__11799 = g;
var G__11800 = h;
var G__11801 = i;
var G__11802 = j;
var G__11803 = k;
var G__11804 = l;
var G__11805 = m;
var G__11806 = n;
var G__11807 = o;
var G__11808 = p;
var G__11809 = q;
var G__11810 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810) : target_fn.call(null,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810));
});
var G__12309__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11811 = a;
var G__11812 = b;
var G__11813 = c;
var G__11814 = d;
var G__11815 = e;
var G__11816 = f;
var G__11817 = g;
var G__11818 = h;
var G__11819 = i;
var G__11820 = j;
var G__11821 = k;
var G__11822 = l;
var G__11823 = m;
var G__11824 = n;
var G__11825 = o;
var G__11826 = p;
var G__11827 = q;
var G__11828 = r;
var G__11829 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829) : self__.dispatch_fn.call(null,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11830 = a;
var G__11831 = b;
var G__11832 = c;
var G__11833 = d;
var G__11834 = e;
var G__11835 = f;
var G__11836 = g;
var G__11837 = h;
var G__11838 = i;
var G__11839 = j;
var G__11840 = k;
var G__11841 = l;
var G__11842 = m;
var G__11843 = n;
var G__11844 = o;
var G__11845 = p;
var G__11846 = q;
var G__11847 = r;
var G__11848 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848) : target_fn.call(null,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848));
});
var G__12309__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11849 = a;
var G__11850 = b;
var G__11851 = c;
var G__11852 = d;
var G__11853 = e;
var G__11854 = f;
var G__11855 = g;
var G__11856 = h;
var G__11857 = i;
var G__11858 = j;
var G__11859 = k;
var G__11860 = l;
var G__11861 = m;
var G__11862 = n;
var G__11863 = o;
var G__11864 = p;
var G__11865 = q;
var G__11866 = r;
var G__11867 = s;
var G__11868 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868) : self__.dispatch_fn.call(null,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11869 = a;
var G__11870 = b;
var G__11871 = c;
var G__11872 = d;
var G__11873 = e;
var G__11874 = f;
var G__11875 = g;
var G__11876 = h;
var G__11877 = i;
var G__11878 = j;
var G__11879 = k;
var G__11880 = l;
var G__11881 = m;
var G__11882 = n;
var G__11883 = o;
var G__11884 = p;
var G__11885 = q;
var G__11886 = r;
var G__11887 = s;
var G__11888 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888) : target_fn.call(null,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888));
});
var G__12309__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12309 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12309__1.call(this,self__);
case 2:
return G__12309__2.call(this,self__,a);
case 3:
return G__12309__3.call(this,self__,a,b);
case 4:
return G__12309__4.call(this,self__,a,b,c);
case 5:
return G__12309__5.call(this,self__,a,b,c,d);
case 6:
return G__12309__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12309__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12309__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12309__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12309__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12309__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12309__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12309__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12309__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12309__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12309__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12309__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12309__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12309__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12309__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12309__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12309__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12309.cljs$core$IFn$_invoke$arity$1 = G__12309__1;
G__12309.cljs$core$IFn$_invoke$arity$2 = G__12309__2;
G__12309.cljs$core$IFn$_invoke$arity$3 = G__12309__3;
G__12309.cljs$core$IFn$_invoke$arity$4 = G__12309__4;
G__12309.cljs$core$IFn$_invoke$arity$5 = G__12309__5;
G__12309.cljs$core$IFn$_invoke$arity$6 = G__12309__6;
G__12309.cljs$core$IFn$_invoke$arity$7 = G__12309__7;
G__12309.cljs$core$IFn$_invoke$arity$8 = G__12309__8;
G__12309.cljs$core$IFn$_invoke$arity$9 = G__12309__9;
G__12309.cljs$core$IFn$_invoke$arity$10 = G__12309__10;
G__12309.cljs$core$IFn$_invoke$arity$11 = G__12309__11;
G__12309.cljs$core$IFn$_invoke$arity$12 = G__12309__12;
G__12309.cljs$core$IFn$_invoke$arity$13 = G__12309__13;
G__12309.cljs$core$IFn$_invoke$arity$14 = G__12309__14;
G__12309.cljs$core$IFn$_invoke$arity$15 = G__12309__15;
G__12309.cljs$core$IFn$_invoke$arity$16 = G__12309__16;
G__12309.cljs$core$IFn$_invoke$arity$17 = G__12309__17;
G__12309.cljs$core$IFn$_invoke$arity$18 = G__12309__18;
G__12309.cljs$core$IFn$_invoke$arity$19 = G__12309__19;
G__12309.cljs$core$IFn$_invoke$arity$20 = G__12309__20;
G__12309.cljs$core$IFn$_invoke$arity$21 = G__12309__21;
G__12309.cljs$core$IFn$_invoke$arity$22 = G__12309__22;
return G__12309;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11461){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11461)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11889 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11889) : self__.dispatch_fn.call(null,G__11889));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11890 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11890) : target_fn.call(null,G__11890));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11891 = a;
var G__11892 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11891,G__11892) : self__.dispatch_fn.call(null,G__11891,G__11892));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11893 = a;
var G__11894 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11893,G__11894) : target_fn.call(null,G__11893,G__11894));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11895 = a;
var G__11896 = b;
var G__11897 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11895,G__11896,G__11897) : self__.dispatch_fn.call(null,G__11895,G__11896,G__11897));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11898 = a;
var G__11899 = b;
var G__11900 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11898,G__11899,G__11900) : target_fn.call(null,G__11898,G__11899,G__11900));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11901 = a;
var G__11902 = b;
var G__11903 = c;
var G__11904 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11901,G__11902,G__11903,G__11904) : self__.dispatch_fn.call(null,G__11901,G__11902,G__11903,G__11904));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11905 = a;
var G__11906 = b;
var G__11907 = c;
var G__11908 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11905,G__11906,G__11907,G__11908) : target_fn.call(null,G__11905,G__11906,G__11907,G__11908));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11909 = a;
var G__11910 = b;
var G__11911 = c;
var G__11912 = d;
var G__11913 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11909,G__11910,G__11911,G__11912,G__11913) : self__.dispatch_fn.call(null,G__11909,G__11910,G__11911,G__11912,G__11913));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11914 = a;
var G__11915 = b;
var G__11916 = c;
var G__11917 = d;
var G__11918 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11914,G__11915,G__11916,G__11917,G__11918) : target_fn.call(null,G__11914,G__11915,G__11916,G__11917,G__11918));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11919 = a;
var G__11920 = b;
var G__11921 = c;
var G__11922 = d;
var G__11923 = e;
var G__11924 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11919,G__11920,G__11921,G__11922,G__11923,G__11924) : self__.dispatch_fn.call(null,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11925 = a;
var G__11926 = b;
var G__11927 = c;
var G__11928 = d;
var G__11929 = e;
var G__11930 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11925,G__11926,G__11927,G__11928,G__11929,G__11930) : target_fn.call(null,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11931 = a;
var G__11932 = b;
var G__11933 = c;
var G__11934 = d;
var G__11935 = e;
var G__11936 = f;
var G__11937 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937) : self__.dispatch_fn.call(null,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11938 = a;
var G__11939 = b;
var G__11940 = c;
var G__11941 = d;
var G__11942 = e;
var G__11943 = f;
var G__11944 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944) : target_fn.call(null,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11945 = a;
var G__11946 = b;
var G__11947 = c;
var G__11948 = d;
var G__11949 = e;
var G__11950 = f;
var G__11951 = g;
var G__11952 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952) : self__.dispatch_fn.call(null,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11953 = a;
var G__11954 = b;
var G__11955 = c;
var G__11956 = d;
var G__11957 = e;
var G__11958 = f;
var G__11959 = g;
var G__11960 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960) : target_fn.call(null,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11961 = a;
var G__11962 = b;
var G__11963 = c;
var G__11964 = d;
var G__11965 = e;
var G__11966 = f;
var G__11967 = g;
var G__11968 = h;
var G__11969 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969) : self__.dispatch_fn.call(null,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11970 = a;
var G__11971 = b;
var G__11972 = c;
var G__11973 = d;
var G__11974 = e;
var G__11975 = f;
var G__11976 = g;
var G__11977 = h;
var G__11978 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978) : target_fn.call(null,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11979 = a;
var G__11980 = b;
var G__11981 = c;
var G__11982 = d;
var G__11983 = e;
var G__11984 = f;
var G__11985 = g;
var G__11986 = h;
var G__11987 = i;
var G__11988 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988) : self__.dispatch_fn.call(null,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11989 = a;
var G__11990 = b;
var G__11991 = c;
var G__11992 = d;
var G__11993 = e;
var G__11994 = f;
var G__11995 = g;
var G__11996 = h;
var G__11997 = i;
var G__11998 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998) : target_fn.call(null,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11999 = a;
var G__12000 = b;
var G__12001 = c;
var G__12002 = d;
var G__12003 = e;
var G__12004 = f;
var G__12005 = g;
var G__12006 = h;
var G__12007 = i;
var G__12008 = j;
var G__12009 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009) : self__.dispatch_fn.call(null,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12010 = a;
var G__12011 = b;
var G__12012 = c;
var G__12013 = d;
var G__12014 = e;
var G__12015 = f;
var G__12016 = g;
var G__12017 = h;
var G__12018 = i;
var G__12019 = j;
var G__12020 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020) : target_fn.call(null,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12021 = a;
var G__12022 = b;
var G__12023 = c;
var G__12024 = d;
var G__12025 = e;
var G__12026 = f;
var G__12027 = g;
var G__12028 = h;
var G__12029 = i;
var G__12030 = j;
var G__12031 = k;
var G__12032 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032) : self__.dispatch_fn.call(null,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12033 = a;
var G__12034 = b;
var G__12035 = c;
var G__12036 = d;
var G__12037 = e;
var G__12038 = f;
var G__12039 = g;
var G__12040 = h;
var G__12041 = i;
var G__12042 = j;
var G__12043 = k;
var G__12044 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044) : target_fn.call(null,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12045 = a;
var G__12046 = b;
var G__12047 = c;
var G__12048 = d;
var G__12049 = e;
var G__12050 = f;
var G__12051 = g;
var G__12052 = h;
var G__12053 = i;
var G__12054 = j;
var G__12055 = k;
var G__12056 = l;
var G__12057 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057) : self__.dispatch_fn.call(null,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12058 = a;
var G__12059 = b;
var G__12060 = c;
var G__12061 = d;
var G__12062 = e;
var G__12063 = f;
var G__12064 = g;
var G__12065 = h;
var G__12066 = i;
var G__12067 = j;
var G__12068 = k;
var G__12069 = l;
var G__12070 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12058,G__12059,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070) : target_fn.call(null,G__12058,G__12059,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12071 = a;
var G__12072 = b;
var G__12073 = c;
var G__12074 = d;
var G__12075 = e;
var G__12076 = f;
var G__12077 = g;
var G__12078 = h;
var G__12079 = i;
var G__12080 = j;
var G__12081 = k;
var G__12082 = l;
var G__12083 = m;
var G__12084 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084) : self__.dispatch_fn.call(null,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12085 = a;
var G__12086 = b;
var G__12087 = c;
var G__12088 = d;
var G__12089 = e;
var G__12090 = f;
var G__12091 = g;
var G__12092 = h;
var G__12093 = i;
var G__12094 = j;
var G__12095 = k;
var G__12096 = l;
var G__12097 = m;
var G__12098 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098) : target_fn.call(null,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12099 = a;
var G__12100 = b;
var G__12101 = c;
var G__12102 = d;
var G__12103 = e;
var G__12104 = f;
var G__12105 = g;
var G__12106 = h;
var G__12107 = i;
var G__12108 = j;
var G__12109 = k;
var G__12110 = l;
var G__12111 = m;
var G__12112 = n;
var G__12113 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113) : self__.dispatch_fn.call(null,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12114 = a;
var G__12115 = b;
var G__12116 = c;
var G__12117 = d;
var G__12118 = e;
var G__12119 = f;
var G__12120 = g;
var G__12121 = h;
var G__12122 = i;
var G__12123 = j;
var G__12124 = k;
var G__12125 = l;
var G__12126 = m;
var G__12127 = n;
var G__12128 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128) : target_fn.call(null,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12129 = a;
var G__12130 = b;
var G__12131 = c;
var G__12132 = d;
var G__12133 = e;
var G__12134 = f;
var G__12135 = g;
var G__12136 = h;
var G__12137 = i;
var G__12138 = j;
var G__12139 = k;
var G__12140 = l;
var G__12141 = m;
var G__12142 = n;
var G__12143 = o;
var G__12144 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144) : self__.dispatch_fn.call(null,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12145 = a;
var G__12146 = b;
var G__12147 = c;
var G__12148 = d;
var G__12149 = e;
var G__12150 = f;
var G__12151 = g;
var G__12152 = h;
var G__12153 = i;
var G__12154 = j;
var G__12155 = k;
var G__12156 = l;
var G__12157 = m;
var G__12158 = n;
var G__12159 = o;
var G__12160 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160) : target_fn.call(null,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12161 = a;
var G__12162 = b;
var G__12163 = c;
var G__12164 = d;
var G__12165 = e;
var G__12166 = f;
var G__12167 = g;
var G__12168 = h;
var G__12169 = i;
var G__12170 = j;
var G__12171 = k;
var G__12172 = l;
var G__12173 = m;
var G__12174 = n;
var G__12175 = o;
var G__12176 = p;
var G__12177 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177) : self__.dispatch_fn.call(null,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12178 = a;
var G__12179 = b;
var G__12180 = c;
var G__12181 = d;
var G__12182 = e;
var G__12183 = f;
var G__12184 = g;
var G__12185 = h;
var G__12186 = i;
var G__12187 = j;
var G__12188 = k;
var G__12189 = l;
var G__12190 = m;
var G__12191 = n;
var G__12192 = o;
var G__12193 = p;
var G__12194 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194) : target_fn.call(null,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12195 = a;
var G__12196 = b;
var G__12197 = c;
var G__12198 = d;
var G__12199 = e;
var G__12200 = f;
var G__12201 = g;
var G__12202 = h;
var G__12203 = i;
var G__12204 = j;
var G__12205 = k;
var G__12206 = l;
var G__12207 = m;
var G__12208 = n;
var G__12209 = o;
var G__12210 = p;
var G__12211 = q;
var G__12212 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212) : self__.dispatch_fn.call(null,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12213 = a;
var G__12214 = b;
var G__12215 = c;
var G__12216 = d;
var G__12217 = e;
var G__12218 = f;
var G__12219 = g;
var G__12220 = h;
var G__12221 = i;
var G__12222 = j;
var G__12223 = k;
var G__12224 = l;
var G__12225 = m;
var G__12226 = n;
var G__12227 = o;
var G__12228 = p;
var G__12229 = q;
var G__12230 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230) : target_fn.call(null,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12231 = a;
var G__12232 = b;
var G__12233 = c;
var G__12234 = d;
var G__12235 = e;
var G__12236 = f;
var G__12237 = g;
var G__12238 = h;
var G__12239 = i;
var G__12240 = j;
var G__12241 = k;
var G__12242 = l;
var G__12243 = m;
var G__12244 = n;
var G__12245 = o;
var G__12246 = p;
var G__12247 = q;
var G__12248 = r;
var G__12249 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249) : self__.dispatch_fn.call(null,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12250 = a;
var G__12251 = b;
var G__12252 = c;
var G__12253 = d;
var G__12254 = e;
var G__12255 = f;
var G__12256 = g;
var G__12257 = h;
var G__12258 = i;
var G__12259 = j;
var G__12260 = k;
var G__12261 = l;
var G__12262 = m;
var G__12263 = n;
var G__12264 = o;
var G__12265 = p;
var G__12266 = q;
var G__12267 = r;
var G__12268 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268) : target_fn.call(null,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12269 = a;
var G__12270 = b;
var G__12271 = c;
var G__12272 = d;
var G__12273 = e;
var G__12274 = f;
var G__12275 = g;
var G__12276 = h;
var G__12277 = i;
var G__12278 = j;
var G__12279 = k;
var G__12280 = l;
var G__12281 = m;
var G__12282 = n;
var G__12283 = o;
var G__12284 = p;
var G__12285 = q;
var G__12286 = r;
var G__12287 = s;
var G__12288 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287,G__12288) : self__.dispatch_fn.call(null,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287,G__12288));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12289 = a;
var G__12290 = b;
var G__12291 = c;
var G__12292 = d;
var G__12293 = e;
var G__12294 = f;
var G__12295 = g;
var G__12296 = h;
var G__12297 = i;
var G__12298 = j;
var G__12299 = k;
var G__12300 = l;
var G__12301 = m;
var G__12302 = n;
var G__12303 = o;
var G__12304 = p;
var G__12305 = q;
var G__12306 = r;
var G__12307 = s;
var G__12308 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302,G__12303,G__12304,G__12305,G__12306,G__12307,G__12308) : target_fn.call(null,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302,G__12303,G__12304,G__12305,G__12306,G__12307,G__12308));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12310 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12310);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4342__auto__,writer__4343__auto__,opt__4344__auto__){
return cljs.core._write(writer__4343__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__12315 = msg;
return Error(G__12315);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12320 = x;
var G__12321 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12320,G__12321) : pred.call(null,G__12320,G__12321));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12322 = y;
var G__12323 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12322,G__12323) : pred.call(null,G__12322,G__12323));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map